{"version":3,"sources":["reducers/apiReducers/Movies.js","actionTypes/actionTypes.js","reducers/apiReducers/TV.js","reducers/apiRootReducer.js","reducers/AppReducer.js","reducers/RootReducer.js","store/store.js","actions/AppAction.js","actions/apiActions/Api.js","actions/apiActions/Movies.js","actions/apiActions/TV.js","utils/fetchApi.js","components/Signin/Signin.js","components/Signup/Signup.js","components/SignDialog/SignDialog.js","components/AccountSettings/AccountSettings.js","components/Menu/Menu.js","components/RenderDataListItem/RenderDataListItem.js","components/Search/Search.js","components/AccountMenu/AccountMenu.js","components/Header/Header.js","components/Home/Home.js","components/UserData/UserData.js","components/GridPreview/GridPreview.js","components/Preview/Preview.js","container/App.js","index.js"],"names":["initialState","nowPlaying","popular","topRated","upcoming","genres","totalPages","totalResults","moviesReducer","state","action","type","payload","total_pages","total_results","results","airingToday","onTv","tvReducer","trendingInitialState","apiRootReducer","combineReducers","trending","movies","movieReducer","tv","error","openSignDialog","openSearchDialog","openCustomizeDialog","gridPreviewApiCategory","gridPreviewApiType","gridPreviewApiTitle","preview","users","JSON","parse","localStorage","getItem","user","appReducer","rootReducer","api","ApiRootReducer","app","AppReducer","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","setOpenSignDialog","bool","setOpenSearchDialog","setOpenCustomizeDialog","setGridPreviewApiCategory","category","setGridPreviewApiType","setGridPreviewApiTitle","setPreview","item","setUsers","setUser","fetchApiTrending","data","fetchApiError","fetchApiMovieNowPlaying","fetchApiMoviePopular","fetchApiMovieTopRated","fetchApiMovieUpcoming","fetchApiMovieGenres","fetchApiTVAiringToday","fetchApiTVOnTv","fetchApiTVPopular","fetchApiTVTopRated","fetchApiTVGenres","fetchApiData","link","fetch","then","response","json","status_message","catch","actions","useStyles","makeStyles","theme","Header","fontWeight","typography","fontWeightBold","marginBottom","spacing","Avatar","cursor","width","height","fontSize","h1","fontWeightMedium","marginRight","Input","borderRadius","shape","border","palette","text","hint","color","primary","padding","transition","InputActive","main","InputError","InputSuccess","success","TextSuccess","margin","opacity","TextError","TextHidden","ButtonGroup","boxShadow","Buttons","filter","GuestButton","SigninButton","common","white","OtherButton","background","textTransform","fontWeightRegular","marginTop","Primary","marginLeft","body1","h2","Signin","handleClickDialog","handleUpdateState","Style","useState","usernameFocused","setUsernameFocused","usernameValue","setUsernameValue","passwordFocused","setPasswordFocused","passwordValue","setPasswordValue","setError","handleClickSignin","event","preventDefault","currentUsers","length","userChosen","forEach","username","password","setTimeout","newUser","id","Math","random","access","initials","likes","movie","watchlist","Grid","container","direction","Fragment","Typography","className","variant","alignItems","justify","map","key","xs","Tooltip","placement","title","alt","style","backgroundColor","onClick","Box","mb","my","FormControl","aria-label","fullWidth","onChange","target","value","handleUsernameChange","onBlur","placeholder","handlePasswordChange","align","disableRipple","size","Button","mt","CancelButton","SignupButton","Signup","usernameError","setUsernameError","usernameExistError","setUsernameExistError","usernameErrorText","setUsernameErrorText","passwordError","setPasswordError","handleUsernameValidation","match","checkUserExists","colors","onKeyPress","onMouseDown","initial","split","replace","letter","toUpperCase","jwt","sign","floor","push","handleSignup","disabled","Dialog","backdropFilter","connect","dispatch","bindActionCreators","appActions","props","currentPage","setCurrentPage","signInAnimation","setSignInAnimation","signUpAnimation","setSignUpAnimation","location","reload","setItem","stringify","aria-labelledby","disableBackdropClick","disableEscapeKeyDown","maxWidth","open","TransitionComponent","Fade","transitionDuration","DialogTitle","DialogContent","secondary","hover","focus","ButtonContent","display","lineHeight","ColorAvatarContainer","flexDirection","textAlign","ColorAvatar","h4","MarginBottom","SaveButton","h6","undefined","initialsValue","setInitialsValue","currentColor","setCurrentColor","handleClickCloseCustomizeDialog","onClose","p","wrap","Hidden","smUp","xsDown","updatedUser","updatedUsers","newitem","handleSaveCustomization","Drawer","minWidth","CloseButton","ButtonActive","ButtonFolderActive","MarginRight","IconActive","transform","IconInactive","Nested","paddingLeft","Divider","openMovies","setOpenMovies","openTV","setOpenTV","movieTypes","tvTypes","handleOpenPage","handleCloseDrawer","anchor","elevation","openDrawer","List","ListItem","button","ListItemText","handleClickOpenSearchDialog","flex","Collapse","in","timeout","unmountOnExit","disablePadding","handleClickOpenCustomizeDialog","Container","Poster","Content","Rating","warning","LikeButton","LikedButton","WatchlistButton","dark","WatchlistRemoveButton","h5","Title","Year","typeData","handleGetDate","date","addRemoveList","array","check","otherItem","updateLikedArray","handleAddToWatchlist","newWatchlistArray","index","sm","Card","animationDelay","CardActionArea","CardMedia","original_name","component","image","poster_path","handleOpenPreview","CardContent","vote_average","gutterBottom","first_air_date","release_date","CardActions","disableSpacing","IconButton","newLikedArray","handleLikeMovie","likeItem","renderLike","mx","watchItem","mr","renderWatchlist","Search","SearchActive","Visible","Margin","ShowSelectContent","handleShowChange","showValue","TextField","select","paddingRight","MenuItem","searchFocused","setSearchFocused","searchEntered","setSearchEntered","searchValue","setSearchValue","setShowValue","showChanged","setShowChanged","searchMovieData","setSearchMovieData","searchTVData","setSearchTVData","searchResultsNumber","setSearchResultsNumber","searchPageNumber","setSearchPageNumber","currentOffset","setCurrentOffset","handleClickCloseSearchDialog","useEffect","String","console","log","fullScreen","Slide","disableGutters","handleSearchChange","handleClickSearch","startAdornment","InputAdornment","position","currentPageColor","otherPageColor","limit","offset","total","page","next","scrollTo","handleClickChangePage","Signout","ListItems","handleClosePopover","removeItem","handleClickSignOut","Popover","popperID","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","openPopper","Grow","divider","Paper","React","setOpenDrawer","setAnchorEl","setOpenPopper","handleClickOpenMenuDrawer","handleClickOpenAccountMenuPopover","currentTarget","Toolbar","edge","aria-describedby","ml","TrendingItem","TrendingContainer","overflowX","overflowY","RenderHomeApiData","header","dataName","newData","endIcon","media","media_type","src","moviePopular","tvPopular","SortButton","Results","body2","RenderSortSection","sortValue","sortGroup","handleSortChange","setSortGroup","setSortValue","handleUpdateSort","handleRemoveSort","movieGenres","name","includes","tvGenres","handleShowData","newApiDataSorted","genre","genre_ids","itemGenre","RenderDataElements","movieTopRated","tvTopRated","movieTotalPages","movieTotalResults","tvTotalPages","tvTotalResults","apiAction","movieActions","tvActions","animation","setAnimation","newSortGroup","updatedSortGroup","fetchApi","fetchMovieApiData","fetchTvApiData","SimilarPoster","hasFetched","setHasFetched","fetchedData","setFetchedData","temporaryValue","randomIndex","currentIndex","shuffle","backdrop_path","paragraph","overview","fetchedItem","App","componentDidMount","getUser","Object","keys","fetchTrendingApiData","fetchTrendingApiPopular","fetchTrendingApiGenres","createMuiTheme","black","contrastThreshold","fontFamily","CssBaseline","ThemeProvider","this","py","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.82dcae30.chunk.js","sourcesContent":["import * as actionType from '../../actionTypes/actionTypes';\r\n\r\nconst initialState = {\r\n    nowPlaying: [],\r\n    popular: [],\r\n    topRated: [],\r\n    upcoming: [],\r\n    genres: [],\r\n    totalPages: 0,\r\n    totalResults: 0,\r\n}\r\n\r\nconst moviesReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case actionType.FETCH_API_MOVIE_NOWPLAYING:\r\n            return {\r\n                ...state,\r\n                totalPages: action.payload.total_pages,\r\n                totalResults: action.payload.total_results,\r\n                nowPlaying: action.payload.results\r\n            }\r\n        case actionType.FETCH_API_MOVIE_POPULAR:\r\n            return {\r\n                ...state,\r\n                totalPages: action.payload.total_pages,\r\n                totalResults: action.payload.total_results,\r\n                popular: action.payload.results\r\n            }\r\n        case actionType.FETCH_API_MOVIE_TOPRATED:\r\n            return {\r\n                ...state,\r\n                totalPages: action.payload.total_pages,\r\n                totalResults: action.payload.total_results,\r\n                topRated: action.payload.results\r\n            }\r\n        case actionType.FETCH_API_MOVIE_UPCOMING:\r\n            return {\r\n                ...state,\r\n                totalPages: action.payload.total_pages,\r\n                totalResults: action.payload.total_results,\r\n                upcoming: action.payload.results\r\n            }\r\n        case actionType.FETCH_API_MOVIE_GENRES:\r\n            return {\r\n                ...state,\r\n                genres: action.payload.genres\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport default moviesReducer;","// Internal State (APP)\r\nexport const SET_OPENSIGNDIALOG = 'SET_OPENSIGNDIALOG';\r\nexport const SET_OPENSEARCHDIALOG = 'SET_OPENSEARCHDIALOG';\r\nexport const SET_OPENCUSTOMIZEDIALOG = 'SET_OPENCUSTOMIZEDIALOG';\r\nexport const SET_GRIDPREVIEWAPICATEGORY = 'SET_GRIDPREVIEWAPICATEGORY';\r\nexport const SET_GRIDPREVIEWAPITYPE = 'SET_GRIDPREVIEWAPITYPE';\r\nexport const SET_GRIDPREVIEWAPITITLE = 'SET_GRIDPREVIEWAPITITLE';\r\nexport const SET_PREVIEW = 'SET_PREVIEW';\r\nexport const SET_USERS = 'SET_USERS';\r\nexport const SET_USER = 'SET_USER';\r\n\r\n// External State (API)\r\nexport const FETCH_API_TRENDING = 'FETCH_API_TRENDING';\r\nexport const FETCH_API_ERROR = 'FETCH_API_ERROR';\r\n\r\n// API Movies\r\nexport const FETCH_API_MOVIE_NOWPLAYING = 'FETCH_API_MOVIE_NOWPLAYING';\r\nexport const FETCH_API_MOVIE_POPULAR = 'FETCH_API_MOVIE_POPULAR';\r\nexport const FETCH_API_MOVIE_TOPRATED = 'FETCH_API_MOVIE_TOPRATED';\r\nexport const FETCH_API_MOVIE_UPCOMING = 'FETCH_API_MOVIE_UPCOMING';\r\nexport const FETCH_API_MOVIE_GENRES = 'FETCH_API_MOVIE_GENRES';\r\n\r\n// API TV\r\nexport const FETCH_API_TV_AIRINGTODAY = 'FETCH_API_TV_AIRINGTODAY';\r\nexport const FETCH_API_TV_ONTV = 'FETCH_API_TV_ONTV';\r\nexport const FETCH_API_TV_POPULAR = 'FETCH_API_TV_POPULAR';\r\nexport const FETCH_API_TV_TOPRATED = 'FETCH_API_TV_TOPRATED';\r\nexport const FETCH_API_TV_GENRES = 'FETCH_API_TV_GENRES';","import * as actionType from '../../actionTypes/actionTypes';\r\n\r\nconst initialState = {\r\n    airingToday: [],\r\n    onTv: [],\r\n    popular: [],\r\n    topRated: [],\r\n    genres: [],\r\n    totalPages: 0,\r\n    totalResults: 0,\r\n}\r\n\r\nconst tvReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case actionType.FETCH_API_TV_AIRINGTODAY:\r\n            return {\r\n                ...state,\r\n                totalPages: action.payload.total_pages,\r\n                totalResults: action.payload.total_results,\r\n                airingToday: action.payload.results\r\n            }\r\n        case actionType.FETCH_API_TV_ONTV:\r\n            return {\r\n                ...state,\r\n                totalPages: action.payload.total_pages,\r\n                totalResults: action.payload.total_results,\r\n                onTv: action.payload.results\r\n            }\r\n        case actionType.FETCH_API_TV_POPULAR:\r\n            return {\r\n                ...state,\r\n                totalPages: action.payload.total_pages,\r\n                totalResults: action.payload.total_results,\r\n                popular: action.payload.results\r\n            }\r\n        case actionType.FETCH_API_TV_TOPRATED:\r\n            return {\r\n                ...state,\r\n                totalPages: action.payload.total_pages,\r\n                totalResults: action.payload.total_results,\r\n                topRated: action.payload.results\r\n            }\r\n        case actionType.FETCH_API_TV_GENRES:\r\n            return {\r\n                ...state,\r\n                genres: action.payload.genres\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport default tvReducer;","import { combineReducers } from 'redux';\r\nimport * as actionType from '../actionTypes/actionTypes';\r\n\r\n// Reducers\r\nimport movieReducer from  './apiReducers/Movies';\r\nimport tvReducer from  './apiReducers/TV';\r\n\r\nconst trendingInitialState = {};\r\n\r\nconst errorInitialState = null;\r\n\r\nconst trendingReducer = (state = trendingInitialState, action) => {\r\n    switch(action.type) {\r\n        case actionType.FETCH_API_TRENDING:\r\n            return action.payload\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nconst errorReducer = (state = errorInitialState, action) => {\r\n    switch(action.type) {\r\n        case actionType.FETCH_API_ERROR:\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nconst apiRootReducer = combineReducers({trending: trendingReducer, movies: movieReducer, tv: tvReducer, error: errorReducer});\r\n\r\nexport default apiRootReducer;","import * as actionType from '../actionTypes/actionTypes';\r\n\r\nconst getUsers = JSON.parse(localStorage.getItem('users') || '[]');\r\nconst getUser = JSON.parse(localStorage.getItem('user') || '{}');\r\n\r\nconst initialState = {\r\n    openSignDialog: true,\r\n    openSearchDialog: false,\r\n    openCustomizeDialog: false,\r\n    gridPreviewApiCategory: '',\r\n    gridPreviewApiType: '',\r\n    gridPreviewApiTitle: '',\r\n    preview: {},\r\n    users: getUsers,\r\n    user: getUser\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case actionType.SET_OPENSIGNDIALOG:\r\n            return {\r\n                ...state,\r\n                openSignDialog: action.payload\r\n            }\r\n        case actionType.SET_OPENSEARCHDIALOG:\r\n            return {\r\n                ...state,\r\n                openSearchDialog: action.payload\r\n            }\r\n        case actionType.SET_OPENCUSTOMIZEDIALOG:\r\n            return {\r\n                ...state,\r\n                openCustomizeDialog: action.payload\r\n            }\r\n        case actionType.SET_GRIDPREVIEWAPICATEGORY:\r\n            return {\r\n                ...state,\r\n                gridPreviewApiCategory: action.payload,\r\n            }\r\n        case actionType.SET_GRIDPREVIEWAPITYPE:\r\n            return {\r\n                ...state,\r\n                gridPreviewApiType: action.payload,\r\n            }\r\n        case actionType.SET_GRIDPREVIEWAPITITLE:\r\n            return {\r\n                ...state,\r\n                gridPreviewApiTitle: action.payload,\r\n            }\r\n        case actionType.SET_PREVIEW:\r\n            return {\r\n                ...state,\r\n                preview: action.payload\r\n            } \r\n        case actionType.SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: action.payload\r\n            } \r\n        case actionType.SET_USER:\r\n            return {\r\n                ...state,\r\n                user: action.payload\r\n            } \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default appReducer;","import { combineReducers } from 'redux'\r\n\r\n// Reducers\r\nimport ApiRootReducer from './apiRootReducer';\r\nimport AppReducer from './AppReducer';\r\n\r\n\r\nconst rootReducer = combineReducers({api: ApiRootReducer, app: AppReducer})\r\n\r\nexport default rootReducer;","import { createStore } from 'redux';\r\nimport rootReducer from '../reducers/RootReducer';\r\n\r\nconst store = createStore(rootReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\r\n\r\nexport default store;","import * as actionType from '../actionTypes/actionTypes';\r\n\r\nexport const setOpenSignDialog = (bool) => {\r\n    return {\r\n        type: actionType.SET_OPENSIGNDIALOG,\r\n        payload: bool\r\n    }\r\n};\r\n\r\nexport const setOpenSearchDialog = (bool) => {\r\n    return {\r\n        type: actionType.SET_OPENSEARCHDIALOG,\r\n        payload: bool\r\n    }\r\n};\r\n\r\nexport const setOpenCustomizeDialog = (bool) => {\r\n    return {\r\n        type: actionType.SET_OPENCUSTOMIZEDIALOG,\r\n        payload: bool\r\n    }\r\n};\r\n\r\nexport const setGridPreviewApiCategory = (category) => {\r\n    return {\r\n        type: actionType.SET_GRIDPREVIEWAPICATEGORY,\r\n        payload: category\r\n    }\r\n};\r\n\r\nexport const setGridPreviewApiType = (type) => {\r\n    return {\r\n        type: actionType.SET_GRIDPREVIEWAPITYPE,\r\n        payload: type\r\n    }\r\n};\r\n\r\nexport const setGridPreviewApiTitle = (type) => {\r\n    return {\r\n        type: actionType.SET_GRIDPREVIEWAPITITLE,\r\n        payload: type\r\n    }\r\n};\r\n\r\nexport const setPreview = (item) => {\r\n    return {\r\n        type: actionType.SET_PREVIEW,\r\n        payload: item\r\n    }\r\n};\r\n\r\nexport const setUsers = (users) => {\r\n    return {\r\n        type: actionType.SET_USERS,\r\n        payload: users\r\n    }\r\n};\r\n\r\nexport const setUser = (user) => {\r\n    return {\r\n        type: actionType.SET_USER,\r\n        payload: user\r\n    }\r\n};","import * as actionType from '../../actionTypes/actionTypes';\r\n\r\nexport const fetchApiTrending = (data) => {\r\n    return {\r\n        type: actionType.FETCH_API_TRENDING,\r\n        payload: data\r\n    }\r\n};\r\n\r\nexport const fetchApiError = (error) => {\r\n    return {\r\n        type: actionType.FETCH_API_ERROR,\r\n        payload: error\r\n    }\r\n};","import * as actionType from '../../actionTypes/actionTypes';\r\n\r\nexport const fetchApiMovieNowPlaying = (data) => {\r\n    return {\r\n        type: actionType.FETCH_API_MOVIE_NOWPLAYING,\r\n        payload: data\r\n    }\r\n};\r\n\r\nexport const fetchApiMoviePopular = (data) => {\r\n    return {\r\n        type: actionType.FETCH_API_MOVIE_POPULAR,\r\n        payload: data\r\n    }\r\n};\r\n\r\nexport const fetchApiMovieTopRated = (data) => {\r\n    return {\r\n        type: actionType.FETCH_API_MOVIE_TOPRATED,\r\n        payload: data\r\n    }\r\n};\r\n\r\nexport const fetchApiMovieUpcoming = (data) => {\r\n    return {\r\n        type: actionType.FETCH_API_MOVIE_UPCOMING,\r\n        payload: data\r\n    }\r\n};\r\n\r\nexport const fetchApiMovieGenres = (data) => {\r\n    return {\r\n        type: actionType.FETCH_API_MOVIE_GENRES,\r\n        payload: data\r\n    }\r\n};","import * as actionType from '../../actionTypes/actionTypes';\r\n\r\nexport const fetchApiTVAiringToday = (data) => {\r\n    return {\r\n        type: actionType.FETCH_API_TV_AIRINGTODAY,\r\n        payload: data\r\n    }\r\n};\r\n\r\nexport const fetchApiTVOnTv= (data) => {\r\n    return {\r\n        type: actionType.FETCH_API_TV_ONTV,\r\n        payload: data\r\n    }\r\n};\r\n\r\nexport const fetchApiTVPopular = (data) => {\r\n    return {\r\n        type: actionType.FETCH_API_TV_POPULAR,\r\n        payload: data\r\n    }\r\n};\r\n\r\nexport const fetchApiTVTopRated = (data) => {\r\n    return {\r\n        type: actionType.FETCH_API_TV_TOPRATED,\r\n        payload: data\r\n    }\r\n};\r\n\r\nexport const fetchApiTVGenres = (data) => {\r\n    return {\r\n        type: actionType.FETCH_API_TV_GENRES,\r\n        payload: data\r\n    }\r\n};","// Actions Types\r\nimport * as actions from '../actions/apiActions/Api';\r\n\r\nconst fetchApiData = (link, action) => {\r\n    fetch(link)\r\n    .then(response => response.json())\r\n    .then(json => {\r\n        if(json.status_message) {\r\n            throw(json.status_message);\r\n        } else {\r\n            action(json);\r\n        }\r\n    })\r\n    .catch(error => {\r\n        actions.fetchApiError(error);\r\n    })\r\n}\r\n\r\nexport default fetchApiData;","import React, {useState} from 'react';\r\n\r\n// Material UI Components\r\nimport { makeStyles, Grid, Typography, Tooltip, Avatar, Box, FormControl, Input, ButtonGroup, Button} from '@material-ui/core';\r\n\r\n// Material UI Custom Component Style\r\nconst useStyles = makeStyles((theme) => ({\r\n    Header: {\r\n        fontWeight: theme.typography.fontWeightBold,\r\n        marginBottom: theme.spacing(0.25),\r\n    },\r\n    Avatar: {\r\n        cursor: 'pointer',\r\n        width: '100px',\r\n        height: '100px',\r\n        fontSize: theme.typography.h1.fontSize,\r\n        fontWeight: theme.typography.fontWeightMedium,\r\n        marginRight: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n    Input: {\r\n        borderRadius: theme.shape.borderRadius,\r\n        border: `1px solid ${theme.palette.text.hint}`,\r\n        color: theme.palette.text.primary,\r\n        padding: theme.spacing(1, 2),\r\n        transition: '0.4s ease-in-out',\r\n        '&:hover': {\r\n            border: `2px solid ${theme.palette.text.primary}`,\r\n        },\r\n        '&::before': {\r\n            border: [['none'], '!important'],\r\n        },\r\n        '&::after': {\r\n            border: [['none'], '!important'],\r\n        }\r\n    },\r\n    InputActive: {\r\n        border: `2px solid ${theme.palette.primary.main}`,\r\n    },\r\n    InputError: {\r\n        border: `2px solid ${theme.palette.error.main}`,\r\n    },\r\n    InputSuccess: {\r\n        border: `2px solid ${theme.palette.success.main}`,\r\n    },\r\n    TextSuccess: {\r\n        transition: '0.4s ease-in-out',\r\n        color: theme.palette.success.main,\r\n        margin: theme.spacing(1, 0),\r\n        opacity: 1 \r\n    },\r\n    TextError: {\r\n        transition: '0.4s ease-in-out',\r\n        color: theme.palette.error.main,\r\n        margin: theme.spacing(1, 0),\r\n        opacity: 1 \r\n    },\r\n    TextHidden: {\r\n        transition: '0.4s ease-in-out',\r\n        opacity: 0\r\n    },\r\n    ButtonGroup: {\r\n        boxShadow: 'none',\r\n        '&:hover': {\r\n            boxShadow: 'none',\r\n        }\r\n    },\r\n    Buttons: {\r\n        transition: '0.4s ease-in-out',\r\n        margin: theme.spacing(0, 2),\r\n        border: [['none'], '!important'],\r\n        borderRadius: [[theme.shape.borderRadius], '!important'],\r\n        '&:hover': {\r\n            filter: 'brightness(95%)',\r\n        }\r\n    },\r\n    GuestButton: {\r\n        boxShadow: 'none',\r\n        '&:hover': {\r\n            boxShadow: 'none',\r\n        }\r\n    },\r\n    SigninButton: {\r\n        color: theme.palette.common.white,\r\n        boxShadow: 'none',\r\n        '&:hover': {\r\n            boxShadow: 'none',\r\n        }\r\n    },\r\n    OtherButton: {\r\n        background: 'transparent',\r\n        textTransform: 'capitalize',\r\n        fontSize: '14px',\r\n        fontWeight: theme.typography.fontWeightRegular,\r\n        marginTop: theme.spacing(1),\r\n\r\n        '&:hover': {\r\n            background: 'transparent',\r\n        }\r\n    },\r\n    Primary: {\r\n        marginLeft: theme.spacing(0.5),\r\n        fontWeight: theme.typography.fontWeightMedium,\r\n        color: theme.palette.primary.main\r\n    },\r\n    '@media (max-width: 425px)': {\r\n        Header: {\r\n            fontSize: theme.typography.body1.fontSize\r\n        },\r\n        Avatar: {\r\n            width: '65px',\r\n            height: '65px',\r\n            fontSize: theme.typography.h2.fontSize,\r\n            marginBottom: theme.spacing(1),\r\n        },\r\n        Buttons: {\r\n            margin: theme.spacing(0, 1),\r\n        },\r\n        GuestButton: {\r\n            fontSize: '13px',\r\n        },\r\n        OtherButton: {\r\n            fontSize: '12px',\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function Signin( {users, handleClickDialog, handleUpdateState} ) {\r\n    const Style = useStyles();\r\n\r\n    // Username Input State\r\n    const [usernameFocused, setUsernameFocused] = useState(false); \r\n    const [usernameValue, setUsernameValue] = useState('');  \r\n    \r\n    // Password Input State\r\n    const [passwordFocused, setPasswordFocused] = useState(false); \r\n    const [passwordValue, setPasswordValue] = useState('');  \r\n\r\n    const [error, setError] = useState(null);  \r\n    \r\n    // Username Input Methods \r\n    // This method will save whatever the user types in the text field\r\n    const handleUsernameChange = (event) => {\r\n        event.preventDefault();\r\n        setUsernameValue(event.target.value);\r\n    }\r\n\r\n    // This method will set the username to the clicked avatar\r\n    const handleClickSetUsername = (text) => {\r\n        setUsernameValue(text);\r\n    }\r\n\r\n    // Password Input Methods \r\n    // This method will save whatever the user types in the text field\r\n    const handlePasswordChange = (event) => {\r\n        event.preventDefault();\r\n        setPasswordValue(event.target.value);\r\n    }\r\n\r\n    // This method will check whether there is a user registered with the given input text\r\n    const handleClickSignin = (event, type) => {\r\n        event.preventDefault();\r\n\r\n        const currentUsers = [...users];\r\n\r\n        if(type === 'user'){\r\n            if(currentUsers.length === 0){\r\n                setError(true);\r\n            }else{\r\n                let userChosen = false;\r\n\r\n                currentUsers.forEach(item => {\r\n                    if(usernameValue === item.username && passwordValue === item.password){\r\n                        setError(false);\r\n                        userChosen = true;\r\n                        handleUpdateState(currentUsers, item);\r\n                        setTimeout(() => {\r\n                            handleClickDialog('correct');\r\n                        }, 500);\r\n                    }else if(userChosen === false){\r\n                        setError(true);\r\n                    }\r\n                });\r\n            }\r\n        }else{\r\n            const newUser = {\r\n                id: Math.random(),\r\n                username: 'Guest',\r\n                password: '',\r\n                access: 'guest',\r\n                initials: 'G',\r\n                likes: {\r\n                    movie: [],\r\n                    tv: [],\r\n                },\r\n                watchlist: {\r\n                    movie: [],\r\n                    tv: [],\r\n                },\r\n                color: '#757575',\r\n            }\r\n\r\n            handleUpdateState(currentUsers, newUser);\r\n            setTimeout(() => {\r\n                handleClickDialog('correct');\r\n            }, 500);\r\n        }\r\n    }\r\n\r\n    // This method will open the popper\r\n    // const handleGuestPopperOpen = (event) => {\r\n    //     setAnchorEl(event.currentTarget);\r\n    // }\r\n\r\n    // This method will close the popper\r\n    // const handleGuestPopperClose = () => {\r\n    //     setAnchorEl(null);\r\n    // }\r\n\r\n    return (\r\n        <Grid container direction='column'>\r\n            {\r\n                (users.length === 0)\r\n                    ? null\r\n                        : \r\n                        <React.Fragment>\r\n                            <Grid item>\r\n                                <Typography className={Style.Header} variant='h6' color='textPrimary'>\r\n                                    Accounts\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item container direction='row' alignItems='center' justify='flex-start'>\r\n                                {\r\n                                    users.map((item) => {\r\n                                        return(\r\n                                            <Grid key={item.id} item xs={'auto'}>\r\n                                                <Tooltip placement='bottom' title={item.username}>\r\n                                                    <Avatar\r\n                                                        alt={item.username}\r\n                                                        className={Style.Avatar}\r\n                                                        style={{backgroundColor: item.color}}\r\n                                                        variant='rounded'\r\n                                                        onClick={() => handleClickSetUsername(item.username)}\r\n                                                    >\r\n                                                        {item.initials}\r\n                                                    </Avatar>\r\n                                                </Tooltip>\r\n                                            </Grid>\r\n                                        );\r\n                                    })\r\n                                }\r\n                            </Grid>\r\n                        </React.Fragment>\r\n            }\r\n            <Box mb={2} />\r\n            <Grid item>\r\n                <Typography variant='body1'>\r\n                    Username\r\n                </Typography>\r\n                <Box my={0.25} />\r\n                <FormControl style={{width: '100%'}}>\r\n                    <Input\r\n                        aria-label='Change Username'\r\n                        color='secondary'\r\n                        className={usernameFocused === true ? `${Style.Input} ${Style.InputActive}` : error === true ? `${Style.Input} ${Style.InputError}` : error === false ? `${Style.Input} ${Style.InputSuccess}` : Style.Input}\r\n                        error={error}\r\n                        fullWidth\r\n                        onChange={(event) => handleUsernameChange(event)}\r\n                        onBlur={() => setUsernameFocused(false)}\r\n                        placeholder='JohnSmith'\r\n                        type='text'\r\n                        variant='outlined'\r\n                        value={usernameValue}\r\n                    />\r\n                </FormControl>\r\n            </Grid>\r\n            <Box my={0.5} />\r\n            <Grid item>\r\n                <Typography variant='body1'>\r\n                    Password\r\n                </Typography>\r\n                <Box my={0.25} />\r\n                <FormControl style={{width: '100%'}}>\r\n                    <Input\r\n                        aria-label='Change Password'\r\n                        color='secondary'\r\n                        className={passwordFocused === true ? `${Style.Input} ${Style.InputActive}` : error === true ? `${Style.Input} ${Style.InputError}` : error === false ? `${Style.Input} ${Style.InputSuccess}` : Style.Input}\r\n                        error={error}\r\n                        fullWidth\r\n                        onChange={(event) => handlePasswordChange(event)}\r\n                        onBlur={() => setPasswordFocused(false)}\r\n                        type='password'\r\n                        variant='outlined'\r\n                        value={passwordValue}\r\n                    />\r\n                </FormControl>\r\n            </Grid>\r\n            <Grid item>\r\n                <Typography align='center' className={error === true ? Style.TextError : error === false ? Style.TextSuccess : Style.TextHidden}>{error === true ? 'Sign in credentials are incorrect!' : error === false ? 'Sign in credentials are correct!' : 'Hidden'}</Typography>\r\n            </Grid>\r\n            <Grid item>\r\n                <ButtonGroup className={Style.ButtonGroup} disableRipple fullWidth size='large' variant='contained'>\r\n                    <Button className={`${Style.Buttons} ${Style.GuestButton}`} onClick={(event) => handleClickSignin(event, 'guest')}>As Guest</Button>\r\n                    <Button color='secondary' className={`${Style.Buttons} ${Style.SigninButton}`} onClick={(event) => handleClickSignin(event, 'user')}>Sign in</Button>\r\n                </ButtonGroup>\r\n                <Box mt={0.5} />\r\n                <Button \r\n                    className={Style.OtherButton}\r\n                    color='default' \r\n                    disableRipple \r\n                    fullWidth \r\n                    size='large' \r\n                    variant='text' \r\n                    onClick={() => handleClickDialog('up')}>Don't have an account? <span className={Style.Primary}>Click here</span>\r\n                </Button>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n","import React, {useState} from 'react';\r\n\r\n// Material UI Components\r\nimport { makeStyles, Grid, Typography, Box, FormControl, Input, ButtonGroup, Button} from '@material-ui/core';\r\n\r\n// JSON Web Token\r\nimport jwt from 'jsonwebtoken';\r\n\r\n// Material UI Custom Component Style\r\nconst useStyles = makeStyles((theme) => ({\r\n    Input: {\r\n        borderRadius: theme.shape.borderRadius,\r\n        border: `1px solid ${theme.palette.text.hint}`,\r\n        color: theme.palette.text.primary,\r\n        padding: theme.spacing(1, 2),\r\n        transition: '0.4s ease-in-out',\r\n        '&:hover': {\r\n            border: `2px solid ${theme.palette.text.primary}`,\r\n        },\r\n        '&::before': {\r\n            border: [['none'], '!important'],\r\n        },\r\n        '&::after': {\r\n            border: [['none'], '!important'],\r\n        }\r\n    },\r\n    InputActive: {\r\n        border: `2px solid ${theme.palette.primary.main}`,\r\n    },\r\n    InputError: {\r\n        border: `2px solid ${theme.palette.error.main}`,\r\n    },\r\n    InputSuccess: {\r\n        border: `2px solid ${theme.palette.success.main}`,\r\n    },\r\n    TextSuccess: {\r\n        transition: '0.4s ease-in-out',\r\n        color: theme.palette.success.main,\r\n        margin: theme.spacing(1, 0),\r\n        opacity: 1 \r\n    },\r\n    TextError: {\r\n        transition: '0.4s ease-in-out',\r\n        color: theme.palette.error.main,\r\n        margin: theme.spacing(1, 0),\r\n        opacity: 1 \r\n    },\r\n    TextHidden: {\r\n        transition: '0.4s ease-in-out',\r\n        opacity: 0\r\n    },\r\n    ButtonGroup: {\r\n        boxShadow: 'none',\r\n        '&:hover': {\r\n            boxShadow: 'none',\r\n        }\r\n    },\r\n    Buttons: {\r\n        transition: '0.4s ease-in-out',\r\n        margin: theme.spacing(0, 2),\r\n        border: [['none'], '!important'],\r\n        borderRadius: [[theme.shape.borderRadius], '!important'],\r\n        '&:hover': {\r\n            filter: 'brightness(95%)',\r\n        }\r\n    },\r\n    CancelButton: {\r\n        boxShadow: 'none',\r\n        '&:hover': {\r\n            boxShadow: 'none',\r\n        }\r\n    },\r\n    SignupButton: {\r\n        color: theme.palette.common.white,\r\n        boxShadow: 'none',\r\n        '&:hover': {\r\n            boxShadow: 'none',\r\n        }\r\n    },\r\n    OtherButton: {\r\n        background: 'transparent',\r\n        textTransform: 'capitalize',\r\n        fontSize: '14px',\r\n        fontWeight: theme.typography.fontWeightRegular,\r\n        marginTop: theme.spacing(1),\r\n\r\n        '&:hover': {\r\n            background: 'transparent',\r\n        }\r\n    },\r\n    Primary: {\r\n        marginLeft: theme.spacing(0.5),\r\n        fontWeight: theme.typography.fontWeightMedium,\r\n        color: theme.palette.primary.main\r\n    },\r\n    '@media (max-width: 425px)': {\r\n        Buttons: {\r\n            margin: theme.spacing(0, 1),\r\n        },\r\n        CancelButton: {\r\n            fontSize: '13px',\r\n        },\r\n        OtherButton: {\r\n            fontSize: '12px',\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function Signup( {users, handleClickDialog, handleUpdateState} ) {\r\n    const Style = useStyles();\r\n\r\n    // Username Input State\r\n    const [usernameFocused, setUsernameFocused] = useState(false); \r\n    const [usernameValue, setUsernameValue] = useState('');  \r\n    const [usernameError, setUsernameError] = useState(null);\r\n    const [usernameExistError, setUsernameExistError] = useState(false);\r\n    const [usernameErrorText, setUsernameErrorText] = useState('Incorrect Input! Example: johnsmith');\r\n    \r\n    // Password Input State\r\n    const [passwordFocused, setPasswordFocused] = useState(false); \r\n    const [passwordValue, setPasswordValue] = useState('');  \r\n    const [passwordError, setPasswordError] = useState(null);\r\n\r\n    \r\n    // Username Input Methods \r\n    // This method will save whatever the user types in the text field\r\n    const handleUsernameChange = (event) => {\r\n        event.preventDefault();\r\n        setUsernameValue(event.target.value);\r\n    }\r\n\r\n    // This method will validate the username text field and if correct will set the initals\r\n    const handleUsernameValidation = () => {\r\n        const validation = /^[a-zA-Z0-9]+$/\r\n\r\n        if(usernameExistError === true){\r\n            setUsernameValue('');\r\n            setUsernameExistError(false);\r\n        }\r\n\r\n        setUsernameFocused(false)\r\n    \r\n        if(usernameValue.match(validation)){\r\n            const currentUsers = [...users];\r\n            let checkUserExists; \r\n\r\n            currentUsers.forEach(item => {\r\n                if(item.username === usernameValue){\r\n                    setUsernameError(true)\r\n                    setUsernameErrorText('Incorrect Input! Username already exists')\r\n                    return checkUserExists = true;\r\n                } else{\r\n                    return checkUserExists = false;\r\n                }\r\n            })\r\n\r\n            if(checkUserExists === true){\r\n                setUsernameError(true);\r\n                setUsernameExistError(true);\r\n                return\r\n            }else {\r\n                setUsernameExistError(false);\r\n                setUsernameError(false);\r\n            }\r\n        }else{\r\n            setUsernameError(true);\r\n        }\r\n    }\r\n\r\n    // Password Input Methods \r\n    // This method will save whatever the user types in the text field\r\n    const handlePasswordChange = (event) => {\r\n        event.preventDefault();\r\n        setPasswordValue(event.target.value);\r\n    }\r\n\r\n    // This method will validate the password text field\r\n    const handlePasswordValidation = () => {\r\n        setPasswordFocused(false)\r\n        \r\n        if(passwordValue.length >= 8){\r\n            setPasswordError(false);\r\n        }else{\r\n            setPasswordError(true);\r\n        }\r\n    }\r\n\r\n    // Colors State\r\n    const colors = [\r\n        {\r\n            id: Math.random(),\r\n            title: 'Pink',\r\n            color: '#EC407A'\r\n        },\r\n        {\r\n            id: Math.random(),\r\n            title: 'Purple',\r\n            color: '#AB47BC'\r\n        },\r\n        {\r\n            id: Math.random(),\r\n            title: 'Indigo',\r\n            color: '#5C6BC0'\r\n        },\r\n        {\r\n            id: Math.random(),\r\n            title: 'Blue',\r\n            color: '#42A5F5'\r\n        },\r\n        {\r\n            id: Math.random(),\r\n            title: 'Teal',\r\n            color: '#26A69A'\r\n        },\r\n        {\r\n            id: Math.random(),\r\n            title: 'Amber',\r\n            color: '#FFCA28'\r\n        },\r\n        {\r\n            id: Math.random(),\r\n            title: 'Orange',\r\n            color: '#FFA726'\r\n        },\r\n        {\r\n            id: Math.random(),\r\n            title: 'Deep Orange',\r\n            color: '#FF7043'\r\n        },\r\n    ]\r\n\r\n    const handleSignup = (event) => {\r\n        event.preventDefault();\r\n\r\n        const currentUsers = [...users];        \r\n\r\n        const newUsername = usernameValue.split('');\r\n        const initial = newUsername[0].replace(/^\\w/, letter => letter.toUpperCase());\r\n        const token = jwt.sign({username: usernameValue, password: passwordValue}, 'secret');\r\n\r\n        const newUser = {\r\n            id: token,\r\n            username: usernameValue,\r\n            password: passwordValue,\r\n            access: 'user',\r\n            initials: initial,\r\n            likes: {\r\n                movie: [],\r\n                tv: [],\r\n            },\r\n            watchlist: {\r\n                movie: [],\r\n                tv: [],\r\n            },\r\n            color: colors[Math.floor(Math.random() * colors.length)].color,\r\n        }\r\n\r\n        currentUsers.push(newUser);\r\n\r\n        handleUpdateState(currentUsers, newUser);\r\n        setTimeout(() => {\r\n            handleClickDialog('correct');\r\n        }, 500);\r\n    }\r\n\r\n    return (\r\n        <Grid container direction='column'>\r\n            <Grid item>\r\n                <Typography variant='body1'>\r\n                    Username\r\n                </Typography>\r\n                <Box my={0.25} />\r\n                <FormControl style={{width: '100%'}}>\r\n                    <Input\r\n                        aria-label='Change Username'\r\n                        color='secondary'\r\n                        className={usernameFocused === true ? `${Style.Input} ${Style.InputActive}` : usernameError === true ? `${Style.Input} ${Style.InputError}` : usernameError === false ? `${Style.Input} ${Style.InputSuccess}` : Style.Input}\r\n                        error={usernameError}\r\n                        \r\n                        fullWidth\r\n                        onChange={(event) => handleUsernameChange(event)}\r\n                        onKeyPress={() => handleUsernameValidation()}\r\n                        onMouseDown={() => setUsernameFocused(true)}\r\n                        onBlur={() => handleUsernameValidation()}\r\n                        placeholder='JohnSmith'\r\n                        type='text'\r\n                        variant='outlined'\r\n                        value={usernameExistError === true ? usernameErrorText : usernameValue}\r\n                    />\r\n                </FormControl>\r\n            </Grid>\r\n            <Box my={0.5} />\r\n            <Grid item>\r\n                <Typography variant='body1'>\r\n                    Password\r\n                </Typography>\r\n                <Box my={0.25} />\r\n                <FormControl style={{width: '100%'}}>\r\n                    <Input\r\n                        aria-label='Change Password'\r\n                        color='secondary'\r\n                        className={passwordFocused === true ? `${Style.Input} ${Style.InputActive}` : passwordError === true ? `${Style.Input} ${Style.InputError}` : passwordError === false ? `${Style.Input} ${Style.InputSuccess}` : Style.Input}\r\n                        error={passwordError}\r\n                        fullWidth\r\n                        onChange={(event) => handlePasswordChange(event)}\r\n                        onMouseDown={() => setPasswordFocused(true)}\r\n                        onBlur={() => handlePasswordValidation()}\r\n                        type='password'\r\n                        variant='outlined'\r\n                        value={passwordValue}\r\n                    />\r\n                </FormControl>\r\n            </Grid>\r\n            <Grid item>\r\n                <Typography align='center' className={usernameError === true || passwordError === true ? Style.TextError : usernameError === false || passwordError === false ? Style.TextSuccess : Style.TextHidden}>{usernameError === true || passwordError === true ? 'Sign in credentials are incorrect!' : usernameError === false || passwordError === false ? 'Sign in credentials are correct!' : 'Hidden'}</Typography>\r\n            </Grid>\r\n            <Grid item>\r\n                <ButtonGroup className={Style.ButtonGroup} disableRipple fullWidth size='large' variant='contained'>\r\n                    <Button className={`${Style.Buttons} ${Style.CancelButton}`} onClick={() => handleClickDialog('in')}>Cancel</Button>\r\n                    <Button color='secondary' className={`${Style.Buttons} ${Style.SignupButton}`} onClick={(event) => handleSignup(event)} disabled={(usernameError === true || usernameError === null) && (passwordError === true || passwordError === null) ? true : false}>Sign up</Button>\r\n                </ButtonGroup>\r\n                <Box mt={0.5} />\r\n                <Button \r\n                    className={Style.OtherButton}\r\n                    color='default' \r\n                    disableRipple \r\n                    fullWidth \r\n                    size='large' \r\n                    variant='text' \r\n                    onClick={() => handleClickDialog('in')}>Don't have an account? <span className={Style.Primary}>Click here</span>\r\n                </Button>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n","import React, {useState} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\n\r\n// Actions\r\nimport * as appActions from '../../actions/AppAction';\r\n\r\n// Components\r\nimport Signin from '../Signin/Signin';\r\nimport Signup from '../Signup/Signup';\r\n\r\n// Material UI Components\r\nimport { makeStyles, Dialog, Fade, DialogTitle, DialogContent} from '@material-ui/core';\r\n\r\n// Material UI Custom Component Style\r\nconst useStyles = makeStyles(() => ({\r\n    Dialog : {\r\n        backdropFilter: 'blur(10px)',\r\n    },\r\n}));\r\n\r\nconst SignDialog = (props) => {\r\n    const Style = useStyles();\r\n\r\n    const [currentPage, setCurrentPage] = useState('in');\r\n\r\n    // Animation State\r\n    const [signInAnimation, setSignInAnimation] = useState(true);\r\n    const [signUpAnimation, setSignUpAnimation] = useState(false);\r\n\r\n    // This method will set the dialog content depending on the currentPage state or close the dialog\r\n    const handleClickDialog = (type) => {\r\n        switch(type){\r\n            case 'in':\r\n                setSignUpAnimation(false);\r\n\r\n                setTimeout(() => {\r\n                    setSignInAnimation(true);\r\n                    setCurrentPage(type);\r\n                }, 1000);\r\n                return;\r\n            case 'up':\r\n                setSignInAnimation(false);\r\n\r\n                setTimeout(() => {\r\n                    setSignUpAnimation(true);\r\n                    setCurrentPage(type);\r\n                }, 1000);\r\n                return;\r\n            case 'correct':\r\n                props.setOpenSignDialog(false);\r\n                setSignInAnimation(true);\r\n                setSignUpAnimation(true);\r\n\r\n                window.location.reload();\r\n                setTimeout(() => {\r\n                    setCurrentPage('in');\r\n                }, 1000);\r\n                return;\r\n            default:\r\n                return;\r\n        }\r\n    }\r\n\r\n    // This method will update the users & user state and local storage\r\n    const handleUpdateState = (users, user) => {\r\n        localStorage.setItem('users', JSON.stringify(users));\r\n        localStorage.setItem('user', JSON.stringify(user));\r\n\r\n        props.setUsers(users);\r\n        props.setUser(user);\r\n    }\r\n\r\n    return (\r\n        <Dialog\r\n            className={Style.Dialog}\r\n            aria-labelledby='SignTitle'\r\n            disableBackdropClick\r\n            disableEscapeKeyDown\r\n            fullWidth\r\n            maxWidth='xs'\r\n            open={props.openSignDialog}\r\n            TransitionComponent={Fade}\r\n            transitionDuration={1000}\r\n\r\n        >\r\n            <DialogTitle id='SignTitle'>\r\n                {\r\n                    currentPage === 'in'\r\n                        ? <span className={signInAnimation === true ? 'animated fadeInSign' : 'animated fadeOutSign'}>Sign in</span>\r\n                            : <span className={signUpAnimation === true ? 'animated fadeInSign' : 'animated fadeOutSign'}>Sign up</span>\r\n                }\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                {\r\n                    currentPage === 'in'\r\n                        ? <div className={signInAnimation === true ? 'animated fadeInSign' : 'animated fadeOutSign'}><Signin users={props.users} handleClickDialog={handleClickDialog} handleUpdateState={handleUpdateState} /></div>\r\n                            : <div className={signUpAnimation === true ? 'animated fadeInSign' : 'animated fadeOutSign'}><Signup users={props.users} handleClickDialog={handleClickDialog} handleUpdateState={handleUpdateState} /></div>\r\n                }\r\n            </DialogContent>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\n// Fetching state from store\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        openSignDialog: state.app.openSignDialog,\r\n        users: state.app.users\r\n    };\r\n};\r\n\r\n// Sending some data to an action\r\nconst matchDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({\r\n        setOpenSignDialog: appActions.setOpenSignDialog,\r\n        setUsers: appActions.setUsers,\r\n        setUser: appActions.setUser\r\n    }, dispatch);\r\n}\r\n\r\nexport default connect(mapStateToProps, matchDispatchToProps)(SignDialog);","import React, {useState} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\n\r\n// Actions\r\nimport * as appActions from '../../actions/AppAction';\r\n\r\n// Material UI Components\r\nimport { makeStyles, Dialog, Fade, DialogTitle, Grid, Button, Box, Typography, Avatar, FormControl, Input, Hidden, ButtonGroup} from '@material-ui/core';\r\n\r\n// Icons\r\nimport CloseRoundedIcon from '@material-ui/icons/CloseRounded';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\n\r\n// Material UI Custom Component Style\r\nconst useStyles = makeStyles((theme) => ({\r\n    DialogTitle: {\r\n        padding: theme.spacing(2),\r\n    },\r\n    Button : {\r\n        color: theme.palette.text.secondary,\r\n        transition: '0.4s ease-in-out',\r\n        background: theme.palette.action.hover,\r\n        '&:hover': {\r\n            background: theme.palette.action.focus,\r\n            color: theme.palette.text.primary\r\n        }\r\n    },\r\n    ButtonContent: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        lineHeight: 'normal'\r\n    },\r\n    Header: {\r\n        fontWeight: theme.typography.fontWeightBold,\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    Avatar: {\r\n        width: '125px',\r\n        height: '125px',\r\n        fontSize: '120px',\r\n        fontWeight: theme.typography.fontWeightMedium,\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    Input: {\r\n        borderRadius: theme.shape.borderRadius,\r\n        border: `1px solid ${theme.palette.text.hint}`,\r\n        color: theme.palette.text.primary,\r\n        padding: theme.spacing(1, 2),\r\n        transition: '0.4s ease-in-out',\r\n        '&:hover': {\r\n            border: `2px solid ${theme.palette.text.primary}`,\r\n        },\r\n        '&::before': {\r\n            border: [['none'], '!important'],\r\n        },\r\n        '&::after': {\r\n            border: [['none'], '!important'],\r\n        }\r\n    },\r\n    InputActive: {\r\n        border: `2px solid ${theme.palette.primary.main}`,\r\n    },\r\n    InputError: {\r\n        border: `2px solid ${theme.palette.error.main}`,\r\n    },\r\n    InputSuccess: {\r\n        border: `2px solid ${theme.palette.success.main}`,\r\n    },\r\n    ColorAvatarContainer: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        textAlign: 'center',\r\n        margin: theme.spacing(1, 0),\r\n    },\r\n    ColorAvatar: {\r\n        cursor: 'pointer',\r\n        width: '50px',\r\n        height: '50px',\r\n        '& svg':{\r\n            fontSize: theme.typography.h4.fontSize,\r\n        }\r\n    },\r\n    MarginBottom: {\r\n        margin: theme.spacing(2, 0),\r\n    },\r\n    ButtonGroup: {\r\n        boxShadow: 'none',\r\n        '&:hover': {\r\n            boxShadow: 'none',\r\n        }\r\n    },\r\n    Buttons: {\r\n        transition: '0.4s ease-in-out',\r\n        margin: theme.spacing(0, 2),\r\n        border: [['none'], '!important'],\r\n        borderRadius: [[theme.shape.borderRadius], '!important'],\r\n        '&:hover': {\r\n            filter: 'brightness(95%)',\r\n        }\r\n    },\r\n    CancelButton: {\r\n        boxShadow: 'none',\r\n        '&:hover': {\r\n            boxShadow: 'none',\r\n        }\r\n    },\r\n    SaveButton: {\r\n        color: theme.palette.common.white,\r\n        boxShadow: 'none',\r\n        '&:hover': {\r\n            boxShadow: 'none',\r\n        }\r\n    },\r\n    '@media (max-width: 425px)': {\r\n        DialogTitle: {\r\n            padding: theme.spacing(1, 1, 0, 1),\r\n        },\r\n        Header: {\r\n            fontSize: theme.typography.h6.fontSize\r\n        },\r\n        Avatar: {\r\n            width: '100px',\r\n            height: '100px',\r\n            fontSize: theme.typography.h1.fontSize,\r\n            marginBottom: theme.spacing(1),\r\n        },\r\n        MarginBottom: {\r\n            margin: theme.spacing(1, 0),\r\n        },\r\n        Buttons: {\r\n            margin: theme.spacing(0, 1),\r\n        },\r\n    },\r\n}));\r\n\r\nconst AccountSettings = (props) => {\r\n    const Style = useStyles();\r\n\r\n    // Avatar Input State\r\n    const [initialsValue, setInitialsValue] = useState(props.user.initials === undefined ? 'J' : props.user.initials);  \r\n\r\n    // Username Input State\r\n    const [usernameFocused, setUsernameFocused] = useState(false); \r\n    const [usernameValue, setUsernameValue] = useState(props.user.username === undefined ? 'JohnSmith' : props.user.username);  \r\n    const [usernameError, setUsernameError] = useState(null);  \r\n\r\n    // Password Input State\r\n    const [passwordFocused, setPasswordFocused] = useState(false); \r\n    const [passwordValue, setPasswordValue] = useState(props.user.password === undefined ? 'JohnSmith' : props.user.password);  \r\n    const [passwordError, setPasswordError] = useState(null);  \r\n    \r\n    // Color State\r\n    const [currentColor, setCurrentColor] = useState(props.user.color);\r\n    const colors = [\r\n        {\r\n            id: Math.random(),\r\n            title: 'Pink',\r\n            color: '#EC407A'\r\n        },\r\n        {\r\n            id: Math.random(),\r\n            title: 'Purple',\r\n            color: '#AB47BC'\r\n        },\r\n        {\r\n            id: Math.random(),\r\n            title: 'Indigo',\r\n            color: '#5C6BC0'\r\n        },\r\n        {\r\n            id: Math.random(),\r\n            title: 'Blue',\r\n            color: '#42A5F5'\r\n        },\r\n        {\r\n            id: Math.random(),\r\n            title: 'Teal',\r\n            color: '#26A69A'\r\n        },\r\n        {\r\n            id: Math.random(),\r\n            title: 'Amber',\r\n            color: '#FFCA28'\r\n        },\r\n        {\r\n            id: Math.random(),\r\n            title: 'Orange',\r\n            color: '#FFA726'\r\n        },\r\n        {\r\n            id: Math.random(),\r\n            title: 'Deep Orange',\r\n            color: '#FF7043'\r\n        },\r\n    ]\r\n\r\n    // This method will close the Customize component\r\n    const handleClickCloseCustomizeDialog = () => {\r\n        props.setOpenCustomizeDialog(false);\r\n    };\r\n\r\n    // Username Input Methods \r\n    // This method will save whatever the user types in the text field\r\n    const handleUsernameChange = (event) => {\r\n        event.preventDefault();\r\n        setUsernameValue(event.target.value);\r\n    }\r\n\r\n    // This method will validate the username text field and if correct will set the initals\r\n    const handleUsernameValidation = () => {\r\n        const validation = /^[a-zA-Z0-9]+$/\r\n\r\n        setUsernameFocused(false)\r\n    \r\n        if(usernameValue.match(validation)){\r\n            setUsernameError(false);\r\n\r\n            const newUsername = usernameValue.split('');\r\n            const initial = newUsername[0].replace(/^\\w/, letter => letter.toUpperCase());\r\n\r\n            setInitialsValue(initial);\r\n        }else{\r\n            setUsernameError(true);\r\n            return;\r\n        }\r\n    }\r\n\r\n    // Password Input Methods \r\n    // This method will save whatever the user types in the text field\r\n    const handlePasswordChange = (event) => {\r\n        event.preventDefault();\r\n        setPasswordValue(event.target.value);\r\n    }\r\n\r\n    // This method will validate the password text field\r\n    const handlePasswordValidation = () => {\r\n        setPasswordFocused(false)\r\n        \r\n        if(passwordValue.length >= 8){\r\n            setPasswordError(false);\r\n        }else{\r\n            setPasswordError(true);\r\n        }\r\n    }\r\n\r\n    // This method will update the user profile to the customization specifications\r\n    const handleSaveCustomization = () => {\r\n        const updatedUser = {\r\n            ...props.user,\r\n            username: usernameValue,\r\n            password: passwordValue,\r\n            initials: initialsValue,\r\n            likes: {\r\n                movie: [...props.user.likes.movie],\r\n                tv: [...props.user.likes.tv],\r\n            },\r\n            watchlist: {\r\n                movie: [...props.user.watchlist.movie],\r\n                tv: [...props.user.watchlist.tv],\r\n            },\r\n            color: currentColor\r\n        }\r\n\r\n        const updatedUsers = props.users.map(item => {\r\n            let newitem = {};\r\n\r\n            if(item.id === updatedUser.id){\r\n                newitem = updatedUser \r\n            }else{\r\n                return item;\r\n            }\r\n\r\n            return newitem === {} ? item : newitem\r\n        })\r\n\r\n        localStorage.setItem('users', JSON.stringify(updatedUsers));\r\n        localStorage.setItem('user', JSON.stringify(updatedUser));\r\n\r\n        props.setUsers(updatedUsers);\r\n        props.setUser(updatedUser);\r\n\r\n        handleClickCloseCustomizeDialog();\r\n\r\n        window.location.reload();\r\n    } \r\n\r\n    return (\r\n        <Dialog\r\n            className={Style.Dialog}\r\n            fullWidth\r\n            maxWidth='sm'\r\n            onClose={handleClickCloseCustomizeDialog}\r\n            open={props.openCustomizeDialog}\r\n            TransitionComponent={Fade}\r\n            transitionDuration={1000}\r\n        >\r\n            <DialogTitle className={Style.DialogTitle}>\r\n                <Grid item container direction='column' alignItems='flex-start'>\r\n                    <Button className={Style.Button} disableRipple onClick={handleClickCloseCustomizeDialog}>\r\n                        <div className={Style.ButtonContent}>\r\n                            <CloseRoundedIcon />\r\n                            <span>Close</span>\r\n                        </div>\r\n                    </Button>\r\n                </Grid>\r\n            </DialogTitle> \r\n            <Grid container direction='column'>\r\n                <Box p={2}>\r\n                    <Grid item>\r\n                        <Typography className={Style.Header} variant='h4' color='textPrimary'>\r\n                            Customize\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item container direction='row' alignItems='center' justify='center'>\r\n                        <Avatar\r\n                            alt={props.user.username}\r\n                            className={Style.Avatar}\r\n                            style={{backgroundColor: currentColor}}\r\n                            variant='rounded'\r\n                        >\r\n                            {initialsValue}\r\n                        </Avatar>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Typography variant='h6'>\r\n                            Change Username\r\n                        </Typography>\r\n                        <Box my={1} />\r\n                        <FormControl style={{width: '100%'}}>\r\n                            <Input\r\n                                aria-label='Change Username'\r\n                                color='primary'\r\n                                className={usernameFocused === true ? `${Style.Input} ${Style.InputActive}` : usernameError === true ? `${Style.Input} ${Style.InputError}` : usernameError === false ? `${Style.Input} ${Style.InputSuccess}` : Style.Input}\r\n                                error={usernameError}\r\n                                fullWidth\r\n                                onChange={(event) => handleUsernameChange(event)}\r\n                                onKeyPress={() => handleUsernameValidation()}\r\n                                onMouseDown={() => setUsernameFocused(true)}\r\n                                onBlur={() => handleUsernameValidation()}\r\n                                placeholder={props.user.username}\r\n                                type='text'\r\n                                variant='outlined'\r\n                                value={usernameValue}\r\n                            />\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Typography variant='h6'>\r\n                            Change Password\r\n                        </Typography>\r\n                        <Box my={1} />\r\n                        <FormControl style={{width: '100%'}}>\r\n                            <Input\r\n                                aria-label='Change Password'\r\n                                color='primary'\r\n                                className={passwordFocused === true ? `${Style.Input} ${Style.InputActive}` : passwordError === true ? `${Style.Input} ${Style.InputError}` : passwordError === false ? `${Style.Input} ${Style.InputSuccess}` : Style.Input}\r\n                                error={passwordError}\r\n                                fullWidth\r\n                                onChange={(event) => handlePasswordChange(event)}\r\n                                onMouseDown={() => setPasswordFocused(true)}\r\n                                onBlur={() => handlePasswordValidation()}\r\n                                type='password'\r\n                                variant='outlined'\r\n                                value={passwordValue}\r\n                            />\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Box className={Style.MarginBottom} />\r\n                    <Grid item>\r\n                        <Typography variant='h6'>\r\n                            Change Color\r\n                        </Typography>\r\n                        <Box my={1} />\r\n                        <Grid item container direction='row' wrap='wrap'>\r\n                            {\r\n                                colors.map(item => {\r\n                                    return(\r\n                                        <Grid className={Style.ColorAvatarContainer} key={item.id} item xs={3}>\r\n                                            <Avatar className={Style.ColorAvatar} style={{backgroundColor: item.color}} onClick={() => setCurrentColor(item.color)}>\r\n                                                <CheckIcon style={{color: (item.color === currentColor) ? 'white' : item.color}} />\r\n                                            </Avatar>\r\n                                            <Hidden smUp>\r\n                                                <Typography variant='caption'>{item.title}</Typography>\r\n                                            </Hidden>\r\n                                            <Hidden xsDown>\r\n                                                <Typography variant='button'>{item.title}</Typography>\r\n                                            </Hidden>\r\n                                        </Grid>\r\n                                    );\r\n                                })\r\n                            }\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Box className={Style.MarginBottom} />\r\n                    <Grid item>\r\n                        <ButtonGroup className={Style.ButtonGroup} disableRipple fullWidth variant='contained'>\r\n                            <Button className={`${Style.Buttons} ${Style.CancelButton}`} onClick={handleClickCloseCustomizeDialog}>Cancel</Button>\r\n                            <Button className={`${Style.Buttons} ${Style.SaveButton}`} style={{backgroundColor: currentColor}} onClick={() => handleSaveCustomization()} disabled={usernameError === true || passwordError === true ? true : false}>Save</Button>\r\n                        </ButtonGroup>\r\n                    </Grid>\r\n                </Box>\r\n            </Grid>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\n// Fetching state from store\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        openCustomizeDialog: state.app.openCustomizeDialog,\r\n        users: state.app.users,\r\n        user: state.app.user,\r\n    };\r\n};\r\n\r\n// Sending some data to an action\r\nconst matchDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({\r\n        setOpenCustomizeDialog: appActions.setOpenCustomizeDialog,\r\n        setUsers: appActions.setUsers,\r\n        setUser: appActions.setUser,\r\n    }, dispatch);\r\n}\r\n\r\nexport default connect(mapStateToProps, matchDispatchToProps)(AccountSettings);","import React, {useState} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\n\r\n// Actions\r\nimport * as appActions from '../../actions/AppAction';\r\n\r\n// Material UI Components\r\nimport { makeStyles, Drawer, Box, Grid, Button, List, ListItem, ListItemText, Divider, Collapse} from '@material-ui/core';\r\n\r\n// Icons\r\nimport CloseRoundedIcon from '@material-ui/icons/CloseRounded';\r\nimport ArrowDropDownRoundedIcon from '@material-ui/icons/ArrowDropDownRounded';\r\nimport HomeOutlinedIcon from '@material-ui/icons/HomeOutlined';\r\nimport SearchOutlinedIcon from '@material-ui/icons/SearchOutlined';\r\nimport TheatersOutlinedIcon from '@material-ui/icons/TheatersOutlined';\r\nimport TvOutlinedIcon from '@material-ui/icons/TvOutlined';\r\nimport FavoriteBorderOutlinedIcon from '@material-ui/icons/FavoriteBorderOutlined';\r\nimport HourglassEmptyOutlinedIcon from '@material-ui/icons/HourglassEmptyOutlined';\r\nimport ColorLensOutlinedIcon from '@material-ui/icons/ColorLensOutlined';\r\n\r\n// Material UI Custom Component Style\r\nconst useStyles = makeStyles((theme) => ({\r\n    Drawer: {\r\n        minWidth: '250px'\r\n    },\r\n    CloseButton : {\r\n        color: theme.palette.text.secondary,\r\n        transition: '0.4s ease-in-out',\r\n        borderRadius: theme.shape.borderRadius,\r\n        background: theme.palette.action.hover,\r\n        '&:hover': {\r\n            background: theme.palette.action.focus,\r\n            color: theme.palette.text.primary\r\n        }\r\n    },\r\n    Button : {\r\n        color: theme.palette.text.secondary,\r\n        transition: '0.4s ease-in-out',\r\n        borderRadius: theme.shape.borderRadius,\r\n        '&:hover': {\r\n            background: theme.palette.action.hover,\r\n            color: theme.palette.text.primary\r\n        }\r\n    },\r\n    ButtonActive : {\r\n        borderRadius: theme.shape.borderRadius,\r\n        background: theme.palette.primary.main,\r\n        color: theme.palette.common.white,\r\n        '&:hover': {\r\n            background: theme.palette.primary.main,\r\n            color: theme.palette.common.white\r\n        }\r\n    },\r\n    ButtonFolderActive : {\r\n        borderRadius: theme.shape.borderRadius,\r\n        background: theme.palette.action.hover,\r\n        color: theme.palette.text.primary,\r\n    },\r\n    Header: {\r\n        margin: theme.spacing(0.5, 0),\r\n        '& span': {\r\n            fontSize: theme.typography.h6.fontSize,\r\n            fontWeight: theme.typography.fontWeightMedium,\r\n            textTransform: 'uppercase',\r\n        }\r\n    },\r\n    MarginRight: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    IconActive : {\r\n        color: theme.palette.text.primary,\r\n        transform: 'rotate(180deg)',\r\n        transition: 'transform 0.4s ease-in-out',\r\n    },\r\n    IconInactive : {\r\n        transform: 'rotate(360deg)',\r\n        transition: 'transform 0.4s ease-in-out',\r\n    },\r\n    ButtonContent: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        lineHeight: 'normal'\r\n    },\r\n    Nested: {\r\n        margin: theme.spacing(1, 0),\r\n        paddingLeft: theme.spacing(4),\r\n        fontWeight: theme.typography.fontWeightMedium,\r\n    },\r\n    Divider: {\r\n        margin: theme.spacing(2, 0),\r\n    },\r\n}));\r\n\r\nconst Menu = (props) => {\r\n    const Style = useStyles();\r\n\r\n    // Menu List Items State\r\n    const [openMovies, setOpenMovies] = useState(true);\r\n    const [openTV, setOpenTV] = useState(false);\r\n\r\n    const movieTypes = [\r\n        {\r\n            id: Math.random(),\r\n            title:'Now Playing',\r\n            type:'now_playing'\r\n        }, \r\n        {\r\n            id: Math.random(),\r\n            title:'Most Popular',\r\n            type:'popular'\r\n        },\r\n        {\r\n            id: Math.random(),\r\n            title:'Top Rated',\r\n            type:'top_rated'\r\n        },\r\n        {\r\n            id: Math.random(),\r\n            title:'Upcoming',\r\n            type:'upcoming'\r\n        },\r\n    ];\r\n\r\n    const tvTypes = [\r\n        {\r\n            id: Math.random(),\r\n            title:'Airing Today',\r\n            type:'airing_today'\r\n        }, \r\n        {\r\n            id: Math.random(),\r\n            title:'Showing Now On TV',\r\n            type:'on_the_air'\r\n        },\r\n        {\r\n            id: Math.random(),\r\n            title:'Most Popular',\r\n            type:'popular'\r\n        },\r\n        {\r\n            id: Math.random(),\r\n            title:'Top Rated',\r\n            type:'top_rated'\r\n        },\r\n    ];\r\n\r\n    // Menu List Items Methods\r\n    // Opens Movie Dropdown \r\n    const handleClickMovies = () => {\r\n        setOpenMovies(!openMovies);\r\n    };\r\n    \r\n    // Opens Tv Dropdown\r\n    const handleClickTV = () => {\r\n        setOpenTV(!openTV);\r\n    };\r\n\r\n    // This method will open the GridPreview component with the data the user chooses\r\n    const handleOpenPage = (category, item) => {\r\n        props.setGridPreviewApiCategory(category);\r\n        props.setGridPreviewApiType(item.type);\r\n        props.setGridPreviewApiTitle(item.title);\r\n        props.handleCloseDrawer();\r\n    }\r\n\r\n    // Search Dialog Methods\r\n    // Opens Search Dialog Component\r\n    const handleClickOpenSearchDialog = (event) => {\r\n        event.preventDefault();\r\n        props.setOpenSearchDialog(true);\r\n    };\r\n\r\n    // Opens Customize Dialog Component\r\n    const handleClickOpenCustomizeDialog = (event) => {\r\n        event.preventDefault();\r\n        props.setOpenCustomizeDialog(true);\r\n    };\r\n\r\n    return (\r\n        <Drawer\r\n            anchor='left'\r\n            elevation={2}\r\n            open={props.openDrawer}\r\n            onClose={props.handleCloseDrawer}\r\n            transitionDuration={750}\r\n        >\r\n            <Box p={2} className={Style.Drawer}>\r\n                <Grid container direction='column' spacing={2}>\r\n                    <Grid item>\r\n                        <Button className={Style.CloseButton} disableRipple onClick={props.handleCloseDrawer}>\r\n                            <div className={Style.ButtonContent}>\r\n                                <CloseRoundedIcon />\r\n                                <span>Close</span>\r\n                            </div>\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <List>\r\n\r\n                            <ListItem className={props.gridPreviewApiCategory === '' ? `${Style.Header} ${Style.ButtonActive}` : `${Style.Header} ${Style.Button}`} button onClick={() => handleOpenPage('', '')}>\r\n                                <HomeOutlinedIcon className={Style.MarginRight} />\r\n                                <ListItemText primary='Home' />\r\n                            </ListItem>\r\n                            <ListItem className={`${Style.Header} ${Style.Button}`} button onClick={(event) => handleClickOpenSearchDialog(event)}>\r\n                                <SearchOutlinedIcon className={Style.MarginRight} />\r\n                                <ListItemText primary='Search' />\r\n                            </ListItem>\r\n\r\n                            <Divider className={Style.Divider} variant='inset' />\r\n\r\n                            <ListItem className={openMovies === true ? `${Style.Header} ${Style.ButtonFolderActive}` : `${Style.Header} ${Style.Button}`} button onClick={handleClickMovies}>\r\n                                <TheatersOutlinedIcon className={Style.MarginRight} />\r\n                                <ListItemText primary='Movies' />\r\n                                <Box style={{flex: 1}} />\r\n                                <ArrowDropDownRoundedIcon className={(openMovies === true) ? Style.IconActive : Style.IconInactive} />\r\n                            </ListItem>\r\n                            <Collapse in={openMovies} timeout={750} unmountOnExit>\r\n                                <List disablePadding>\r\n                                    {\r\n                                        movieTypes.map(item => {\r\n                                            return(\r\n                                                <ListItem key={item.id} button className={props.gridPreviewApiCategory === 'movie' && props.gridPreviewApiType === item.type ? `${Style.Nested} ${Style.ButtonActive}` : `${Style.Nested} ${Style.Button}`} onClick={() => handleOpenPage('movie', item)}>\r\n                                                    <ListItemText primary={item.title} />\r\n                                                </ListItem>\r\n                                            );\r\n                                        })\r\n                                    }\r\n                                </List>\r\n                            </Collapse>\r\n\r\n                            <ListItem className={openTV === true ? `${Style.Header} ${Style.ButtonFolderActive}` : `${Style.Header} ${Style.Button}`} button onClick={handleClickTV}>\r\n                                <TvOutlinedIcon className={Style.MarginRight} />\r\n                                <ListItemText primary='TV' />\r\n                                <Box style={{flex: 1}} />\r\n                                <ArrowDropDownRoundedIcon className={(openTV === true) ? Style.IconActive : Style.IconInactive} />\r\n                            </ListItem>\r\n                            <Collapse in={openTV} timeout={750} unmountOnExit>\r\n                                <List disablePadding>\r\n                                    {\r\n                                        tvTypes.map(item => {\r\n                                            return(\r\n                                                <ListItem key={item.id} button className={props.gridPreviewApiCategory === 'tv' && props.gridPreviewApiType === item.type ? `${Style.Nested} ${Style.ButtonActive}` : `${Style.Nested} ${Style.Button}`} onClick={() => handleOpenPage('tv', item)}>\r\n                                                    <ListItemText primary={item.title} />\r\n                                                </ListItem>\r\n                                            );\r\n                                        })\r\n                                    }\r\n                                </List>\r\n                            </Collapse>\r\n\r\n                            <Divider className={Style.Divider} variant='inset' />\r\n\r\n                            <ListItem className={`${Style.Header} ${Style.Button}`} button onClick={() => {props.setGridPreviewApiCategory('likes'); props.handleCloseDrawer()}} disabled={props.user.access === 'guest' ? true : false}>\r\n                                <FavoriteBorderOutlinedIcon className={Style.MarginRight} />\r\n                                <ListItemText primary='Liked' />\r\n                            </ListItem>\r\n                            <ListItem className={`${Style.Header} ${Style.Button}`} button onClick={() => {props.setGridPreviewApiCategory('watchlist'); props.handleCloseDrawer()}} disabled={props.user.access === 'guest' ? true : false}>\r\n                                <HourglassEmptyOutlinedIcon className={Style.MarginRight} />\r\n                                <ListItemText primary='Watchlist' />\r\n                            </ListItem>\r\n\r\n                            <Divider className={Style.Divider} variant='inset' />\r\n\r\n                            <ListItem className={`${Style.Header} ${Style.Button}`} button onClick={(event) => {handleClickOpenCustomizeDialog(event); props.handleCloseDrawer()}} disabled={props.user.access === 'guest' ? true : false}>\r\n                                <ColorLensOutlinedIcon className={Style.MarginRight} />\r\n                                <ListItemText primary='Customize' />\r\n                            </ListItem>\r\n                        </List>\r\n                    </Grid>\r\n                </Grid>\r\n            </Box>\r\n        </Drawer>\r\n    )\r\n}\r\n\r\n// Fetching state from store\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        gridPreviewApiCategory: state.app.gridPreviewApiCategory,\r\n        gridPreviewApiType: state.app.gridPreviewApiType,\r\n        user: state.app.user,\r\n    };\r\n};\r\n\r\n// Sending some data to an action\r\nconst matchDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({\r\n        setOpenSearchDialog: appActions.setOpenSearchDialog,\r\n        setOpenCustomizeDialog: appActions.setOpenCustomizeDialog,\r\n        setGridPreviewApiCategory: appActions.setGridPreviewApiCategory,\r\n        setGridPreviewApiType: appActions.setGridPreviewApiType,\r\n        setGridPreviewApiTitle: appActions.setGridPreviewApiTitle,\r\n    }, dispatch);\r\n}\r\n\r\nexport default connect(mapStateToProps, matchDispatchToProps)(Menu);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\n\r\n// Actions\r\nimport * as appActions from '../../actions/AppAction';\r\n\r\n// Material UI Components\r\nimport { makeStyles, Button, Box, Grid, Card, CardActionArea, CardMedia, CardContent, Typography, CardActions, IconButton} from '@material-ui/core';\r\n\r\n// Icons\r\nimport StarRoundedIcon from '@material-ui/icons/StarRounded';\r\nimport FavoriteBorderRoundedIcon from '@material-ui/icons/FavoriteBorderRounded';\r\nimport FavoriteRoundedIcon from '@material-ui/icons/FavoriteRounded';\r\nimport AddRoundedIcon from '@material-ui/icons/AddRounded';\r\nimport RemoveRoundedIcon from '@material-ui/icons/RemoveRounded';\r\n\r\n// Material UI Custom Component Style\r\nconst useStyles = makeStyles((theme) => ({\r\n    Container: {\r\n        margin: theme.spacing(2, 0),\r\n        padding: theme.spacing(1, 0),\r\n    },\r\n    Poster: {\r\n        width: '100%',\r\n        borderRadius: `${theme.shape.borderRadius} ${theme.shape.borderRadius} 0 0`,\r\n        transition: '0.4s ease-in-out',\r\n\r\n        '&:hover': {\r\n            filter: 'brightness(50%)',\r\n        }\r\n    },\r\n    Content: {\r\n        backgroundColor: 'transparent',\r\n    },\r\n    Rating: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        lineHeight: 'normal',\r\n        '& svg': {\r\n            color: theme.palette.warning.main,\r\n        }\r\n    },\r\n    LikeButton: {\r\n        borderRadius: theme.shape.borderRadius,\r\n        boxShadow: 'none',\r\n        \r\n        '&:hover': {\r\n            boxShadow: 'none',\r\n            color: theme.palette.error.main,\r\n        }\r\n    },\r\n    LikedButton: {\r\n        color: theme.palette.error.main,\r\n        '&:hover': {\r\n            color: theme.palette.error.main,\r\n        }\r\n    },\r\n    WatchlistButton: {\r\n        boxShadow: 'none',\r\n        borderRadius: theme.shape.borderRadius,\r\n        color: theme.palette.common.white,\r\n        transition: '0.4s ease-in-out',\r\n        '&:hover': {\r\n            boxShadow: 'none',\r\n            background: theme.palette.primary.dark,\r\n        }\r\n    },\r\n    WatchlistRemoveButton: {\r\n        background: theme.palette.error.main,\r\n        '&:hover': {\r\n            background: theme.palette.error.dark,\r\n        }\r\n    },\r\n    ButtonContent: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        lineHeight: 'normal'\r\n    },\r\n    '@media (min-width: 1024px)': {\r\n        Rating: {\r\n            fontSize: theme.typography.h5.fontSize\r\n        },\r\n        Title: {\r\n            fontSize: theme.typography.h5.fontSize\r\n        },\r\n        Year: {\r\n            fontSize: theme.typography.h6.fontSize\r\n        },\r\n    },\r\n}));\r\n\r\nconst RenderDataListItem = (props) => {\r\n    const Style = useStyles();\r\n    const data = props.typeData || [];\r\n    \r\n    // This method will get the date and cut it and return only the year\r\n    const handleGetDate = (date) => {\r\n        if(date === undefined){\r\n            return\r\n        } else {\r\n            const splitDate = date.split('-');\r\n            const newDate = splitDate[0]\r\n            \r\n            return newDate\r\n        }\r\n    }\r\n\r\n    // This method will update the users & user state and local storage\r\n    const handleUpdateState = (users, user) => {\r\n        localStorage.setItem('users', JSON.stringify(users));\r\n        localStorage.setItem('user', JSON.stringify(user));\r\n\r\n        props.setUsers(users);\r\n        props.setUser(user);\r\n    }\r\n\r\n    /* \r\n        This method will check whether array passed contains the item that was clicked on,\r\n        If so it will remove the item, if not it will add the item depending if its likes or watchlist\r\n        and if it is movie or tv\r\n    */\r\n    const addRemoveList = (users, user, item, array, category, type) => {\r\n        let check = false;\r\n\r\n        array.forEach(otherItem => {\r\n            if(otherItem.id === item.id){\r\n                check = true;\r\n                return\r\n            }else{\r\n                return\r\n            }\r\n        })\r\n\r\n        if(check === true){\r\n            const updateLikedArray = array.filter(otherItem => otherItem.id !== item.id);\r\n\r\n            const updatedUser = {\r\n                ...user,\r\n                [type]: {...user[type], [category]: updateLikedArray}\r\n            }\r\n\r\n            const updatedUsers = users.map(item => {\r\n                let newitem = {};\r\n    \r\n                if(item.id === updatedUser.id){\r\n                    newitem = updatedUser \r\n                }else{\r\n                    return item;\r\n                }\r\n    \r\n                return newitem === {} ? item : newitem\r\n\r\n            })\r\n\r\n            handleUpdateState(updatedUsers, updatedUser);\r\n\r\n            return\r\n        }else{\r\n            array.push(item);\r\n    \r\n            const updatedUser = {\r\n                ...user,\r\n                [type]: {...user[type], [category]: array}\r\n            }\r\n    \r\n            const updatedUsers = users.map(item => {\r\n                let newitem = {};\r\n    \r\n                if(item.id === updatedUser.id){\r\n                    newitem = updatedUser \r\n                }else{\r\n                    return item;\r\n                }\r\n    \r\n                return newitem === {} ? item : newitem\r\n\r\n            })\r\n\r\n            handleUpdateState(updatedUsers, updatedUser);\r\n        }\r\n    }\r\n\r\n    // This method will be called whenever a user clicks on the heart of any item \r\n    const handleLikeMovie = (item, category) => {\r\n        const users = [...props.users];\r\n        const user = {...props.user};\r\n        const newLikedArray = [...user.likes[category]];\r\n        \r\n        addRemoveList(users, user, item, newLikedArray, category, 'likes')\r\n    }\r\n\r\n    // This method will be called whenever a user clicks on the watchlist button of any item\r\n    const handleAddToWatchlist = (item, category) => {\r\n        const users = [...props.users];\r\n        const user = {...props.user};\r\n        const newWatchlistArray = [...user.watchlist[category]];\r\n        \r\n        addRemoveList(users, user, item, newWatchlistArray, category, 'watchlist')\r\n    }\r\n\r\n    // This method renders the like button either the like or unlike button\r\n    const renderLike = (item, category) => {\r\n        let check = false;\r\n\r\n        props.user.likes[category].forEach(likeItem => {\r\n            if(likeItem.id === item.id){\r\n                check = true;\r\n                return\r\n            }else{\r\n                return\r\n            }\r\n        })\r\n\r\n        if(check === true){\r\n            return(\r\n                <FavoriteRoundedIcon className={`${Style.LikeButton} ${Style.LikedButton}`} />\r\n            )\r\n        }else{\r\n            return(\r\n                <FavoriteBorderRoundedIcon />                \r\n            )\r\n        }\r\n    }\r\n\r\n    // This method renders the watchlist button either the remove or add watchlist\r\n    const renderWatchlist = (item, category) => {\r\n        let check = false;\r\n\r\n        props.user.watchlist[category].forEach(watchItem => {\r\n            if(watchItem.id === item.id){\r\n                check = true;\r\n                return\r\n            }else{\r\n                return\r\n            }\r\n        })\r\n\r\n        if(check === true){\r\n            return(\r\n                <Button className={`${Style.WatchlistButton} ${Style.WatchlistRemoveButton}`} disableRipple variant='contained' onClick={() => handleAddToWatchlist(item, category)} disabled={props.user.access === 'guest' ? true : false}>\r\n                    <div className={Style.ButtonContent}>\r\n                        <RemoveRoundedIcon />\r\n                        <Box mr={0.75} />\r\n                        <span>Watchlist</span>\r\n                    </div> \r\n                </Button>\r\n            )\r\n        }else{\r\n            return(   \r\n                <Button color='primary' className={Style.WatchlistButton} disableRipple variant='contained' onClick={() => handleAddToWatchlist(item, category)} disabled={props.user.access === 'guest' ? true : false}>\r\n                    <div className={Style.ButtonContent}>\r\n                        <AddRoundedIcon />\r\n                        <Box mr={0.75} />\r\n                        <span>Watchlist</span>\r\n                    </div> \r\n                </Button>   \r\n            )\r\n        }\r\n    }\r\n\r\n    // This method will open the preview page to display further details\r\n    const handleOpenPreview = (item) => {\r\n        props.setPreview(item); \r\n        props.setOpenSearchDialog(false);\r\n        props.setGridPreviewApiCategory(props.category);\r\n        props.setGridPreviewApiType('preview');\r\n    }\r\n\r\n    return(\r\n        <React.Fragment>\r\n            {\r\n                data === [] || data === undefined\r\n                    ? null\r\n                        :\r\n                        data.map((item, index) => {\r\n                            return(\r\n                                <Grid className={Style.Container} key={item.id} item sm={6}>\r\n                                    <Card elevation={0} className={'animated fadeInSign'} style={{animationDelay: (index % 2 === 0) ? 250 : 750}}>\r\n                                        <CardActionArea>\r\n                                            <CardMedia\r\n                                                alt={(props.category === 'tv') ? item.original_name : (props.category === 'movie') ? item.title : ''}\r\n                                                component='img'\r\n                                                className={Style.Poster}\r\n                                                image={item.poster_path === null ? 'https://via.placeholder.com/276x414' : `https://image.tmdb.org/t/p/w500/${item.poster_path}`}\r\n                                                onMouseDown={() => handleOpenPreview(item)}\r\n                                            />\r\n                                        </CardActionArea>\r\n                                        <CardContent className={Style.Content}>\r\n                                            <Typography className={Style.Rating} variant='h6'>\r\n                                                <StarRoundedIcon />\r\n                                                <span>\r\n                                                    {item.vote_average}\r\n                                                </span>\r\n                                            </Typography>\r\n                                            <Typography className={Style.Title} gutterBottom variant='h6' style={{fontWeight: '700'}}>\r\n                                                {(props.category === 'tv') ? item.original_name : (props.category === 'movie') ? item.title : ''}\r\n                                            </Typography>\r\n                                            <Typography className={Style.Year} color='textSecondary' variant='button'>\r\n                                                {(props.category === 'tv') ? `(${handleGetDate(item.first_air_date)})` : (props.category === 'movie') ? `(${handleGetDate(item.release_date)})` : ''}\r\n                                            </Typography>\r\n                                        </CardContent>\r\n                                        <CardActions className={Style.Content} disableSpacing>\r\n                                            <IconButton aria-label='Like' className={Style.LikeButton} disableRipple onClick={() => handleLikeMovie(item, props.category)} disabled={props.user.access === 'guest' ? true : false}>\r\n                                                {\r\n                                                    renderLike(item, props.category)\r\n                                                }\r\n                                            </IconButton>\r\n                                            <Box mx={0.25} />\r\n                                            {\r\n                                                renderWatchlist(item, props.category)\r\n                                            }\r\n                                        </CardActions>\r\n                                    </Card>\r\n                                </Grid>\r\n                            );\r\n                        })\r\n            }\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\n// Fetching state from store\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        // Internal State (APP)\r\n        users: state.app.users,\r\n        user: state.app.user,\r\n    };\r\n  };\r\n  \r\n  // Sending some data to an action\r\n  const matchDispatchToProps = (dispatch) => {\r\n      return bindActionCreators({\r\n        setOpenSearchDialog: appActions.setOpenSearchDialog,\r\n        setGridPreviewApiCategory: appActions.setGridPreviewApiCategory,\r\n        setGridPreviewApiType: appActions.setGridPreviewApiType,\r\n        setPreview: appActions.setPreview, \r\n        setUsers: appActions.setUsers, \r\n        setUser: appActions.setUser \r\n      }, dispatch);\r\n  }\r\n  \r\n  export default connect(mapStateToProps, matchDispatchToProps)(RenderDataListItem);","import React, {useState, useEffect} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\n\r\n// Actions\r\nimport * as appActions from '../../actions/AppAction';\r\n\r\n// Components\r\nimport RenderDataListItem from '../RenderDataListItem/RenderDataListItem'\r\n\r\n// Material UI Components\r\nimport { makeStyles, Dialog, Slide, DialogTitle, Button, Container, Box, Grid, Typography, Input, FormControl, InputAdornment, Hidden, TextField, MenuItem} from '@material-ui/core';\r\nimport Pagination from 'material-ui-flat-pagination';\r\n\r\n// Icons\r\nimport CloseRoundedIcon from '@material-ui/icons/CloseRounded';\r\nimport SearchOutlinedIcon from '@material-ui/icons/SearchOutlined';\r\n\r\n// Material UI Custom Component Style\r\nconst useStyles = makeStyles((theme) => ({\r\n    DialogTitle: {\r\n        padding: theme.spacing(2),\r\n    },\r\n    Button : {\r\n        color: theme.palette.text.secondary,\r\n        transition: '0.4s ease-in-out',\r\n        borderRadius: theme.shape.borderRadius,\r\n        background: theme.palette.action.hover,\r\n        '&:hover': {\r\n            background: theme.palette.action.focus,\r\n            color: theme.palette.text.primary\r\n        }\r\n    },\r\n    Container: {\r\n        margin: theme.spacing(2, 0),\r\n        padding: theme.spacing(1, 0),\r\n    },\r\n    Search: {\r\n        borderRadius: theme.shape.borderRadius,\r\n        border: `1px solid ${theme.palette.text.hint}`,\r\n        color: theme.palette.text.hint,\r\n        padding: theme.spacing(1),\r\n        transition: '0.4s ease-in-out',\r\n        '&:hover': {\r\n            border: `2px solid ${theme.palette.text.primary}`,\r\n            color: theme.palette.text.primary\r\n        },\r\n        '&::before': {\r\n            border: [['none'], '!important'],\r\n        },\r\n        '&::after': {\r\n            border: [['none'], '!important'],\r\n        }\r\n    },\r\n    SearchActive: {\r\n        border: `2px solid ${theme.palette.primary.main}`,\r\n        color: theme.palette.text.primary\r\n    },\r\n    Hidden: {\r\n        opacity: 0,\r\n        transition: 'opacity 0.4s ease-in-out',\r\n    },\r\n    Visible: {\r\n        opacity: 1,\r\n        transition: 'opacity 0.4s ease-in-out',\r\n    },\r\n    ButtonContent: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        lineHeight: 'normal'\r\n    },\r\n    Margin: {\r\n        margin: theme.spacing(2, 0)\r\n    },\r\n}));\r\n\r\nexport const ShowSelectContent = ({justify, handleShowChange, showValue}) => {\r\n    return(\r\n        <Grid item sm={6} container direction='row' justify={justify} alignItems='center' spacing={1}>\r\n            <Grid item>\r\n                <Typography variant='button'>\r\n                    Show:\r\n                </Typography>\r\n            </Grid>\r\n            <Grid item>\r\n                <TextField\r\n                    aria-label='Show Items Select'\r\n                    color='primary'\r\n                    fullWidth\r\n                    onChange={(event) => handleShowChange(event)}\r\n                    select\r\n                    style={{paddingRight: 0}}\r\n                    value={showValue}\r\n                    >\r\n                        <MenuItem value={'movie'}>\r\n                            Only Movies\r\n                        </MenuItem>\r\n                        <MenuItem value={'tv'}>\r\n                            Only TV\r\n                        </MenuItem>\r\n                </TextField>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nconst Search = (props) => {\r\n    const Style = useStyles();\r\n\r\n    // Search Bar State\r\n    const [searchFocused, setSearchFocused] = useState(false); \r\n    const [searchEntered, setSearchEntered] = useState(false); \r\n    const [searchValue, setSearchValue] = useState(''); \r\n    \r\n    // Show Select State\r\n    const [showValue, setShowValue] = useState('movie'); \r\n    const [showChanged, setShowChanged] = useState(false); \r\n    \r\n    // Search Data State\r\n    const [searchMovieData, setSearchMovieData] = useState({}); \r\n    const [searchTVData, setSearchTVData] = useState({}); \r\n    const [searchResultsNumber, setSearchResultsNumber] = useState('0'); \r\n    const [searchPageNumber, setSearchPageNumber] = useState(0); \r\n\r\n    // Data Page State\r\n    const [currentPage, setCurrentPage] = useState(1); \r\n    const [currentOffset, setCurrentOffset] = useState(0); \r\n\r\n    // This method will close the Search component\r\n    const handleClickCloseSearchDialog = () => {\r\n        props.setOpenSearchDialog(false);\r\n    };\r\n    \r\n    // Search Bar Methods\r\n    // This method will save whatever the user types in the text field\r\n    const handleSearchChange = (event) => {\r\n        event.preventDefault();\r\n        setCurrentPage(1);\r\n        setCurrentOffset(0);\r\n        setSearchValue(event.target.value);\r\n    }\r\n\r\n    // This method will set the state of searchEntered to true whenever the user presses the key 'Enter'\r\n    const handleClickSearch = (event) => {\r\n        if(event.key === 'Enter'){\r\n            setSearchEntered(true);\r\n        }\r\n    }\r\n\r\n    // Show Select Methods\r\n    // This method will save whatever the user chooses from the select\r\n    const handleShowChange = (event) => {\r\n        event.preventDefault();\r\n        setShowValue(event.target.value);\r\n        setShowChanged(true);\r\n    }\r\n    \r\n    // Data Page Methods\r\n    const handleClickChangePage = (event, offset, next) => {\r\n        const key = 'c287015949cec13fb17a26e50b4f054a';\r\n\r\n        event.preventDefault();\r\n        window.scrollTo(0, 0)\r\n\r\n        fetch(`https://api.themoviedb.org/3/search/${showValue}?query=${searchValue}&api_key=${key}&language=en-US&&page=${next}&include_adult=false`)\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                if(showValue === 'movie'){\r\n                    setSearchMovieData(json);\r\n                }else{\r\n                    setSearchTVData(json);\r\n                }\r\n                return;\r\n            })\r\n            .catch(error => console.log(error));  \r\n\r\n        setCurrentOffset(offset);\r\n        setCurrentPage(next);\r\n    }\r\n\r\n    // This method will fetch the api\r\n    useEffect(() => {\r\n        const key = 'c287015949cec13fb17a26e50b4f054a';\r\n\r\n        if(searchValue === ''){\r\n            setSearchEntered(false);\r\n            setSearchMovieData({});\r\n            setSearchTVData({});\r\n            setSearchResultsNumber('0');\r\n            setSearchPageNumber(0);\r\n        }\r\n        else if(searchEntered === true || showChanged === true){\r\n            fetch(`https://api.themoviedb.org/3/search/${showValue}?query=${searchValue}&api_key=${key}&language=en-US&&page=${currentPage}&include_adult=false`)\r\n                .then(response => response.json())\r\n                .then(json => {\r\n                    if(showValue === 'movie'){\r\n                        setSearchMovieData(json);\r\n                    }else{\r\n                        setSearchTVData(json);\r\n                    }\r\n                    setSearchResultsNumber(String(json.total_results));\r\n                    setSearchPageNumber(String(json.total_pages));\r\n                    setShowChanged(false);\r\n                    return;\r\n                })\r\n                .catch(error => console.log(error));  \r\n        } else {\r\n            return\r\n        }\r\n    }, [searchEntered, showChanged, searchValue, showValue, currentPage])\r\n\r\n    return (\r\n        <Dialog\r\n            className={Style.Dialog}\r\n            fullWidth\r\n            fullScreen\r\n            maxWidth='md'\r\n            onClose={handleClickCloseSearchDialog}\r\n            open={props.openSearchDialog}\r\n            TransitionComponent={Slide}\r\n            transitionDuration={1000}\r\n\r\n        >\r\n            <DialogTitle className={Style.DialogTitle}>\r\n                <Button className={Style.Button} disableRipple onClick={handleClickCloseSearchDialog}>\r\n                    <div className={Style.ButtonContent}>\r\n                        <CloseRoundedIcon />\r\n                        <span>Close</span>\r\n                    </div>\r\n                </Button>\r\n            </DialogTitle>\r\n            <Container maxWidth='sm' disableGutters>\r\n                <Box p={2}>\r\n                    <Grid container direction='column'>\r\n                        <Grid item>\r\n                            <Typography variant='h6'>\r\n                                Find a Movie or Series\r\n                            </Typography>\r\n                            <Box my={1} />\r\n                            <FormControl style={{width: '100%'}}>\r\n                                <Input\r\n                                    aria-label='Search Bar'\r\n                                    color='primary'\r\n                                    className={searchFocused === true ? `${Style.Search} ${Style.SearchActive}` : Style.Search}\r\n                                    fullWidth\r\n                                    onChange={(event) => handleSearchChange(event)}\r\n                                    onKeyPress={(event) => handleClickSearch(event)}\r\n                                    onMouseDown={() => setSearchFocused(true)}\r\n                                    onBlur={() => setSearchFocused(false)}\r\n                                    placeholder='Press enter to view data'\r\n                                    startAdornment={\r\n                                        <InputAdornment position='start'>\r\n                                            <SearchOutlinedIcon />\r\n                                        </InputAdornment>\r\n                                    }\r\n                                    type='text'\r\n                                    variant='outlined'\r\n                                    value={searchValue}\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Box my={2} />\r\n                        <Grid item container direction='row' justify='space-between' alignItems='center'>\r\n                            <Grid item sm={6}>\r\n                                <Typography className={searchEntered === false ? Style.Hidden : Style.Visible} variant='body2'>\r\n                                    {searchResultsNumber} matching results for {`'${searchValue}'`}\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Hidden smUp>\r\n                                <ShowSelectContent justify='flex-start' handleShowChange={handleShowChange} showValue={showValue} />\r\n                            </Hidden>\r\n                            <Hidden xsDown>\r\n                                <ShowSelectContent justify='flex-end' handleShowChange={handleShowChange} showValue={showValue} />\r\n                            </Hidden>\r\n                        </Grid>\r\n                        <Box my={2} />\r\n                        {\r\n                            (searchValue === '' || searchEntered === false || searchMovieData === {} || searchTVData === {})\r\n                                ? null\r\n                                    :\r\n                                        <Grid item container alignItems='flex-start' justify='flex-start' wrap='wrap' spacing={2}>\r\n                                            <RenderDataListItem \r\n                                                typeData={showValue === 'movie' ? searchMovieData.results : searchTVData.results } \r\n                                                category={showValue}\r\n                                            />\r\n                                        </Grid>\r\n                        }\r\n                        <Grid item container justify='flex-end'>\r\n                            <Pagination\r\n                                currentPageColor='primary'\r\n                                otherPageColor='default'\r\n                                className={searchEntered === false ? `${Style.Margin} ${Style.Hidden}` : `${Style.Margin} ${Style.Visible}`}\r\n                                disableRipple\r\n                                limit={5}\r\n                                offset={currentOffset}\r\n                                total={searchPageNumber || 10}\r\n                                onClick={(event, offset, page) => handleClickChangePage(event, offset, page)}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Box>\r\n            </Container>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\n// Fetching state from store\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        openSearchDialog: state.app.openSearchDialog,\r\n    };\r\n};\r\n\r\n// Sending some data to an action\r\nconst matchDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({\r\n        setOpenSearchDialog: appActions.setOpenSearchDialog,\r\n    }, dispatch);\r\n}\r\n\r\nexport default connect(mapStateToProps, matchDispatchToProps)(Search);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\n\r\n// Actions\r\nimport * as appActions from '../../actions/AppAction';\r\n\r\n// Material UI Components\r\nimport { makeStyles, Popover, Grow, Hidden, List, ListItem, ListItemText} from '@material-ui/core';\r\n\r\n// Material UI Custom Component Style\r\nconst useStyles = makeStyles((theme) => ({\r\n    Header: {\r\n        '& span': {\r\n            fontSize: theme.typography.h6.fontSize,\r\n            fontWeight: theme.typography.fontWeightBold,\r\n            color: theme.palette.text.primary,\r\n        }\r\n    },\r\n    Signout : {\r\n        color: theme.palette.error.main, \r\n        '&:hover': {\r\n            color: theme.palette.error.main, \r\n        }\r\n    },\r\n}));\r\n\r\nconst ListItems = ({props, Signout}) => {\r\n    // Opens Customize Dialog Component\r\n    const handleClickOpenCustomizeDialog = (event) => {\r\n        event.preventDefault();\r\n        props.setOpenCustomizeDialog(true);\r\n        props.handleClosePopover()\r\n    };\r\n\r\n    // Signs out the user\r\n    const handleClickSignOut = (event) => {\r\n        event.preventDefault();\r\n\r\n        localStorage.removeItem('user');\r\n        \r\n        props.setOpenSignDialog(true)\r\n        props.setOpenSearchDialog(false)\r\n        props.setOpenCustomizeDialog(false)\r\n        props.setGridPreviewApiCategory('')\r\n        props.setGridPreviewApiType('')\r\n        props.setGridPreviewApiTitle('')\r\n        props.setUser({});\r\n        props.handleClosePopover()\r\n    };\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <ListItem button onClick={() => {props.setGridPreviewApiCategory('likes'); props.handleClosePopover()}} disabled={props.user.access === 'guest' ? true : false}>\r\n                <ListItemText\r\n                    primary='Your Likes'\r\n                />\r\n            </ListItem>\r\n            <ListItem button onClick={() => {props.setGridPreviewApiCategory('watchlist'); props.handleClosePopover()}} disabled={props.user.access === 'guest' ? true : false}>\r\n                <ListItemText\r\n                    primary='Your Watchlist'\r\n                />\r\n            </ListItem>\r\n            <ListItem button onClick={(event) => handleClickOpenCustomizeDialog(event)} disabled={props.user.access === 'guest' ? true : false}>\r\n                <ListItemText\r\n                    primary='Customize'\r\n                />\r\n            </ListItem>\r\n            <ListItem className={Signout} button onClick={(event) => handleClickSignOut(event)}>\r\n                <ListItemText\r\n                    primary='Sign Out'\r\n                />\r\n            </ListItem>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nconst AccountMenu = (props) =>  {\r\n    const Style = useStyles();\r\n\r\n    return (\r\n        <Popover\r\n            id={props.popperID}\r\n            anchorEl={props.anchorEl}\r\n            anchorOrigin={{\r\n                vertical: 'bottom',\r\n                horizontal: 'right',\r\n            }}\r\n            transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n            }}\r\n            elevation={2}\r\n            open={props.openPopper}\r\n            onClose={props.handleClosePopover}\r\n            TransitionComponent={Grow}\r\n            transitionDuration={750}\r\n        >\r\n            <React.Fragment>\r\n                <Hidden smUp>\r\n                    <List disablePadding>\r\n                        <ListItem divider>\r\n                            <ListItemText\r\n                                className={Style.Header}\r\n                                primary={props.user.username}\r\n                            />\r\n                        </ListItem>\r\n                        {\r\n                            <ListItems props={props} Signout={Style.Signout} />\r\n                        } \r\n                    </List>\r\n                </Hidden>\r\n                <Hidden xsDown>\r\n                    <List disablePadding>\r\n                        {\r\n                            <ListItems props={props} Signout={Style.Signout} />\r\n                        } \r\n                    </List>\r\n                </Hidden>\r\n            </React.Fragment>\r\n        </Popover>\r\n    )\r\n}\r\n\r\n// Fetching state from store\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        users: state.app.users\r\n    };\r\n};\r\n\r\n// Sending some data to an action\r\nconst matchDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({\r\n        setOpenSignDialog: appActions.setOpenSignDialog,\r\n        setOpenSearchDialog: appActions.setOpenSearchDialog,\r\n        setOpenCustomizeDialog: appActions.setOpenCustomizeDialog,\r\n        setGridPreviewApiCategory: appActions.setGridPreviewApiCategory,\r\n        setGridPreviewApiType: appActions.setGridPreviewApiType,\r\n        setGridPreviewApiTitle: appActions.setGridPreviewApiTitle,\r\n        setUser: appActions.setUser,\r\n    }, dispatch);\r\n}\r\n\r\nexport default connect(mapStateToProps, matchDispatchToProps)(AccountMenu);","import React, {useState} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\n\r\n// Actions\r\nimport * as appActions from '../../actions/AppAction';\r\n\r\n// Components\r\nimport Menu from '../Menu/Menu';\r\nimport Search from '../Search/Search';\r\nimport AccountMenu from '../AccountMenu/AccountMenu';\r\n\r\n// Material UI Components\r\nimport { makeStyles, Paper, Toolbar, Hidden, IconButton, Box, Button} from '@material-ui/core';\r\n\r\n// Icons\r\nimport MenuRoundedIcon from '@material-ui/icons/MenuRounded';\r\nimport SearchRoundedIcon from '@material-ui/icons/SearchRounded';\r\nimport FaceRoundedIcon from '@material-ui/icons/FaceRounded';\r\nimport ArrowDropDownRoundedIcon from '@material-ui/icons/ArrowDropDownRounded';\r\n\r\n// Material UI Custom Component Style\r\nconst useStyles = makeStyles((theme) => ({\r\n    Paper: {\r\n        background: 'transparent',\r\n    },\r\n    Button : {\r\n        color: theme.palette.text.secondary,\r\n        transition: '0.4s ease-in-out',\r\n        background: theme.palette.action.hover,\r\n        '&:hover': {\r\n            background: theme.palette.action.focus,\r\n            color: theme.palette.text.primary\r\n        }\r\n    },\r\n    ButtonActive : {\r\n        background: theme.palette.action.focus,\r\n        color: theme.palette.text.primary,\r\n    },\r\n    IconActive : {\r\n        color: theme.palette.text.primary,\r\n        transform: 'rotate(180deg)',\r\n        transition: 'transform 0.4s ease-in-out',\r\n    },\r\n    IconInactive : {\r\n        transform: 'rotate(360deg)',\r\n        transition: 'transform 0.4s ease-in-out',\r\n    },\r\n    ButtonContent: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        lineHeight: 'normal'\r\n    },\r\n    '@media (max-width: 425px)': {\r\n        Button : {\r\n            background: 'transparent',\r\n        },\r\n        ButtonActive : {\r\n            background: 'transparent',\r\n        },\r\n    },\r\n}));\r\n\r\nconst Header = ( {user, setOpenSearchDialog} ) => {\r\n    const Style = useStyles();\r\n\r\n    // Menu Drawer State\r\n    const [openDrawer, setOpenDrawer] = React.useState(false);\r\n\r\n    // Account Menu Popover State\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const [openPopper, setOpenPopper] = useState(false);\r\n\r\n    const popperID = openPopper ? 'Account Menu' : undefined;\r\n\r\n    // Menu Drawer Methods\r\n    // Opens Menu Drawer Component \r\n    const handleClickOpenMenuDrawer = (event) => {\r\n        event.preventDefault();\r\n        setOpenDrawer(true);\r\n    };\r\n\r\n    // Closes Menu Drawer Component\r\n    const handleCloseMenuDrawer = () => {\r\n        setOpenDrawer(false);\r\n    };\r\n\r\n    // Search Dialog Methods\r\n    // Opens Search Dialog Component\r\n    const handleClickOpenSearchDialog = (event) => {\r\n        event.preventDefault();\r\n        setOpenSearchDialog(true);\r\n    };\r\n\r\n    // Account Menu Popover Methods\r\n    // Opens Account Menu Popover Component\r\n    const handleClickOpenAccountMenuPopover = (event) => {\r\n        event.preventDefault();\r\n        setAnchorEl(event.currentTarget);\r\n        setOpenPopper(true);\r\n    };\r\n    \r\n    // Closes Account Menu Popover Component\r\n    const handleCloseAccountMenuPopover = () => {\r\n        setAnchorEl(null);\r\n        setOpenPopper(false);\r\n    };\r\n    \r\n    return (\r\n        <React.Fragment>\r\n            <Paper className={Style.Paper} elevation={0}>\r\n                <Toolbar disableGutters>\r\n                    <Hidden smUp>\r\n                        <IconButton aria-label='Menu' className={(openDrawer === true) ? Style.ButtonActive : Style.Button} disableRipple edge='start' onClick={(event) => handleClickOpenMenuDrawer(event)}>\r\n                            <MenuRoundedIcon />\r\n                        </IconButton>\r\n                        <Box style={{flex: 1}} />\r\n                        <IconButton aria-label='Search' className={Style.Button} disableRipple edge='start' onClick={(event) => handleClickOpenSearchDialog(event)}>\r\n                            <SearchRoundedIcon />\r\n                        </IconButton>\r\n                        <IconButton aria-label='Account Menu' className={(openPopper === true) ? Style.ButtonActive : Style.Button} disableRipple edge='end' onClick={(event) => handleClickOpenAccountMenuPopover(event)}>\r\n                            <FaceRoundedIcon />\r\n                            <ArrowDropDownRoundedIcon className={(openPopper === true) ? Style.IconActive : Style.IconInactive} />\r\n                        </IconButton>\r\n                    </Hidden>\r\n                    <Hidden xsDown>\r\n                        <Button className={(openDrawer === true) ? Style.ButtonActive : Style.Button} disableRipple onClick={(event) => handleClickOpenMenuDrawer(event)}>\r\n                            <div className={Style.ButtonContent}>\r\n                                <MenuRoundedIcon />\r\n                                <Box mr={0.75} />\r\n                                <span>Menu</span>\r\n                            </div>\r\n                        </Button>\r\n                        <Box style={{flex: 1}} />\r\n                        <Button className={Style.Button} disableRipple onClick={(event) => handleClickOpenSearchDialog(event)}>\r\n                            <div className={Style.ButtonContent}>\r\n                                <SearchRoundedIcon />\r\n                                <Box mr={0.75} />\r\n                                <span>Search</span>\r\n                            </div>\r\n                        </Button>\r\n                        <Box mx={0.75} />\r\n                        <Button aria-describedby={popperID} className={(openPopper === true) ? Style.ButtonActive : Style.Button} disableRipple onClick={(event) => handleClickOpenAccountMenuPopover(event)}>\r\n                            <div className={Style.ButtonContent}>\r\n                                <FaceRoundedIcon />\r\n                                <Box ml={0.75} mr={0.25}>\r\n                                    {user.username}\r\n                                </Box>\r\n                                <ArrowDropDownRoundedIcon className={(openPopper === true) ? Style.IconActive : Style.IconInactive} />\r\n                            </div>\r\n                        </Button>\r\n                    </Hidden>\r\n                </Toolbar>            \r\n            </Paper>\r\n            <Menu openDrawer={openDrawer} handleCloseDrawer={handleCloseMenuDrawer} />\r\n            <Search />\r\n            <AccountMenu anchorEl={anchorEl} openPopper={openPopper} popperID={popperID} user={user} handleClosePopover={handleCloseAccountMenuPopover} />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\n// Fetching state from store\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        user: state.app.user,\r\n    };\r\n};\r\n\r\n// Sending some data to an action\r\nconst matchDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({\r\n        setOpenSearchDialog: appActions.setOpenSearchDialog,\r\n    }, dispatch);\r\n}\r\n\r\nexport default connect(mapStateToProps, matchDispatchToProps)(Header);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\n\r\n// Actions\r\nimport * as appActions from '../../actions/AppAction';\r\n\r\n// Material UI Components\r\nimport { makeStyles, Grid, Typography, Box, Button} from '@material-ui/core';\r\n\r\n// Icons\r\nimport ArrowRightAltIcon from '@material-ui/icons/ArrowRightAlt';\r\n\r\n// Material UI Custom Component Style\r\nconst useStyles = makeStyles((theme) => ({\r\n    '@media (min-width: 1024px)': {\r\n        TrendingItem: {\r\n            cursor: 'pointer',\r\n            width: '342px'\r\n        },\r\n    },\r\n    Header: {\r\n        fontWeight: theme.typography.fontWeightBold\r\n    },\r\n    TrendingContainer: {\r\n        overflowX: 'auto',\r\n        overflowY: 'hidden'\r\n    },\r\n    TrendingItem: {\r\n        cursor: 'pointer',\r\n        width: '342px'\r\n    },\r\n    Poster: {\r\n        borderRadius: theme.shape.borderRadius,\r\n        transition: '0.4s ease-in-out',\r\n\r\n        '&:hover': {\r\n            filter: 'brightness(50%)',\r\n        }\r\n    },\r\n}));\r\n\r\nconst RenderHomeApiData = ({Style, props, header, data, dataName, category, handleOpenPage}) => {\r\n    const newData = (dataName === 'Trending') ? data.results : data;\r\n\r\n    // This method will open the preview page to display further details\r\n    const handleOpenPreview = (item, media) => {\r\n        props.setPreview(item); \r\n        props.setGridPreviewApiCategory(media);\r\n        props.setGridPreviewApiType('preview');\r\n    }\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <Grid item container direction='row' alignItems='center' justify='flex-start'>\r\n                <Typography className={Style.Header} variant='h4' color='textPrimary'>\r\n                    {header}\r\n                </Typography>\r\n                {\r\n                    (dataName === 'Trending')\r\n                        ? null\r\n                            :\r\n                            <React.Fragment>\r\n                                <Box mx={1} />\r\n                                <Button disableRipple endIcon={<ArrowRightAltIcon />} onClick={() => handleOpenPage(category, 'popular', 'Most Popular')}>\r\n                                    View more\r\n                                </Button>\r\n                            </React.Fragment>\r\n                }\r\n            </Grid>\r\n            <Grid className={Style.TrendingContainer} item container direction='row' wrap='nowrap' justify='flex-start'>\r\n                {\r\n                    (newData === {} || newData === undefined)\r\n                        ? null\r\n                            :\r\n                            newData.map((item, index) => {\r\n                                const media = dataName === 'Trending' ? item.media_type : category;\r\n\r\n                                return(\r\n                                    <Box className={`${Style.TrendingItem} animated fadeInSign`} style={{animationDelay: (index % 2 === 0) ? 250 : 750}} key={item.id} my={2} mr={2}>\r\n                                        <img \r\n                                            alt={(media === 'tv') ? item.original_name : (media === 'movie') ? item.title : ''}\r\n                                            className={Style.Poster}\r\n                                            src={item.poster_path === null ? 'https://via.placeholder.com/276x414' : `https://image.tmdb.org/t/p/w342/${item.poster_path}`}\r\n                                            onMouseDown={() => handleOpenPreview(item, media)}\r\n                                        />\r\n                                    </Box>\r\n                                );\r\n                            })\r\n                } \r\n            </Grid>\r\n            <Box mb={4} />\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nconst Home = (props) => {\r\n    const Style = useStyles();\r\n\r\n    // This method will open the GridPreview component with the data the user chooses\r\n    const handleOpenPage = (category, type, title) => {\r\n        props.setGridPreviewApiCategory(category);\r\n        props.setGridPreviewApiType(type);\r\n        props.setGridPreviewApiTitle(title);\r\n    }\r\n\r\n    return (\r\n        <Grid container direction='column'>\r\n            <RenderHomeApiData Style={Style} props={props} header={'Trending'} data={props.trending} dataName={'Trending'} category={''} handleOpenPage={handleOpenPage} />\r\n            <RenderHomeApiData Style={Style} props={props} header={'Popular Movies'} data={props.moviePopular} dataName={'Popular'} category={'movie'} handleOpenPage={handleOpenPage} />\r\n            <RenderHomeApiData Style={Style} props={props} header={'Popular TV'} data={props.tvPopular} dataName={'Popular'} category={'tv'} handleOpenPage={handleOpenPage} />\r\n        </Grid>\r\n    )\r\n}\r\n\r\n// Fetching state from store\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        trending: state.api.trending,\r\n        moviePopular: state.api.movies.popular,\r\n        tvPopular: state.api.tv.popular,\r\n    };\r\n};\r\n\r\n// Sending some data to an action\r\nconst matchDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({\r\n        setGridPreviewApiCategory: appActions.setGridPreviewApiCategory,\r\n        setGridPreviewApiType: appActions.setGridPreviewApiType,\r\n        setGridPreviewApiTitle: appActions.setGridPreviewApiTitle,\r\n        setPreview: appActions.setPreview,\r\n    }, dispatch);\r\n}\r\n\r\nexport default connect(mapStateToProps, matchDispatchToProps)(Home);","import React, {useState} from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\n// Components\r\nimport RenderDataListItem from '../RenderDataListItem/RenderDataListItem'\r\nimport {ShowSelectContent} from '../Search/Search';\r\n\r\n// Material UI Components\r\nimport { makeStyles, Grid, Typography, Hidden} from '@material-ui/core';\r\n\r\n// Material UI Custom Component Style\r\nconst useStyles = makeStyles((theme) => ({\r\n    '@media (max-width: 425px)': {\r\n        Header: {\r\n            fontSize: theme.typography.h5.fontSize\r\n        },\r\n    },\r\n    Header: {\r\n        textTransform: 'capitalize',\r\n        fontWeight: theme.typography.fontWeightBold\r\n    },\r\n}));\r\n\r\nconst UserData = (props) => {\r\n    const Style = useStyles();\r\n\r\n    // Show Select State\r\n    const [showValue, setShowValue] = useState('movie');\r\n\r\n    // Show Select Methods\r\n    // This method will save whatever the user chooses from the select\r\n    const handleShowChange = (event) => {\r\n        event.preventDefault();\r\n        setShowValue(event.target.value);\r\n    }\r\n\r\n    return (\r\n        <Grid container direction='column'>\r\n            <Grid item container direction='row' alignItems='center' justify='flex-start'>\r\n                <Grid item sm={6}>\r\n                    <Typography className={Style.Header} variant='h4' color='textPrimary'>\r\n                        {\r\n                            `Your ${props.gridPreviewApiCategory}`\r\n                        }\r\n                    </Typography>\r\n                </Grid>\r\n                <Hidden smUp>\r\n                    <ShowSelectContent justify='flex-start' handleShowChange={handleShowChange} showValue={showValue} />\r\n                </Hidden>\r\n                <Hidden xsDown>\r\n                    <ShowSelectContent justify='flex-end' handleShowChange={handleShowChange} showValue={showValue} />\r\n                </Hidden>\r\n            </Grid>\r\n            <Grid item container alignItems='flex-start' justify='flex-start' wrap='wrap' spacing={2}>\r\n                <RenderDataListItem \r\n                    typeData={(props.gridPreviewApiCategory === 'likes') ? props.user.likes[showValue] : (props.gridPreviewApiCategory === 'watchlist') ? props.user.watchlist[showValue] : null} \r\n                    category={showValue} \r\n                />\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\n// Fetching state from store\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        // Internal State (APP)\r\n        user: state.app.user,\r\n        gridPreviewApiCategory: state.app.gridPreviewApiCategory,\r\n    };\r\n  };\r\n\r\n  export default connect(mapStateToProps)(UserData);","import React, {useState, useEffect} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\n\r\n// Api Actions\r\nimport * as apiAction from '../../actions/apiActions/Api';\r\nimport * as movieActions from '../../actions/apiActions/Movies';\r\nimport * as tvActions from '../../actions/apiActions/TV';\r\n\r\n// Fetch Method\r\nimport fetchApi from '../../utils/fetchApi';\r\n\r\n// Components\r\nimport RenderDataListItem from '../RenderDataListItem/RenderDataListItem'\r\n\r\n// Material UI Components\r\nimport { makeStyles, Fade, Grid, TextField, Button, Typography, MenuItem, Hidden, Box } from '@material-ui/core';\r\nimport Pagination from 'material-ui-flat-pagination';\r\n\r\n// Icons\r\nimport CloseRoundedIcon from '@material-ui/icons/CloseRounded';\r\n\r\n// Material UI Custom Component Style\r\nconst useStyles = makeStyles((theme) => ({\r\n    Header: {\r\n        fontWeight: theme.typography.fontWeightBold\r\n    },\r\n    Margin: {\r\n        margin: theme.spacing(2, 0)\r\n    },\r\n    Button : {\r\n        borderRadius: theme.shape.borderRadius,\r\n        color: theme.palette.text.hint,\r\n        transition: '0.4s ease-in-out',\r\n        '&:hover': {\r\n            background: theme.palette.action.hover,\r\n            color: theme.palette.text.primary\r\n        }\r\n    },\r\n    SortButton: {\r\n        margin: theme.spacing(0.25),\r\n        boxShadow: 'none',\r\n        borderRadius: '25px',\r\n        color: theme.palette.common.white,\r\n        \r\n        '&:hover': {\r\n            color: theme.palette.common.white,\r\n            background: theme.palette.primary.main,\r\n            boxShadow: 'none',\r\n        }\r\n    },\r\n    '@media (max-width: 425px)': {\r\n        Header: {\r\n            fontSize: theme.typography.h5.fontSize\r\n        },\r\n        Results: {\r\n            fontSize: theme.typography.body2.fontSize\r\n        },\r\n    },\r\n}));\r\n\r\nconst RenderSortSection = ({Style, props, sortValue, sortGroup, justify, handleSortChange, setSortGroup, setSortValue, handleUpdateSort, handleRemoveSort}) => {\r\n    return(\r\n        <React.Fragment>\r\n            <Grid item sm={4} container direction='row' justify='flex-start' alignItems='center' spacing={1}>\r\n                <Grid item>\r\n                    <Typography variant='button'>\r\n                        Sort by:\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                    <TextField\r\n                        aria-label='Show Items Select'\r\n                        color='primary'\r\n                        fullWidth\r\n                        onChange={handleSortChange}\r\n                        select\r\n                        style={{paddingRight: 0}}\r\n                        value={sortValue}\r\n                        >\r\n                            <MenuItem value={'all'} onMouseDown={() => {setSortGroup([]); setSortValue('all')}}>\r\n                                All\r\n                            </MenuItem>\r\n                            {\r\n                                (props.gridPreviewApiCategory === '' || props.gridPreviewApiType === '')\r\n                                    ? null\r\n                                        :  \r\n                                        props.gridPreviewApiCategory === 'movie'\r\n                                            ?  \r\n                                            props.movieGenres.map(item => {\r\n                                                return(\r\n                                                    <MenuItem key={item.id} value={item.name} onMouseDown={() => handleUpdateSort(item)} disabled={sortGroup.includes(item) === true ? true : false}>\r\n                                                        {item.name}\r\n                                                    </MenuItem>\r\n                                                );\r\n                                            })\r\n                                                :\r\n                                                props.gridPreviewApiCategory === 'tv'\r\n                                                    ?\r\n                                                    props.tvGenres.map(item => {\r\n                                                        return(\r\n                                                            <MenuItem key={item.id} value={item.name} onMouseDown={() => handleUpdateSort(item)} disabled={sortGroup.includes(item) === true ? true : false}>\r\n                                                                {item.name}\r\n                                                            </MenuItem>\r\n                                                        );\r\n                                                    })\r\n                                                        : null\r\n                            }\r\n                    </TextField>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid item sm={8} container direction='row' justify={justify} alignItems='center'>\r\n                <Box my={1}>\r\n                    {\r\n                        sortGroup.map(item => {\r\n                            return(\r\n                                <Button key={item.id} className={`${Style.Button} ${Style.SortButton}`} color='primary' disableRipple endIcon={<CloseRoundedIcon />} variant='contained' onMouseDown={() => handleRemoveSort(item)}>\r\n                                    {item.name}\r\n                                </Button>\r\n                            );\r\n\r\n                        })\r\n                    }\r\n                </Box>\r\n            </Grid>\r\n        </React.Fragment>\r\n    );\r\n} \r\n\r\nconst handleShowData = (sortGroup, data, type) => {\r\n    if(sortGroup.length >= 1){\r\n        const newApiDataSorted = []; \r\n\r\n        sortGroup.forEach(genre => {\r\n            data.forEach(item => {\r\n                item.genre_ids.forEach(itemGenre => {\r\n                    if(newApiDataSorted.includes(item) === true){\r\n                        return\r\n                    } else if(genre.id === itemGenre){\r\n                        newApiDataSorted.push(item);\r\n                        return;\r\n                    } else{\r\n                        return;\r\n                    }\r\n                }) \r\n            });\r\n        })\r\n\r\n        return(\r\n            <RenderDataListItem \r\n                typeData={newApiDataSorted} \r\n                category={type} \r\n            />\r\n        );\r\n    }else{\r\n        return(\r\n            <RenderDataListItem \r\n                typeData={data} \r\n                category={type} \r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nconst RenderDataElements = ({props, sortGroup}) => {\r\n    if(props.gridPreviewApiCategory === 'movie'){\r\n        switch(props.gridPreviewApiType){\r\n            case 'now_playing':\r\n                return handleShowData(sortGroup, props.nowPlaying, 'movie');\r\n            case 'popular':\r\n                return handleShowData(sortGroup, props.moviePopular, 'movie');\r\n\r\n            case 'top_rated':\r\n                return handleShowData(sortGroup, props.movieTopRated, 'movie');\r\n\r\n            case 'upcoming':\r\n                return handleShowData(sortGroup, props.upcoming, 'movie');\r\n            default:\r\n                return;\r\n        }\r\n    }else if(props.gridPreviewApiCategory === 'tv'){\r\n        switch(props.gridPreviewApiType){\r\n            case 'airing_today':\r\n                return handleShowData(sortGroup, props.airingToday, 'tv');\r\n            case 'on_the_air':\r\n                return handleShowData(sortGroup, props.onTv, 'tv');\r\n            case 'popular':\r\n                return handleShowData(sortGroup, props.tvPopular, 'tv');\r\n            case 'top_rated':\r\n                return handleShowData(sortGroup, props.tvTopRated, 'tv');\r\n            default:\r\n                return;\r\n        }\r\n    }else{\r\n        return;\r\n    }\r\n}\r\n\r\nconst GridPreview = (props) => {\r\n    const Style = useStyles();\r\n\r\n    const [animation, setAnimation] = useState(true);\r\n\r\n    // Sort Select State\r\n    const [sortValue, setSortValue] = useState('all'); \r\n    const [sortGroup, setSortGroup] = useState([]); \r\n    \r\n    // Data Page State\r\n    const [currentPage, setCurrentPage] = useState(1); \r\n    const [currentOffset, setCurrentOffset] = useState(0); \r\n\r\n    // Sort Select Methods\r\n    const handleSortChange = (event) => {\r\n        event.preventDefault();\r\n        setSortValue(event.target.value);\r\n    }\r\n\r\n    const handleUpdateSort = (item) => {\r\n        const newSortGroup = [...sortGroup];\r\n\r\n        if(newSortGroup.includes(item) === true){\r\n            return\r\n        }else{\r\n            newSortGroup.push(item);\r\n\r\n            setSortValue(item.name);\r\n            setSortGroup(newSortGroup);\r\n        }\r\n    }\r\n\r\n    const handleRemoveSort = (removeItem) => {\r\n        const newSortGroup = [...sortGroup];\r\n\r\n        const updatedSortGroup = newSortGroup.filter(item => {return item.id !== removeItem.id});\r\n\r\n        setCurrentPage(1);\r\n        setCurrentOffset(0);\r\n        setSortGroup(updatedSortGroup);\r\n        setSortValue(updatedSortGroup.length === 0 ? 'all' : updatedSortGroup[updatedSortGroup.length - 1].name);\r\n    }\r\n\r\n    // Data Page Methods\r\n    const handleClickChangePage = (event, offset, next) => {\r\n        event.preventDefault();\r\n\r\n        setAnimation(false);\r\n        \r\n        setTimeout(() => {\r\n            window.scrollTo(0, 0)\r\n            setAnimation(true);\r\n            setCurrentOffset(offset);\r\n            setCurrentPage(next);\r\n        }, 1500);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const fetchMovieApiData = (type, key) => {\r\n            const types = [\r\n                {\r\n                    action: props.fetchApiMovieNowPlaying,\r\n                    type: 'now_playing',\r\n                }, \r\n                {\r\n                    action: props.fetchApiMoviePopular,\r\n                    type: 'popular',\r\n                },\r\n                {\r\n                    action: props.fetchApiMovieTopRated,\r\n                    type: 'top_rated',\r\n                }, \r\n                {\r\n                    action: props.fetchApiMovieUpcoming,\r\n                    type: 'upcoming',\r\n                },\r\n            ];\r\n        \r\n            types.forEach((item) => {\r\n                if(item.type === type){\r\n                    fetchApi(`https://api.themoviedb.org/3/movie/${item.type}?api_key=${key}&language=en-US&page=${currentPage}`, item.action);\r\n                }else{\r\n                    return;\r\n                }\r\n            })\r\n        }\r\n        \r\n        const fetchTvApiData = (type, key) => {\r\n            const types = [\r\n                {\r\n                    action: props.fetchApiTVAiringToday,\r\n                    type: 'airing_today',\r\n                }, \r\n                {\r\n                    action: props.fetchApiTVOnTv,\r\n                    type: 'on_the_air',\r\n                },\r\n                {\r\n                    action: props.fetchApiTVPopular,\r\n                    type: 'popular',\r\n                },\r\n                {\r\n                    action: props.fetchApiTVTopRated,\r\n                    type: 'top_rated',\r\n                }, \r\n            ];\r\n    \r\n            types.forEach((item) => {\r\n                if(item.type === type){\r\n                    fetchApi(`https://api.themoviedb.org/3/tv/${item.type}?api_key=${key}&language=en-US&page=${currentPage}`, item.action);\r\n                }else{\r\n                    return;\r\n                }\r\n            })\r\n        }\r\n\r\n        const key = 'c287015949cec13fb17a26e50b4f054a';\r\n        \r\n        if(props.gridPreviewApiCategory === 'movie'){\r\n            fetchMovieApiData(props.gridPreviewApiType, key);\r\n        }else if(props.gridPreviewApiCategory === 'tv'){\r\n            fetchTvApiData(props.gridPreviewApiType, key);\r\n        }\r\n    }, [\r\n        currentPage, sortGroup, props.gridPreviewApiCategory, props.gridPreviewApiType, props.fetchApiMovieGenres, props.fetchApiMovieNowPlaying, props.fetchApiMoviePopular, props.fetchApiMovieTopRated, props.fetchApiMovieUpcoming,\r\n        props.fetchApiTVAiringToday, props.fetchApiTVGenres, props.fetchApiTVOnTv, props.fetchApiTVPopular, props.fetchApiTVTopRated, props.movieGenres, props.tvGenres\r\n    ])\r\n\r\n    return (\r\n        <Fade in={animation} timeout={1500}>\r\n            <Grid container direction='column'>\r\n                <Grid item container direction='row' justify='space-between' alignItems='center'>\r\n                    <Grid item>\r\n                        <Typography className={Style.Header} variant='h4' color='textPrimary'>\r\n                            {`${props.gridPreviewApiTitle} (${props.gridPreviewApiCategory})`}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Typography className={Style.Results} variant='body1' color='textSecondary'>\r\n                        {\r\n                            (props.gridPreviewApiCategory === 'movie')\r\n                                ? `${props.movieTotalResults} ${props.gridPreviewApiCategory}s found`\r\n                                    : (props.gridPreviewApiCategory === 'tv')\r\n                                        ? `${props.tvTotalResults} ${props.gridPreviewApiCategory} shows found`\r\n                                            : ''\r\n                        }\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid className={Style.Margin} item container direction='row' justify='space-between'>\r\n                    <Hidden smUp>\r\n                        <RenderSortSection Style={Style} props={props} sortValue={sortValue} sortGroup={sortGroup} justify={'flex-start'} handleSortChange={handleSortChange} setSortGroup={setSortGroup} setSortValue={setSortValue} handleUpdateSort={handleUpdateSort} handleRemoveSort={handleRemoveSort} />\r\n                    </Hidden>\r\n                    <Hidden xsDown>\r\n                        <RenderSortSection Style={Style} props={props} sortValue={sortValue} sortGroup={sortGroup} justify={'flex-end'} handleSortChange={handleSortChange} setSortGroup={setSortGroup} setSortValue={setSortValue} handleUpdateSort={handleUpdateSort} handleRemoveSort={handleRemoveSort} />\r\n                    </Hidden>\r\n                </Grid>\r\n                {\r\n                    (props.gridPreviewApiCategory === '' || props.gridPreviewApiType === '')\r\n                        ? null\r\n                            :  \r\n                            <Grid item container alignItems='flex-start' justify='flex-start' wrap='wrap' spacing={2}>\r\n                                <RenderDataElements \r\n                                    props={props} \r\n                                    sortGroup={sortGroup} \r\n                                />\r\n                            </Grid>\r\n                }\r\n                <Grid item container justify='flex-end'>\r\n                    <Pagination\r\n                        currentPageColor='primary'\r\n                        otherPageColor='default'\r\n                        className={`${Style.Margin} animated fadeInHeader`}\r\n                        disableRipple\r\n                        limit={5}\r\n                        offset={currentOffset}\r\n                        total={props.gridPreviewApiCategory === 'movie' ? props.movieTotalPages : props.gridPreviewApiCategory === 'tv' ? props.tvTotalPages : 10}\r\n                        onClick={(event, offset, page) => handleClickChangePage(event, offset, page)}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n        </Fade>\r\n    )\r\n}\r\n\r\n// Fetching state from store\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        // Internal State (APP)\r\n        openSignDialog: state.app.openSignDialog,\r\n        openSearchDialog: state.app.openSearchDialog,\r\n        gridPreviewApiCategory: state.app.gridPreviewApiCategory,\r\n        gridPreviewApiType: state.app.gridPreviewApiType,\r\n        gridPreviewApiTitle: state.app.gridPreviewApiTitle,\r\n        // API Movies\r\n        nowPlaying: state.api.movies.nowPlaying,\r\n        moviePopular: state.api.movies.popular,\r\n        movieTopRated: state.api.movies.topRated,\r\n        upcoming: state.api.movies.upcoming,\r\n        movieTotalPages: state.api.movies.totalPages,\r\n        movieTotalResults: state.api.movies.totalResults,\r\n        movieGenres: state.api.movies.genres,\r\n        // API TV\r\n        airingToday: state.api.tv.airingToday,\r\n        onTv: state.api.tv.onTv,\r\n        tvPopular: state.api.tv.popular,\r\n        tvTopRated: state.api.tv.topRated,\r\n        tvTotalPages: state.api.tv.totalPages,\r\n        tvTotalResults: state.api.tv.totalResults,\r\n        tvGenres: state.api.tv.genres,\r\n    };\r\n  };\r\n  \r\n  // Sending some data to an action\r\n  const matchDispatchToProps = (dispatch) => {\r\n      return bindActionCreators({\r\n        // API Actions\r\n        fetchApiError: apiAction.fetchApiError,\r\n        // Movie Actions\r\n        fetchApiMovieNowPlaying: movieActions.fetchApiMovieNowPlaying,\r\n        fetchApiMoviePopular: movieActions.fetchApiMoviePopular,\r\n        fetchApiMovieTopRated: movieActions.fetchApiMovieTopRated,\r\n        fetchApiMovieUpcoming: movieActions.fetchApiMovieUpcoming,\r\n        // TV Actions\r\n        fetchApiTVAiringToday: tvActions.fetchApiTVAiringToday,\r\n        fetchApiTVOnTv: tvActions.fetchApiTVOnTv,\r\n        fetchApiTVPopular: tvActions.fetchApiTVPopular,\r\n        fetchApiTVTopRated: tvActions.fetchApiTVTopRated,\r\n      }, dispatch);\r\n  }\r\n  \r\n  export default connect(mapStateToProps, matchDispatchToProps)(GridPreview);","import React, {useState, useEffect} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\n\r\n// Actions\r\nimport * as appActions from '../../actions/AppAction';\r\n\r\n// Material UI Components\r\nimport { makeStyles, Fade, Grid, Typography, Box, IconButton, Button } from '@material-ui/core';\r\n\r\n// // Icons\r\nimport StarRoundedIcon from '@material-ui/icons/StarRounded';\r\nimport FavoriteBorderRoundedIcon from '@material-ui/icons/FavoriteBorderRounded';\r\nimport FavoriteRoundedIcon from '@material-ui/icons/FavoriteRounded';\r\nimport AddRoundedIcon from '@material-ui/icons/AddRounded';\r\nimport RemoveRoundedIcon from '@material-ui/icons/RemoveRounded';\r\n\r\n// Material UI Custom Component Style\r\nconst useStyles = makeStyles((theme) => ({\r\n    Poster: {\r\n        width: '100%',\r\n        borderRadius: theme.shape.borderRadius,\r\n    },\r\n    Margin: {\r\n        margin: theme.spacing(1, 0)\r\n    },\r\n    Rating: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        marginLeft: theme.spacing(0.25, 0),\r\n        lineHeight: 'normal',\r\n        '& svg': {\r\n            fontSize: theme.typography.h4.fontSize,\r\n            color: theme.palette.warning.main,\r\n        }\r\n    },\r\n    LikeButton: {\r\n        borderRadius: theme.shape.borderRadius,\r\n        boxShadow: 'none',\r\n        \r\n        '& svg': {\r\n            fontSize: theme.typography.h4.fontSize,\r\n        },\r\n\r\n        '&:hover': {\r\n            boxShadow: 'none',\r\n            color: theme.palette.error.main,\r\n        }\r\n    },\r\n    LikedButton: {\r\n        color: theme.palette.error.main,\r\n        '&:hover': {\r\n            color: theme.palette.error.main,\r\n        }\r\n    },\r\n    WatchlistButton: {\r\n        boxShadow: 'none',\r\n        borderRadius: theme.shape.borderRadius,\r\n        color: theme.palette.common.white,\r\n        fontSize: theme.typography.h6.fontSize,\r\n        transition: '0.4s ease-in-out',\r\n        '&:hover': {\r\n            boxShadow: 'none',\r\n            background: theme.palette.primary.dark,\r\n        }\r\n    },\r\n    WatchlistRemoveButton: {\r\n        background: theme.palette.error.main,\r\n        '&:hover': {\r\n            background: theme.palette.error.dark,\r\n        }\r\n    },\r\n    ButtonContent: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        lineHeight: 'normal'\r\n    },\r\n    TrendingContainer: {\r\n        overflowX: 'auto',\r\n        overflowY: 'hidden'\r\n    },\r\n    TrendingItem: {\r\n        cursor: 'pointer',\r\n        width: '342px'\r\n    },\r\n    SimilarPoster: {\r\n        borderRadius: theme.shape.borderRadius,\r\n        transition: '0.4s ease-in-out',\r\n\r\n        '&:hover': {\r\n            filter: 'brightness(50%)',\r\n        }\r\n    },\r\n    '@media (max-width: 425px)': {\r\n        Rating: {\r\n            margin: theme.spacing(1, 0)\r\n        },\r\n    },\r\n    '@media (min-width: 1024px)': {\r\n        Margin: {\r\n            margin: theme.spacing(2, 0)\r\n        },\r\n    },\r\n}));\r\n\r\nconst Preview = (props) => {\r\n    const Style = useStyles();\r\n\r\n    // Preview State\r\n    const [animation, setAnimation] = useState(true);\r\n    const [hasFetched, setHasFetched] = useState(false);\r\n    const [fetchedData, setFetchedData] = useState([]);\r\n\r\n    const item = props.preview;\r\n\r\n    // This method will update the users & user state and local storage\r\n    const handleUpdateState = (users, user) => {\r\n        localStorage.setItem('users', JSON.stringify(users));\r\n        localStorage.setItem('user', JSON.stringify(user));\r\n\r\n        props.setUsers(users);\r\n        props.setUser(user);\r\n    }\r\n\r\n    /* \r\n        This method will check whether array passed contains the item that was clicked on,\r\n        If so it will remove the item, if not it will add the item depending if its likes or watchlist\r\n        and if it is movie or tv\r\n    */\r\n    const addRemoveList = (users, user, item, array, category, type) => {\r\n        let check = false;\r\n\r\n        array.forEach(otherItem => {\r\n            if(otherItem.id === item.id){\r\n                check = true;\r\n                return\r\n            }else{\r\n                return\r\n            }\r\n        })\r\n\r\n        if(check === true){\r\n            const updateLikedArray = array.filter(otherItem => otherItem.id !== item.id);\r\n\r\n            const updatedUser = {\r\n                ...user,\r\n                [type]: {...user[type], [category]: updateLikedArray}\r\n            }\r\n\r\n            const updatedUsers = users.map(item => {\r\n                let newitem = {};\r\n    \r\n                if(item.id === updatedUser.id){\r\n                    newitem = updatedUser \r\n                }else{\r\n                    return item;\r\n                }\r\n    \r\n                return newitem === {} ? item : newitem\r\n\r\n            })\r\n\r\n            handleUpdateState(updatedUsers, updatedUser);\r\n\r\n            return\r\n        }else{\r\n            array.push(item);\r\n    \r\n            const updatedUser = {\r\n                ...user,\r\n                [type]: {...user[type], [category]: array}\r\n            }\r\n    \r\n            const updatedUsers = users.map(item => {\r\n                let newitem = {};\r\n    \r\n                if(item.id === updatedUser.id){\r\n                    newitem = updatedUser \r\n                }else{\r\n                    return item;\r\n                }\r\n    \r\n                return newitem === {} ? item : newitem\r\n\r\n            })\r\n\r\n            handleUpdateState(updatedUsers, updatedUser);\r\n        }\r\n    }\r\n\r\n    // This method will be called whenever a user clicks on the heart of any item \r\n    const handleLikeMovie = (item, category) => {\r\n        const users = [...props.users];\r\n        const user = {...props.user};\r\n        const newLikedArray = [...user.likes[category]];\r\n        \r\n        addRemoveList(users, user, item, newLikedArray, category, 'likes')\r\n    }\r\n\r\n    // This method will be called whenever a user clicks on the watchlist button of any item\r\n    const handleAddToWatchlist = (item, category) => {\r\n        const users = [...props.users];\r\n        const user = {...props.user};\r\n        const newWatchlistArray = [...user.watchlist[category]];\r\n        \r\n        addRemoveList(users, user, item, newWatchlistArray, category, 'watchlist')\r\n    }\r\n\r\n    // This method renders the like button either the like or unlike button\r\n    const renderLike = (item, category) => {\r\n        let check = false;\r\n\r\n        props.user.likes[category].forEach(likeItem => {\r\n            if(likeItem.id === item.id){\r\n                check = true;\r\n                return\r\n            }else{\r\n                return\r\n            }\r\n        })\r\n\r\n        if(check === true){\r\n            return(\r\n                <FavoriteRoundedIcon className={`${Style.LikeButton} ${Style.LikedButton}`} />\r\n            )\r\n        }else{\r\n            return(\r\n                <FavoriteBorderRoundedIcon />                \r\n            )\r\n        }\r\n    }\r\n\r\n    // This method renders the watchlist button either the remove or add watchlist\r\n    const renderWatchlist = (item, category) => {\r\n        let check = false;\r\n\r\n        props.user.watchlist[category].forEach(watchItem => {\r\n            if(watchItem.id === item.id){\r\n                check = true;\r\n                return\r\n            }else{\r\n                return\r\n            }\r\n        })\r\n\r\n        if(check === true){\r\n            return(\r\n                <Button className={`${Style.WatchlistButton} ${Style.WatchlistRemoveButton}`} disableRipple variant='contained' onClick={() => handleAddToWatchlist(item, category)} disabled={props.user.access === 'guest' ? true : false}>\r\n                    <div className={Style.ButtonContent}>\r\n                        <RemoveRoundedIcon />\r\n                        <Box mr={0.75} />\r\n                        <span>Watchlist</span>\r\n                    </div> \r\n                </Button>\r\n            )\r\n        }else{\r\n            return(   \r\n                <Button color='primary' className={Style.WatchlistButton} disableRipple variant='contained' onClick={() => handleAddToWatchlist(item, category)} disabled={props.user.access === 'guest' ? true : false}>\r\n                    <div className={Style.ButtonContent}>\r\n                        <AddRoundedIcon />\r\n                        <Box mr={0.75} />\r\n                        <span>Watchlist</span>\r\n                    </div> \r\n                </Button>   \r\n            )\r\n        }\r\n    }\r\n\r\n    // This method will open the preview page to display further details \r\n    const handleOpenPreview = (item, media) => {\r\n        \r\n        setAnimation(false);\r\n        \r\n        setTimeout(() => {\r\n            window.scrollTo(0, 0);\r\n            setAnimation(true);\r\n            props.setPreview(item); \r\n            props.setGridPreviewApiCategory(media);\r\n            props.setGridPreviewApiType('preview');\r\n        }, 1000);\r\n    }\r\n\r\n    // Taken from: https://stackoverflow.com/questions/2450954/how-to-randomize-shuffle-a-javascript-array\r\n    function shuffle(array) {\r\n        var currentIndex = array.length, temporaryValue, randomIndex;\r\n      \r\n        // While there remain elements to shuffle...\r\n        while (0 !== currentIndex) {\r\n      \r\n          // Pick a remaining element...\r\n          randomIndex = Math.floor(Math.random() * currentIndex);\r\n          currentIndex -= 1;\r\n      \r\n          // And swap it with the current element.\r\n          temporaryValue = array[currentIndex];\r\n          array[currentIndex] = array[randomIndex];\r\n          array[randomIndex] = temporaryValue;\r\n        }\r\n      \r\n        return array;\r\n      }\r\n\r\n    useEffect(() => {\r\n        const key = 'c287015949cec13fb17a26e50b4f054a';\r\n\r\n        if(hasFetched === false){\r\n            fetch(`https://api.themoviedb.org/3/${props.gridPreviewApiCategory}/${item.id}/similar?&api_key=${key}&language=en-US&include_adult=false`)\r\n                .then(response => response.json())\r\n                .then(json => {\r\n                    setHasFetched(true);\r\n                    setFetchedData(shuffle(json.results));\r\n                    return;\r\n                })\r\n                .catch(error => console.log(error));  \r\n        } else {\r\n            return\r\n        }\r\n    }, [hasFetched, item, props.gridPreviewApiCategory])\r\n\r\n    return (\r\n        <Fade in={animation} timeout={1000} >\r\n            <Grid container direction='column'>\r\n                <Grid item container direction='row' alignItems='center' justify='space-between'>\r\n                    <Typography className={Style.Title} variant='h2' style={{fontWeight: '700'}}>\r\n                        {(props.gridPreviewApiCategory === 'tv') ? item.original_name : (props.gridPreviewApiCategory === 'movie') ? item.title : ''}\r\n                    </Typography>\r\n                    <Typography className={Style.Rating} variant='h4'>\r\n                        <StarRoundedIcon />\r\n                        <span>\r\n                            {item.vote_average}\r\n                        </span>\r\n                    </Typography>\r\n                </Grid>\r\n                <Box className={Style.Margin} />\r\n                <Grid item>\r\n                    <img \r\n                        alt={(props.gridPreviewApiCategory === 'tv') ? item.original_name : (props.gridPreviewApiCategory === 'movie') ? item.title : ''}\r\n                        className={Style.Poster}\r\n                        src={item.poster_path === null ? 'https://via.placeholder.com/912x515' : `https://image.tmdb.org/t/p/w780/${item.backdrop_path}`}\r\n                    />\r\n                    <Box className={Style.Margin} />\r\n                    <Typography variant='h4'>\r\n                        Overview\r\n                    </Typography>\r\n                    <Box my={0.25} />\r\n                    <Typography variant='body1' paragraph>\r\n                        {item.overview}\r\n                    </Typography>\r\n                    <Grid item container direction='row' alignItems='center' justify='flex-start'>\r\n                        <IconButton aria-label='Like' className={Style.LikeButton} disableRipple onClick={() => handleLikeMovie(item, props.gridPreviewApiCategory)} disabled={props.user.access === 'guest' ? true : false}>\r\n                            {\r\n                                renderLike(item, props.gridPreviewApiCategory)\r\n                            }\r\n                        </IconButton>\r\n                        <Box mx={0.25} />\r\n                        {\r\n                            renderWatchlist(item, props.gridPreviewApiCategory)\r\n                        }\r\n                    </Grid>\r\n                </Grid>\r\n                <Box className={Style.Margin} />\r\n                <Typography variant='h5'>\r\n                    {`Similar ${(props.gridPreviewApiCategory === 'tv') ? 'TV Shows' : (props.gridPreviewApiCategory === 'movie') ? 'Movies' : ''}`} \r\n                </Typography>\r\n                <Box my={0.25} />\r\n                <Grid className={Style.TrendingContainer} item container direction='row' wrap='nowrap' justify='flex-start'>\r\n                    {\r\n                        (fetchedData === {} || fetchedData === undefined)\r\n                            ? null\r\n                                :\r\n                                fetchedData.map((fetchedItem, index) => {\r\n                                    if(fetchedItem.id === item.id){\r\n                                        return null;\r\n                                    }else{\r\n                                        return(\r\n                                            <Box className={`${Style.TrendingItem} animated fadeInSign`} style={{animationDelay: (index % 2 === 0) ? 250 : 750}} key={fetchedItem.id} my={2} mr={2}>\r\n                                                <img \r\n                                                    alt={(props.gridPreviewApiCategory === 'tv') ? fetchedItem.original_name : (props.gridPreviewApiCategory === 'movie') ? fetchedItem.title : ''}\r\n                                                    className={Style.SimilarPoster}\r\n                                                    src={fetchedItem.poster_path === null ? 'https://via.placeholder.com/276x414' : `https://image.tmdb.org/t/p/w342/${fetchedItem.poster_path}`}\r\n                                                    onMouseDown={() => handleOpenPreview(fetchedItem, props.gridPreviewApiCategory)}\r\n                                                />\r\n                                            </Box>\r\n                                        );\r\n                                    }\r\n                                })\r\n                    } \r\n                </Grid>\r\n            </Grid>\r\n        </Fade>\r\n    )\r\n}\r\n\r\n// Fetching state from store\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        // Internal State (APP)\r\n        gridPreviewApiCategory: state.app.gridPreviewApiCategory,\r\n        preview: state.app.preview,\r\n        users: state.app.users,\r\n        user: state.app.user,\r\n    };\r\n  };\r\n  \r\n  // Sending some data to an action\r\n  const matchDispatchToProps = (dispatch) => {\r\n      return bindActionCreators({\r\n        setGridPreviewApiCategory: appActions.setGridPreviewApiCategory,\r\n        setGridPreviewApiType: appActions.setGridPreviewApiType,\r\n        setPreview: appActions.setPreview, \r\n        setUsers: appActions.setUsers, \r\n        setUser: appActions.setUser \r\n      }, dispatch);\r\n  }\r\n  \r\n  export default connect(mapStateToProps, matchDispatchToProps)(Preview);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\n// Actions\nimport * as appActions from '../actions/AppAction';\nimport * as apiAction from '../actions/apiActions/Api';\nimport * as movieActions from '../actions/apiActions/Movies';\nimport * as tvActions from '../actions/apiActions/TV';\nimport fetchApi from '../utils/fetchApi';\n\n// Components\nimport SignDialog from '../components/SignDialog/SignDialog';\nimport AccountSettings from '../components/AccountSettings/AccountSettings';\nimport Header from '../components/Header/Header';\nimport Home from '../components/Home/Home';\nimport UserData from '../components/UserData/UserData';\nimport GridPreview from '../components/GridPreview/GridPreview';\nimport Preview from '../components/Preview/Preview';\n\n// Material UI Components\nimport { CssBaseline, createMuiTheme, ThemeProvider, Container, Box } from '@material-ui/core';\n\nclass App extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      // Material UI Custom Theme\n      theme: createMuiTheme({\n        palette: {\n          common: {\n            black: '#212121',\n            white: '#FAFAFA',\n          },\n          primary: {\n            main: this.props.user.color || '#455A64',\n          },\n          secondary: {\n            main: '#455A64'\n          },\n          error: {\n            main: '#EF5350',\n          },\n          success: {\n            main: '#66BB6A',\n          },\n          contrastThreshold: 4,\n          text: {\n            primary: '#212121',\n            secondary: '#616161',\n          },\n          action: {\n            hover: 'rgba(0, 0, 0, 0.08)',\n            focus: 'rgba(0, 0, 0, 0.14)',\n          }\n        },\n        typography: {\n          fontFamily: \"'Work Sans', 'Roboto', 'Helvetica', 'Arial', 'sans-serif'\",\n        },\n      })\n    }\n  }\n\n  componentDidMount = () => {\n    const key = 'c287015949cec13fb17a26e50b4f054a';\n\n    const getUser = JSON.parse(localStorage.getItem('user') || '{}');\n\n    if((Object.keys(getUser).length === 0) !== true){\n      this.props.setOpenSignDialog(false);\n    }\n\n    this.fetchTrendingApiData(key);\n    this.fetchTrendingApiPopular(key);\n    this.fetchTrendingApiGenres(key);\n  }\n\n  fetchTrendingApiData = (key) => {\n      fetchApi(`https://api.themoviedb.org/3/trending/all/week?&api_key=${key}`, this.props.fetchApiTrending);\n  }\n\n  fetchTrendingApiPopular = (key) => {\n    const types = [\n      {\n        action: this.props.fetchApiMoviePopular,\n        type: 'movie',\n      },\n      {\n        action: this.props.fetchApiTVPopular,\n        type: 'tv',\n      },\n    ]\n\n    types.forEach(item => {\n      fetchApi(`https://api.themoviedb.org/3/${item.type}/popular?api_key=${key}&language=en-US`, item.action);\n    });\n  }\n\n  fetchTrendingApiGenres = (key) => {\n    const types = [\n      {\n        action: this.props.fetchApiMovieGenres,\n        type: 'movie',\n      },\n      {\n        action: this.props.fetchApiTVGenres,\n        type: 'tv',\n      },\n    ]\n\n    types.forEach(item => {\n      fetchApi(`https://api.themoviedb.org/3/genre/${item.type}/list?api_key=${key}&language=en-US`, item.action);\n    });\n  }\n\n  render(){\n    return(\n      <React.Fragment>\n        <CssBaseline />\n          <ThemeProvider theme={this.state.theme}>\n            <Container className={'animated fadeInHeader'} maxWidth='md'>\n              <Header />\n              <Box py={2}>\n                {\n                  (this.props.gridPreviewApiCategory === 'likes' || this.props.gridPreviewApiCategory === 'watchlist')\n                    ?\n                    <UserData />\n                      :\n                      (this.props.gridPreviewApiType === 'preview')\n                        ? <Preview />\n                          :\n                          (this.props.gridPreviewApiCategory === '' || this.props.gridPreviewApiType === '')\n                            ?\n                            <Home />\n                              :\n                              <GridPreview />\n                }\n              </Box>\n              <SignDialog />\n              <AccountSettings />\n            </Container>\n          </ThemeProvider>\n      </React.Fragment>\n    );\n  }\n};\n\n// Fetching state from store\nconst mapStateToProps = (state) => {\n  return{\n    // Internal State (APP)\n    openSignDialog: state.app.openSignDialog,\n    openSearchDialog: state.app.openSearchDialog,\n    gridPreviewApiCategory: state.app.gridPreviewApiCategory,\n    gridPreviewApiType: state.app.gridPreviewApiType,\n    gridPreviewApiTitle: state.app.gridPreviewApiTitle,\n    user: state.app.user,\n  };\n};\n\n// Sending some data to an action\nconst matchDispatchToProps = (dispatch) => {\n    return bindActionCreators({\n      setOpenSignDialog: appActions.setOpenSignDialog,\n      // API Actions\n      fetchApiTrending: apiAction.fetchApiTrending,\n      // API Movies\n      fetchApiMoviePopular: movieActions.fetchApiMoviePopular,\n      fetchApiMovieGenres: movieActions.fetchApiMovieGenres,\n      // API TV\n      fetchApiTVPopular: tvActions.fetchApiTVPopular,\n      fetchApiTVGenres: tvActions.fetchApiTVGenres,\n    }, dispatch);\n}\n\nexport default connect(mapStateToProps, matchDispatchToProps)(App);","// React library\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\n// Redux Store\nimport store from './store/store';\n\n// Components\nimport App from './container/App';\n\n// Style sheet\nimport './index.css';\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));"],"sourceRoot":""}