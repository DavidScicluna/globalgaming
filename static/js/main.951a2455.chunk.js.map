{"version":3,"sources":["reducers/apiReducers/Movies.js","actionTypes/actionTypes.js","reducers/apiReducers/TV.js","reducers/apiRootReducer.js","reducers/AppReducer.js","reducers/RootReducer.js","store/store.js","actions/AppAction.js","actions/apiActions/Api.js","actions/apiActions/Movies.js","actions/apiActions/TV.js","utils/fetchApi.js","components/Signin/Signin.js","components/Signup/Signup.js","components/SignDialog/SignDialog.js","components/AccountSettings/AccountSettings.js","components/Menu/Menu.js","components/RenderDataListItem/RenderDataListItem.js","components/Search/Search.js","components/AccountMenu/AccountMenu.js","components/Header/Header.js","components/Home/Home.js","components/UserData/UserData.js","components/GridPreview/GridPreview.js","components/Preview/Preview.js","container/App.js","index.js"],"names":["initialState","nowPlaying","popular","topRated","upcoming","genres","totalPages","totalResults","moviesReducer","state","action","type","payload","total_pages","total_results","results","airingToday","onTv","tvReducer","trendingInitialState","apiRootReducer","combineReducers","trending","movies","movieReducer","tv","error","openSignDialog","openSearchDialog","openCustomizeDialog","gridPreviewApiCategory","gridPreviewApiType","gridPreviewApiTitle","preview","users","JSON","parse","localStorage","getItem","user","appReducer","rootReducer","api","ApiRootReducer","app","AppReducer","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","setOpenSignDialog","bool","setOpenSearchDialog","setOpenCustomizeDialog","setGridPreviewApiCategory","category","setGridPreviewApiType","setGridPreviewApiTitle","setPreview","item","setUsers","setUser","fetchApiTrending","data","fetchApiError","fetchApiMovieNowPlaying","fetchApiMoviePopular","fetchApiMovieTopRated","fetchApiMovieUpcoming","fetchApiMovieGenres","fetchApiTVAiringToday","fetchApiTVOnTv","fetchApiTVPopular","fetchApiTVTopRated","fetchApiTVGenres","fetchApiData","link","fetch","then","response","json","status_message","catch","actions","useStyles","makeStyles","theme","Header","fontWeight","typography","fontWeightBold","marginBottom","spacing","Avatar","cursor","width","height","fontSize","h1","fontWeightMedium","marginRight","Input","borderRadius","shape","border","palette","text","hint","color","primary","padding","transition","InputActive","main","InputError","InputSuccess","success","TextSuccess","margin","opacity","TextError","TextHidden","ButtonGroup","boxShadow","Buttons","filter","GuestButton","SigninButton","common","white","OtherButton","background","textTransform","fontWeightRegular","marginTop","Primary","marginLeft","body1","h2","Signin","handleClickDialog","handleUpdateState","Style","useState","usernameFocused","setUsernameFocused","usernameValue","setUsernameValue","passwordFocused","setPasswordFocused","passwordValue","setPasswordValue","setError","handleClickSignin","event","preventDefault","currentUsers","length","forEach","username","password","setTimeout","newUser","id","Math","random","access","initials","likes","movie","watchlist","Grid","container","direction","Fragment","Typography","className","variant","alignItems","justify","map","key","xs","Tooltip","placement","title","alt","style","backgroundColor","onClick","Box","my","FormControl","aria-label","fullWidth","onChange","target","value","handleUsernameChange","onBlur","placeholder","handlePasswordChange","align","disableRipple","size","Button","mt","CancelButton","SignupButton","Signup","usernameError","setUsernameError","usernameExistError","setUsernameExistError","usernameErrorText","setUsernameErrorText","passwordError","setPasswordError","handleUsernameValidation","match","checkUserExists","colors","onKeyPress","onMouseDown","initial","split","replace","letter","toUpperCase","jwt","sign","floor","push","handleSignup","disabled","Dialog","backdropFilter","connect","dispatch","bindActionCreators","appActions","props","currentPage","setCurrentPage","signInAnimation","setSignInAnimation","signUpAnimation","setSignUpAnimation","setItem","stringify","aria-labelledby","disableBackdropClick","disableEscapeKeyDown","maxWidth","open","TransitionComponent","Fade","transitionDuration","DialogTitle","DialogContent","secondary","hover","focus","ButtonContent","display","lineHeight","ColorAvatarContainer","flexDirection","textAlign","ColorAvatar","h4","MarginBottom","SaveButton","h6","undefined","initialsValue","setInitialsValue","currentColor","setCurrentColor","handleClickCloseCustomizeDialog","onClose","p","wrap","Hidden","smUp","xsDown","updatedUser","updatedUsers","newitem","handleSaveCustomization","Drawer","minWidth","CloseButton","ButtonActive","ButtonFolderActive","MarginRight","IconActive","transform","IconInactive","Nested","paddingLeft","Divider","openMovies","setOpenMovies","openTV","setOpenTV","movieTypes","tvTypes","handleOpenPage","handleCloseDrawer","anchor","elevation","openDrawer","List","ListItem","button","ListItemText","handleClickOpenSearchDialog","flex","Collapse","in","timeout","unmountOnExit","disablePadding","handleClickOpenCustomizeDialog","Container","Poster","Content","Rating","warning","LikeButton","LikedButton","WatchlistButton","dark","WatchlistRemoveButton","h5","Title","Year","typeData","handleGetDate","date","addRemoveList","array","check","otherItem","updateLikedArray","handleAddToWatchlist","newWatchlistArray","index","sm","Card","animationDelay","CardActionArea","CardMedia","original_name","component","image","poster_path","handleOpenPreview","CardContent","vote_average","gutterBottom","first_air_date","release_date","CardActions","disableSpacing","IconButton","newLikedArray","handleLikeMovie","likeItem","renderLike","mx","watchItem","mr","renderWatchlist","Search","SearchActive","Visible","Margin","ShowSelectContent","handleShowChange","showValue","TextField","select","paddingRight","MenuItem","searchFocused","setSearchFocused","searchEntered","setSearchEntered","searchValue","setSearchValue","setShowValue","showChanged","setShowChanged","searchMovieData","setSearchMovieData","searchTVData","setSearchTVData","searchResultsNumber","setSearchResultsNumber","searchPageNumber","setSearchPageNumber","currentOffset","setCurrentOffset","handleClickCloseSearchDialog","useEffect","String","console","log","fullScreen","Slide","disableGutters","handleSearchChange","handleClickSearch","startAdornment","InputAdornment","position","currentPageColor","otherPageColor","limit","offset","total","page","next","handleClickChangePage","Signout","ListItems","handleClosePopover","removeItem","handleClickSignOut","Popover","popperID","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","openPopper","Grow","divider","Paper","React","setOpenDrawer","setAnchorEl","setOpenPopper","handleClickOpenMenuDrawer","handleClickOpenAccountMenuPopover","currentTarget","Toolbar","edge","aria-describedby","ml","TrendingItem","TrendingContainer","overflowX","overflowY","RenderHomeApiData","header","dataName","newData","endIcon","media","media_type","src","mb","moviePopular","tvPopular","SortButton","Results","body2","RenderSortSection","sortValue","sortGroup","handleSortChange","setSortGroup","setSortValue","handleUpdateSort","handleRemoveSort","movieGenres","name","includes","tvGenres","handleShowData","newApiDataSorted","genre","genre_ids","itemGenre","RenderDataElements","movieTopRated","tvTopRated","movieTotalPages","movieTotalResults","tvTotalPages","tvTotalResults","apiAction","movieActions","tvActions","newSortGroup","updatedSortGroup","fetchApi","fetchMovieApiData","fetchTvApiData","scrollTo","SimilarPoster","animation","setAnimation","hasFetched","setHasFetched","fetchedData","setFetchedData","backdrop_path","paragraph","overview","App","componentDidMount","getUser","Object","keys","fetchTrendingApiData","fetchTrendingApiPopular","fetchTrendingApiGenres","createMuiTheme","black","contrastThreshold","fontFamily","CssBaseline","ThemeProvider","this","py","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.951a2455.chunk.js","sourcesContent":["import * as actionType from '../../actionTypes/actionTypes';\r\n\r\nconst initialState = {\r\n    nowPlaying: [],\r\n    popular: [],\r\n    topRated: [],\r\n    upcoming: [],\r\n    genres: [],\r\n    totalPages: 0,\r\n    totalResults: 0,\r\n}\r\n\r\nconst moviesReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case actionType.FETCH_API_MOVIE_NOWPLAYING:\r\n            return {\r\n                ...state,\r\n                totalPages: action.payload.total_pages,\r\n                totalResults: action.payload.total_results,\r\n                nowPlaying: action.payload.results\r\n            }\r\n        case actionType.FETCH_API_MOVIE_POPULAR:\r\n            return {\r\n                ...state,\r\n                totalPages: action.payload.total_pages,\r\n                totalResults: action.payload.total_results,\r\n                popular: action.payload.results\r\n            }\r\n        case actionType.FETCH_API_MOVIE_TOPRATED:\r\n            return {\r\n                ...state,\r\n                totalPages: action.payload.total_pages,\r\n                totalResults: action.payload.total_results,\r\n                topRated: action.payload.results\r\n            }\r\n        case actionType.FETCH_API_MOVIE_UPCOMING:\r\n            return {\r\n                ...state,\r\n                totalPages: action.payload.total_pages,\r\n                totalResults: action.payload.total_results,\r\n                upcoming: action.payload.results\r\n            }\r\n        case actionType.FETCH_API_MOVIE_GENRES:\r\n            return {\r\n                ...state,\r\n                genres: action.payload.genres\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport default moviesReducer;","// Internal State (APP)\r\nexport const SET_OPENSIGNDIALOG = 'SET_OPENSIGNDIALOG';\r\nexport const SET_OPENSEARCHDIALOG = 'SET_OPENSEARCHDIALOG';\r\nexport const SET_OPENCUSTOMIZEDIALOG = 'SET_OPENCUSTOMIZEDIALOG';\r\nexport const SET_GRIDPREVIEWAPICATEGORY = 'SET_GRIDPREVIEWAPICATEGORY';\r\nexport const SET_GRIDPREVIEWAPITYPE = 'SET_GRIDPREVIEWAPITYPE';\r\nexport const SET_GRIDPREVIEWAPITITLE = 'SET_GRIDPREVIEWAPITITLE';\r\nexport const SET_PREVIEW = 'SET_PREVIEW';\r\nexport const SET_USERS = 'SET_USERS';\r\nexport const SET_USER = 'SET_USER';\r\n\r\n// External State (API)\r\nexport const FETCH_API_TRENDING = 'FETCH_API_TRENDING';\r\nexport const FETCH_API_ERROR = 'FETCH_API_ERROR';\r\n\r\n// API Movies\r\nexport const FETCH_API_MOVIE_NOWPLAYING = 'FETCH_API_MOVIE_NOWPLAYING';\r\nexport const FETCH_API_MOVIE_POPULAR = 'FETCH_API_MOVIE_POPULAR';\r\nexport const FETCH_API_MOVIE_TOPRATED = 'FETCH_API_MOVIE_TOPRATED';\r\nexport const FETCH_API_MOVIE_UPCOMING = 'FETCH_API_MOVIE_UPCOMING';\r\nexport const FETCH_API_MOVIE_GENRES = 'FETCH_API_MOVIE_GENRES';\r\n\r\n// API TV\r\nexport const FETCH_API_TV_AIRINGTODAY = 'FETCH_API_TV_AIRINGTODAY';\r\nexport const FETCH_API_TV_ONTV = 'FETCH_API_TV_ONTV';\r\nexport const FETCH_API_TV_POPULAR = 'FETCH_API_TV_POPULAR';\r\nexport const FETCH_API_TV_TOPRATED = 'FETCH_API_TV_TOPRATED';\r\nexport const FETCH_API_TV_GENRES = 'FETCH_API_TV_GENRES';","import * as actionType from '../../actionTypes/actionTypes';\r\n\r\nconst initialState = {\r\n    airingToday: [],\r\n    onTv: [],\r\n    popular: [],\r\n    topRated: [],\r\n    genres: [],\r\n    totalPages: 0,\r\n    totalResults: 0,\r\n}\r\n\r\nconst tvReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case actionType.FETCH_API_TV_AIRINGTODAY:\r\n            return {\r\n                ...state,\r\n                totalPages: action.payload.total_pages,\r\n                totalResults: action.payload.total_results,\r\n                airingToday: action.payload.results\r\n            }\r\n        case actionType.FETCH_API_TV_ONTV:\r\n            return {\r\n                ...state,\r\n                totalPages: action.payload.total_pages,\r\n                totalResults: action.payload.total_results,\r\n                onTv: action.payload.results\r\n            }\r\n        case actionType.FETCH_API_TV_POPULAR:\r\n            return {\r\n                ...state,\r\n                totalPages: action.payload.total_pages,\r\n                totalResults: action.payload.total_results,\r\n                popular: action.payload.results\r\n            }\r\n        case actionType.FETCH_API_TV_TOPRATED:\r\n            return {\r\n                ...state,\r\n                totalPages: action.payload.total_pages,\r\n                totalResults: action.payload.total_results,\r\n                topRated: action.payload.results\r\n            }\r\n        case actionType.FETCH_API_TV_GENRES:\r\n            return {\r\n                ...state,\r\n                genres: action.payload.genres\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport default tvReducer;","import { combineReducers } from 'redux';\r\nimport * as actionType from '../actionTypes/actionTypes';\r\n\r\n// Reducers\r\nimport movieReducer from  './apiReducers/Movies';\r\nimport tvReducer from  './apiReducers/TV';\r\n\r\nconst trendingInitialState = {};\r\n\r\nconst errorInitialState = null;\r\n\r\nconst trendingReducer = (state = trendingInitialState, action) => {\r\n    switch(action.type) {\r\n        case actionType.FETCH_API_TRENDING:\r\n            return action.payload\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nconst errorReducer = (state = errorInitialState, action) => {\r\n    switch(action.type) {\r\n        case actionType.FETCH_API_ERROR:\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nconst apiRootReducer = combineReducers({trending: trendingReducer, movies: movieReducer, tv: tvReducer, error: errorReducer});\r\n\r\nexport default apiRootReducer;","import * as actionType from '../actionTypes/actionTypes';\r\n\r\nconst getUsers = JSON.parse(localStorage.getItem('users') || '[]');\r\nconst getUser = JSON.parse(localStorage.getItem('user') || '{}');\r\n\r\nconst initialState = {\r\n    openSignDialog: true,\r\n    openSearchDialog: false,\r\n    openCustomizeDialog: false,\r\n    gridPreviewApiCategory: '',\r\n    gridPreviewApiType: '',\r\n    gridPreviewApiTitle: '',\r\n    preview: {},\r\n    users: getUsers,\r\n    user: getUser\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case actionType.SET_OPENSIGNDIALOG:\r\n            return {\r\n                ...state,\r\n                openSignDialog: action.payload\r\n            }\r\n        case actionType.SET_OPENSEARCHDIALOG:\r\n            return {\r\n                ...state,\r\n                openSearchDialog: action.payload\r\n            }\r\n        case actionType.SET_OPENCUSTOMIZEDIALOG:\r\n            return {\r\n                ...state,\r\n                openCustomizeDialog: action.payload\r\n            }\r\n        case actionType.SET_GRIDPREVIEWAPICATEGORY:\r\n            return {\r\n                ...state,\r\n                gridPreviewApiCategory: action.payload,\r\n            }\r\n        case actionType.SET_GRIDPREVIEWAPITYPE:\r\n            return {\r\n                ...state,\r\n                gridPreviewApiType: action.payload,\r\n            }\r\n        case actionType.SET_GRIDPREVIEWAPITITLE:\r\n            return {\r\n                ...state,\r\n                gridPreviewApiTitle: action.payload,\r\n            }\r\n        case actionType.SET_PREVIEW:\r\n            return {\r\n                ...state,\r\n                preview: action.payload\r\n            } \r\n        case actionType.SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: action.payload\r\n            } \r\n        case actionType.SET_USER:\r\n            return {\r\n                ...state,\r\n                user: action.payload\r\n            } \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default appReducer;","import { combineReducers } from 'redux'\r\n\r\n// Reducers\r\nimport ApiRootReducer from './apiRootReducer';\r\nimport AppReducer from './AppReducer';\r\n\r\n\r\nconst rootReducer = combineReducers({api: ApiRootReducer, app: AppReducer})\r\n\r\nexport default rootReducer;","import { createStore } from 'redux';\r\nimport rootReducer from '../reducers/RootReducer';\r\n\r\nconst store = createStore(rootReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\r\n\r\nexport default store;","import * as actionType from '../actionTypes/actionTypes';\r\n\r\nexport const setOpenSignDialog = (bool) => {\r\n    return {\r\n        type: actionType.SET_OPENSIGNDIALOG,\r\n        payload: bool\r\n    }\r\n};\r\n\r\nexport const setOpenSearchDialog = (bool) => {\r\n    return {\r\n        type: actionType.SET_OPENSEARCHDIALOG,\r\n        payload: bool\r\n    }\r\n};\r\n\r\nexport const setOpenCustomizeDialog = (bool) => {\r\n    return {\r\n        type: actionType.SET_OPENCUSTOMIZEDIALOG,\r\n        payload: bool\r\n    }\r\n};\r\n\r\nexport const setGridPreviewApiCategory = (category) => {\r\n    return {\r\n        type: actionType.SET_GRIDPREVIEWAPICATEGORY,\r\n        payload: category\r\n    }\r\n};\r\n\r\nexport const setGridPreviewApiType = (type) => {\r\n    return {\r\n        type: actionType.SET_GRIDPREVIEWAPITYPE,\r\n        payload: type\r\n    }\r\n};\r\n\r\nexport const setGridPreviewApiTitle = (type) => {\r\n    return {\r\n        type: actionType.SET_GRIDPREVIEWAPITITLE,\r\n        payload: type\r\n    }\r\n};\r\n\r\nexport const setPreview = (item) => {\r\n    return {\r\n        type: actionType.SET_PREVIEW,\r\n        payload: item\r\n    }\r\n};\r\n\r\nexport const setUsers = (users) => {\r\n    return {\r\n        type: actionType.SET_USERS,\r\n        payload: users\r\n    }\r\n};\r\n\r\nexport const setUser = (user) => {\r\n    return {\r\n        type: actionType.SET_USER,\r\n        payload: user\r\n    }\r\n};","import * as actionType from '../../actionTypes/actionTypes';\r\n\r\nexport const fetchApiTrending = (data) => {\r\n    return {\r\n        type: actionType.FETCH_API_TRENDING,\r\n        payload: data\r\n    }\r\n};\r\n\r\nexport const fetchApiError = (error) => {\r\n    return {\r\n        type: actionType.FETCH_API_ERROR,\r\n        payload: error\r\n    }\r\n};","import * as actionType from '../../actionTypes/actionTypes';\r\n\r\nexport const fetchApiMovieNowPlaying = (data) => {\r\n    return {\r\n        type: actionType.FETCH_API_MOVIE_NOWPLAYING,\r\n        payload: data\r\n    }\r\n};\r\n\r\nexport const fetchApiMoviePopular = (data) => {\r\n    return {\r\n        type: actionType.FETCH_API_MOVIE_POPULAR,\r\n        payload: data\r\n    }\r\n};\r\n\r\nexport const fetchApiMovieTopRated = (data) => {\r\n    return {\r\n        type: actionType.FETCH_API_MOVIE_TOPRATED,\r\n        payload: data\r\n    }\r\n};\r\n\r\nexport const fetchApiMovieUpcoming = (data) => {\r\n    return {\r\n        type: actionType.FETCH_API_MOVIE_UPCOMING,\r\n        payload: data\r\n    }\r\n};\r\n\r\nexport const fetchApiMovieGenres = (data) => {\r\n    return {\r\n        type: actionType.FETCH_API_MOVIE_GENRES,\r\n        payload: data\r\n    }\r\n};","import * as actionType from '../../actionTypes/actionTypes';\r\n\r\nexport const fetchApiTVAiringToday = (data) => {\r\n    return {\r\n        type: actionType.FETCH_API_TV_AIRINGTODAY,\r\n        payload: data\r\n    }\r\n};\r\n\r\nexport const fetchApiTVOnTv= (data) => {\r\n    return {\r\n        type: actionType.FETCH_API_TV_ONTV,\r\n        payload: data\r\n    }\r\n};\r\n\r\nexport const fetchApiTVPopular = (data) => {\r\n    return {\r\n        type: actionType.FETCH_API_TV_POPULAR,\r\n        payload: data\r\n    }\r\n};\r\n\r\nexport const fetchApiTVTopRated = (data) => {\r\n    return {\r\n        type: actionType.FETCH_API_TV_TOPRATED,\r\n        payload: data\r\n    }\r\n};\r\n\r\nexport const fetchApiTVGenres = (data) => {\r\n    return {\r\n        type: actionType.FETCH_API_TV_GENRES,\r\n        payload: data\r\n    }\r\n};","// Actions Types\r\nimport * as actions from '../actions/apiActions/Api';\r\n\r\nconst fetchApiData = (link, action) => {\r\n    fetch(link)\r\n    .then(response => response.json())\r\n    .then(json => {\r\n        if(json.status_message) {\r\n            throw(json.status_message);\r\n        } else {\r\n            action(json);\r\n        }\r\n    })\r\n    .catch(error => {\r\n        actions.fetchApiError(error);\r\n    })\r\n}\r\n\r\nexport default fetchApiData;","import React, {useState} from 'react';\r\n\r\n// Material UI Components\r\nimport { makeStyles, Grid, Typography, Tooltip, Avatar, Box, FormControl, Input, ButtonGroup, Button} from '@material-ui/core';\r\n\r\n// Material UI Custom Component Style\r\nconst useStyles = makeStyles((theme) => ({\r\n    Header: {\r\n        fontWeight: theme.typography.fontWeightBold,\r\n        marginBottom: theme.spacing(0.25),\r\n    },\r\n    Avatar: {\r\n        cursor: 'pointer',\r\n        width: '100px',\r\n        height: '100px',\r\n        fontSize: theme.typography.h1.fontSize,\r\n        fontWeight: theme.typography.fontWeightMedium,\r\n        marginRight: theme.spacing(1),\r\n        marginBottom: theme.spacing(4),\r\n    },\r\n    Input: {\r\n        borderRadius: theme.shape.borderRadius,\r\n        border: `1px solid ${theme.palette.text.hint}`,\r\n        color: theme.palette.text.primary,\r\n        padding: theme.spacing(1, 2),\r\n        transition: '0.4s ease-in-out',\r\n        '&:hover': {\r\n            border: `2px solid ${theme.palette.text.primary}`,\r\n        },\r\n        '&::before': {\r\n            border: [['none'], '!important'],\r\n        },\r\n        '&::after': {\r\n            border: [['none'], '!important'],\r\n        }\r\n    },\r\n    InputActive: {\r\n        border: `2px solid ${theme.palette.primary.main}`,\r\n    },\r\n    InputError: {\r\n        border: `2px solid ${theme.palette.error.main}`,\r\n    },\r\n    InputSuccess: {\r\n        border: `2px solid ${theme.palette.success.main}`,\r\n    },\r\n    TextSuccess: {\r\n        transition: '0.4s ease-in-out',\r\n        color: theme.palette.success.main,\r\n        margin: theme.spacing(1, 0),\r\n        opacity: 1 \r\n    },\r\n    TextError: {\r\n        transition: '0.4s ease-in-out',\r\n        color: theme.palette.error.main,\r\n        margin: theme.spacing(1, 0),\r\n        opacity: 1 \r\n    },\r\n    TextHidden: {\r\n        transition: '0.4s ease-in-out',\r\n        opacity: 0\r\n    },\r\n    ButtonGroup: {\r\n        boxShadow: 'none',\r\n        '&:hover': {\r\n            boxShadow: 'none',\r\n        }\r\n    },\r\n    Buttons: {\r\n        transition: '0.4s ease-in-out',\r\n        margin: theme.spacing(0, 2),\r\n        border: [['none'], '!important'],\r\n        borderRadius: [[theme.shape.borderRadius], '!important'],\r\n        '&:hover': {\r\n            filter: 'brightness(95%)',\r\n        }\r\n    },\r\n    GuestButton: {\r\n        boxShadow: 'none',\r\n        '&:hover': {\r\n            boxShadow: 'none',\r\n        }\r\n    },\r\n    SigninButton: {\r\n        color: theme.palette.common.white,\r\n        boxShadow: 'none',\r\n        '&:hover': {\r\n            boxShadow: 'none',\r\n        }\r\n    },\r\n    OtherButton: {\r\n        background: 'transparent',\r\n        textTransform: 'capitalize',\r\n        fontSize: '14px',\r\n        fontWeight: theme.typography.fontWeightRegular,\r\n        marginTop: theme.spacing(1),\r\n\r\n        '&:hover': {\r\n            background: 'transparent',\r\n        }\r\n    },\r\n    Primary: {\r\n        marginLeft: theme.spacing(0.5),\r\n        fontWeight: theme.typography.fontWeightMedium,\r\n        color: theme.palette.primary.main\r\n    },\r\n    '@media (max-width: 425px)': {\r\n        Header: {\r\n            fontSize: theme.typography.body1.fontSize\r\n        },\r\n        Avatar: {\r\n            width: '65px',\r\n            height: '65px',\r\n            fontSize: theme.typography.h2.fontSize,\r\n            marginBottom: theme.spacing(1),\r\n        },\r\n        Buttons: {\r\n            margin: theme.spacing(0, 1),\r\n        },\r\n        GuestButton: {\r\n            fontSize: '13px',\r\n        },\r\n        OtherButton: {\r\n            fontSize: '12px',\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function Signin( {users, handleClickDialog, handleUpdateState} ) {\r\n    const Style = useStyles();\r\n\r\n    // Username Input State\r\n    const [usernameFocused, setUsernameFocused] = useState(false); \r\n    const [usernameValue, setUsernameValue] = useState('');  \r\n    \r\n    // Password Input State\r\n    const [passwordFocused, setPasswordFocused] = useState(false); \r\n    const [passwordValue, setPasswordValue] = useState('');  \r\n\r\n    const [error, setError] = useState(null);  \r\n    \r\n    // Username Input Methods \r\n    // This method will save whatever the user types in the text field\r\n    const handleUsernameChange = (event) => {\r\n        event.preventDefault();\r\n        setUsernameValue(event.target.value);\r\n    }\r\n\r\n    // This method will set the username to the clicked avatar\r\n    const handleClickSetUsername = (text) => {\r\n        setUsernameValue(text);\r\n    }\r\n\r\n    // Password Input Methods \r\n    // This method will save whatever the user types in the text field\r\n    const handlePasswordChange = (event) => {\r\n        event.preventDefault();\r\n        setPasswordValue(event.target.value);\r\n    }\r\n\r\n    // This method will check whether there is a user registered with the given input text\r\n    const handleClickSignin = (event, type) => {\r\n        event.preventDefault();\r\n\r\n        const currentUsers = [...users];\r\n\r\n        if(type === 'user'){\r\n            if(currentUsers.length === 0){\r\n                setError(true);\r\n            }else{\r\n                currentUsers.forEach(item => {\r\n                    if(usernameValue === item.username && passwordValue === item.password){\r\n                        setError(false);\r\n                        handleUpdateState(currentUsers, item);\r\n                        setTimeout(() => {\r\n                            handleClickDialog('correct');\r\n                        }, 500);\r\n                    }else{\r\n                        setError(true);\r\n                    }\r\n                });\r\n            }\r\n        }else{\r\n            const newUser = {\r\n                id: Math.random(),\r\n                username: 'Guest',\r\n                password: '',\r\n                access: 'guest',\r\n                initials: 'G',\r\n                likes: {\r\n                    movie: [],\r\n                    tv: [],\r\n                },\r\n                watchlist: {\r\n                    movie: [],\r\n                    tv: [],\r\n                },\r\n                color: '#757575',\r\n            }\r\n\r\n            handleUpdateState(currentUsers, newUser);\r\n            setTimeout(() => {\r\n                handleClickDialog('correct');\r\n            }, 500);\r\n        }\r\n    }\r\n\r\n    // This method will open the popper\r\n    // const handleGuestPopperOpen = (event) => {\r\n    //     setAnchorEl(event.currentTarget);\r\n    // }\r\n\r\n    // This method will close the popper\r\n    // const handleGuestPopperClose = () => {\r\n    //     setAnchorEl(null);\r\n    // }\r\n\r\n    return (\r\n        <Grid container direction='column'>\r\n            {\r\n                (users.length === 0)\r\n                    ? null\r\n                        : \r\n                        <React.Fragment>\r\n                            <Grid item>\r\n                                <Typography className={Style.Header} variant='h6' color='textPrimary'>\r\n                                    Accounts\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item container direction='row' alignItems='center' justify='flex-start'>\r\n                                {\r\n                                    users.map((item) => {\r\n                                        return(\r\n                                            <Grid key={item.id} item xs={'auto'}>\r\n                                                <Tooltip placement='bottom' title={item.username}>\r\n                                                    <Avatar\r\n                                                        alt={item.username}\r\n                                                        className={Style.Avatar}\r\n                                                        style={{backgroundColor: item.color}}\r\n                                                        variant='rounded'\r\n                                                        onClick={() => handleClickSetUsername(item.username)}\r\n                                                    >\r\n                                                        {item.initials}\r\n                                                    </Avatar>\r\n                                                </Tooltip>\r\n                                            </Grid>\r\n                                        );\r\n                                    })\r\n                                }\r\n                            </Grid>\r\n                        </React.Fragment>\r\n            }\r\n            <Grid item>\r\n                <Typography variant='body1'>\r\n                    Username\r\n                </Typography>\r\n                <Box my={0.25} />\r\n                <FormControl style={{width: '100%'}}>\r\n                    <Input\r\n                        aria-label='Change Username'\r\n                        color='secondary'\r\n                        className={usernameFocused === true ? `${Style.Input} ${Style.InputActive}` : error === true ? `${Style.Input} ${Style.InputError}` : error === false ? `${Style.Input} ${Style.InputSuccess}` : Style.Input}\r\n                        error={error}\r\n                        fullWidth\r\n                        onChange={(event) => handleUsernameChange(event)}\r\n                        onBlur={() => setUsernameFocused(false)}\r\n                        placeholder='JohnSmith'\r\n                        type='text'\r\n                        variant='outlined'\r\n                        value={usernameValue}\r\n                    />\r\n                </FormControl>\r\n            </Grid>\r\n            <Box my={0.5} />\r\n            <Grid item>\r\n                <Typography variant='body1'>\r\n                    Password\r\n                </Typography>\r\n                <Box my={0.25} />\r\n                <FormControl style={{width: '100%'}}>\r\n                    <Input\r\n                        aria-label='Change Password'\r\n                        color='secondary'\r\n                        className={passwordFocused === true ? `${Style.Input} ${Style.InputActive}` : error === true ? `${Style.Input} ${Style.InputError}` : error === false ? `${Style.Input} ${Style.InputSuccess}` : Style.Input}\r\n                        error={error}\r\n                        fullWidth\r\n                        onChange={(event) => handlePasswordChange(event)}\r\n                        onBlur={() => setPasswordFocused(false)}\r\n                        type='password'\r\n                        variant='outlined'\r\n                        value={passwordValue}\r\n                    />\r\n                </FormControl>\r\n            </Grid>\r\n            <Grid item>\r\n                <Typography align='center' className={error === true ? Style.TextError : error === false ? Style.TextSuccess : Style.TextHidden}>{error === true ? 'Sign in credentials are incorrect!' : error === false ? 'Sign in credentials are correct!' : 'Hidden'}</Typography>\r\n            </Grid>\r\n            <Grid item>\r\n                <ButtonGroup className={Style.ButtonGroup} disableRipple fullWidth size='large' variant='contained'>\r\n                    <Button className={`${Style.Buttons} ${Style.GuestButton}`} onClick={(event) => handleClickSignin(event, 'guest')}>As Guest</Button>\r\n                    <Button color='secondary' className={`${Style.Buttons} ${Style.SigninButton}`} onClick={(event) => handleClickSignin(event, 'user')}>Sign in</Button>\r\n                </ButtonGroup>\r\n                <Box mt={0.5} />\r\n                <Button \r\n                    className={Style.OtherButton}\r\n                    color='default' \r\n                    disableRipple \r\n                    fullWidth \r\n                    size='large' \r\n                    variant='text' \r\n                    onClick={() => handleClickDialog('up')}>Don't have an account? <span className={Style.Primary}>Click here</span>\r\n                </Button>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n","import React, {useState} from 'react';\r\n\r\n// Material UI Components\r\nimport { makeStyles, Grid, Typography, Box, FormControl, Input, ButtonGroup, Button} from '@material-ui/core';\r\n\r\n// JSON Web Token\r\nimport jwt from 'jsonwebtoken';\r\n\r\n// Material UI Custom Component Style\r\nconst useStyles = makeStyles((theme) => ({\r\n    Input: {\r\n        borderRadius: theme.shape.borderRadius,\r\n        border: `1px solid ${theme.palette.text.hint}`,\r\n        color: theme.palette.text.primary,\r\n        padding: theme.spacing(1, 2),\r\n        transition: '0.4s ease-in-out',\r\n        '&:hover': {\r\n            border: `2px solid ${theme.palette.text.primary}`,\r\n        },\r\n        '&::before': {\r\n            border: [['none'], '!important'],\r\n        },\r\n        '&::after': {\r\n            border: [['none'], '!important'],\r\n        }\r\n    },\r\n    InputActive: {\r\n        border: `2px solid ${theme.palette.primary.main}`,\r\n    },\r\n    InputError: {\r\n        border: `2px solid ${theme.palette.error.main}`,\r\n    },\r\n    InputSuccess: {\r\n        border: `2px solid ${theme.palette.success.main}`,\r\n    },\r\n    TextSuccess: {\r\n        transition: '0.4s ease-in-out',\r\n        color: theme.palette.success.main,\r\n        margin: theme.spacing(1, 0),\r\n        opacity: 1 \r\n    },\r\n    TextError: {\r\n        transition: '0.4s ease-in-out',\r\n        color: theme.palette.error.main,\r\n        margin: theme.spacing(1, 0),\r\n        opacity: 1 \r\n    },\r\n    TextHidden: {\r\n        transition: '0.4s ease-in-out',\r\n        opacity: 0\r\n    },\r\n    ButtonGroup: {\r\n        boxShadow: 'none',\r\n        '&:hover': {\r\n            boxShadow: 'none',\r\n        }\r\n    },\r\n    Buttons: {\r\n        transition: '0.4s ease-in-out',\r\n        margin: theme.spacing(0, 2),\r\n        border: [['none'], '!important'],\r\n        borderRadius: [[theme.shape.borderRadius], '!important'],\r\n        '&:hover': {\r\n            filter: 'brightness(95%)',\r\n        }\r\n    },\r\n    CancelButton: {\r\n        boxShadow: 'none',\r\n        '&:hover': {\r\n            boxShadow: 'none',\r\n        }\r\n    },\r\n    SignupButton: {\r\n        color: theme.palette.common.white,\r\n        boxShadow: 'none',\r\n        '&:hover': {\r\n            boxShadow: 'none',\r\n        }\r\n    },\r\n    OtherButton: {\r\n        background: 'transparent',\r\n        textTransform: 'capitalize',\r\n        fontSize: '14px',\r\n        fontWeight: theme.typography.fontWeightRegular,\r\n        marginTop: theme.spacing(1),\r\n\r\n        '&:hover': {\r\n            background: 'transparent',\r\n        }\r\n    },\r\n    Primary: {\r\n        marginLeft: theme.spacing(0.5),\r\n        fontWeight: theme.typography.fontWeightMedium,\r\n        color: theme.palette.primary.main\r\n    },\r\n    '@media (max-width: 425px)': {\r\n        Buttons: {\r\n            margin: theme.spacing(0, 1),\r\n        },\r\n        CancelButton: {\r\n            fontSize: '13px',\r\n        },\r\n        OtherButton: {\r\n            fontSize: '12px',\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function Signup( {users, handleClickDialog, handleUpdateState} ) {\r\n    const Style = useStyles();\r\n\r\n    // Username Input State\r\n    const [usernameFocused, setUsernameFocused] = useState(false); \r\n    const [usernameValue, setUsernameValue] = useState('');  \r\n    const [usernameError, setUsernameError] = useState(null);\r\n    const [usernameExistError, setUsernameExistError] = useState(false);\r\n    const [usernameErrorText, setUsernameErrorText] = useState('Incorrect Input! Example: johnsmith');\r\n    \r\n    // Password Input State\r\n    const [passwordFocused, setPasswordFocused] = useState(false); \r\n    const [passwordValue, setPasswordValue] = useState('');  \r\n    const [passwordError, setPasswordError] = useState(null);\r\n\r\n    \r\n    // Username Input Methods \r\n    // This method will save whatever the user types in the text field\r\n    const handleUsernameChange = (event) => {\r\n        event.preventDefault();\r\n        setUsernameValue(event.target.value);\r\n    }\r\n\r\n    // This method will validate the username text field and if correct will set the initals\r\n    const handleUsernameValidation = () => {\r\n        const validation = /^[a-zA-Z0-9]+$/\r\n\r\n        if(usernameExistError === true){\r\n            setUsernameValue('');\r\n            setUsernameExistError(false);\r\n        }\r\n\r\n        setUsernameFocused(false)\r\n    \r\n        if(usernameValue.match(validation)){\r\n            const currentUsers = [...users];\r\n            let checkUserExists; \r\n\r\n            currentUsers.forEach(item => {\r\n                if(item.username === usernameValue){\r\n                    setUsernameError(true)\r\n                    setUsernameErrorText('Incorrect Input! Username already exists')\r\n                    return checkUserExists = true;\r\n                } else{\r\n                    return checkUserExists = false;\r\n                }\r\n            })\r\n\r\n            if(checkUserExists === true){\r\n                setUsernameError(true);\r\n                setUsernameExistError(true);\r\n                return\r\n            }else {\r\n                setUsernameExistError(false);\r\n                setUsernameError(false);\r\n            }\r\n        }else{\r\n            setUsernameError(true);\r\n        }\r\n    }\r\n\r\n    // Password Input Methods \r\n    // This method will save whatever the user types in the text field\r\n    const handlePasswordChange = (event) => {\r\n        event.preventDefault();\r\n        setPasswordValue(event.target.value);\r\n    }\r\n\r\n    // This method will validate the password text field\r\n    const handlePasswordValidation = () => {\r\n        setPasswordFocused(false)\r\n        \r\n        if(passwordValue.length >= 8){\r\n            setPasswordError(false);\r\n        }else{\r\n            setPasswordError(true);\r\n        }\r\n    }\r\n\r\n    // Colors State\r\n    const colors = [\r\n        {\r\n            id: Math.random(),\r\n            title: 'Pink',\r\n            color: '#EC407A'\r\n        },\r\n        {\r\n            id: Math.random(),\r\n            title: 'Purple',\r\n            color: '#AB47BC'\r\n        },\r\n        {\r\n            id: Math.random(),\r\n            title: 'Indigo',\r\n            color: '#5C6BC0'\r\n        },\r\n        {\r\n            id: Math.random(),\r\n            title: 'Blue',\r\n            color: '#42A5F5'\r\n        },\r\n        {\r\n            id: Math.random(),\r\n            title: 'Teal',\r\n            color: '#26A69A'\r\n        },\r\n        {\r\n            id: Math.random(),\r\n            title: 'Amber',\r\n            color: '#FFCA28'\r\n        },\r\n        {\r\n            id: Math.random(),\r\n            title: 'Orange',\r\n            color: '#FFA726'\r\n        },\r\n        {\r\n            id: Math.random(),\r\n            title: 'Deep Orange',\r\n            color: '#FF7043'\r\n        },\r\n    ]\r\n\r\n    const handleSignup = (event) => {\r\n        event.preventDefault();\r\n\r\n        const currentUsers = [...users];        \r\n\r\n        const newUsername = usernameValue.split('');\r\n        const initial = newUsername[0].replace(/^\\w/, letter => letter.toUpperCase());\r\n        const token = jwt.sign({username: usernameValue, password: passwordValue}, 'secret');\r\n\r\n        const newUser = {\r\n            id: token,\r\n            username: usernameValue,\r\n            password: passwordValue,\r\n            access: 'user',\r\n            initials: initial,\r\n            likes: {\r\n                movie: [],\r\n                tv: [],\r\n            },\r\n            watchlist: {\r\n                movie: [],\r\n                tv: [],\r\n            },\r\n            color: colors[Math.floor(Math.random() * colors.length)].color,\r\n        }\r\n\r\n        currentUsers.push(newUser);\r\n\r\n        handleUpdateState(currentUsers, newUser);\r\n        setTimeout(() => {\r\n            handleClickDialog('correct');\r\n        }, 500);\r\n    }\r\n\r\n    return (\r\n        <Grid container direction='column'>\r\n            <Grid item>\r\n                <Typography variant='body1'>\r\n                    Username\r\n                </Typography>\r\n                <Box my={0.25} />\r\n                <FormControl style={{width: '100%'}}>\r\n                    <Input\r\n                        aria-label='Change Username'\r\n                        color='secondary'\r\n                        className={usernameFocused === true ? `${Style.Input} ${Style.InputActive}` : usernameError === true ? `${Style.Input} ${Style.InputError}` : usernameError === false ? `${Style.Input} ${Style.InputSuccess}` : Style.Input}\r\n                        error={usernameError}\r\n                        \r\n                        fullWidth\r\n                        onChange={(event) => handleUsernameChange(event)}\r\n                        onKeyPress={() => handleUsernameValidation()}\r\n                        onMouseDown={() => setUsernameFocused(true)}\r\n                        onBlur={() => handleUsernameValidation()}\r\n                        placeholder='JohnSmith'\r\n                        type='text'\r\n                        variant='outlined'\r\n                        value={usernameExistError === true ? usernameErrorText : usernameValue}\r\n                    />\r\n                </FormControl>\r\n            </Grid>\r\n            <Box my={0.5} />\r\n            <Grid item>\r\n                <Typography variant='body1'>\r\n                    Password\r\n                </Typography>\r\n                <Box my={0.25} />\r\n                <FormControl style={{width: '100%'}}>\r\n                    <Input\r\n                        aria-label='Change Password'\r\n                        color='secondary'\r\n                        className={passwordFocused === true ? `${Style.Input} ${Style.InputActive}` : passwordError === true ? `${Style.Input} ${Style.InputError}` : passwordError === false ? `${Style.Input} ${Style.InputSuccess}` : Style.Input}\r\n                        error={passwordError}\r\n                        fullWidth\r\n                        onChange={(event) => handlePasswordChange(event)}\r\n                        onMouseDown={() => setPasswordFocused(true)}\r\n                        onBlur={() => handlePasswordValidation()}\r\n                        type='password'\r\n                        variant='outlined'\r\n                        value={passwordValue}\r\n                    />\r\n                </FormControl>\r\n            </Grid>\r\n            <Grid item>\r\n                <Typography align='center' className={usernameError === true || passwordError === true ? Style.TextError : usernameError === false || passwordError === false ? Style.TextSuccess : Style.TextHidden}>{usernameError === true || passwordError === true ? 'Sign in credentials are incorrect!' : usernameError === false || passwordError === false ? 'Sign in credentials are correct!' : 'Hidden'}</Typography>\r\n            </Grid>\r\n            <Grid item>\r\n                <ButtonGroup className={Style.ButtonGroup} disableRipple fullWidth size='large' variant='contained'>\r\n                    <Button className={`${Style.Buttons} ${Style.CancelButton}`} onClick={() => handleClickDialog('in')}>Cancel</Button>\r\n                    <Button color='secondary' className={`${Style.Buttons} ${Style.SignupButton}`} onClick={(event) => handleSignup(event)} disabled={(usernameError === true || usernameError === null) && (passwordError === true || passwordError === null) ? true : false}>Sign in</Button>\r\n                </ButtonGroup>\r\n                <Box mt={0.5} />\r\n                <Button \r\n                    className={Style.OtherButton}\r\n                    color='default' \r\n                    disableRipple \r\n                    fullWidth \r\n                    size='large' \r\n                    variant='text' \r\n                    onClick={() => handleClickDialog('in')}>Don't have an account? <span className={Style.Primary}>Click here</span>\r\n                </Button>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n","import React, {useState} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\n\r\n// Actions\r\nimport * as appActions from '../../actions/AppAction';\r\n\r\n// Components\r\nimport Signin from '../Signin/Signin';\r\nimport Signup from '../Signup/Signup';\r\n\r\n// Material UI Components\r\nimport { makeStyles, Dialog, Fade, DialogTitle, DialogContent} from '@material-ui/core';\r\n\r\n// Material UI Custom Component Style\r\nconst useStyles = makeStyles(() => ({\r\n    Dialog : {\r\n        backdropFilter: 'blur(10px)',\r\n    },\r\n}));\r\n\r\nconst SignDialog = (props) => {\r\n    const Style = useStyles();\r\n\r\n    const [currentPage, setCurrentPage] = useState('in');\r\n\r\n    // Animation State\r\n    const [signInAnimation, setSignInAnimation] = useState(true);\r\n    const [signUpAnimation, setSignUpAnimation] = useState(false);\r\n\r\n    // This method will set the dialog content depending on the currentPage state or close the dialog\r\n    const handleClickDialog = (type) => {\r\n        switch(type){\r\n            case 'in':\r\n                setSignUpAnimation(false);\r\n\r\n                setTimeout(() => {\r\n                    setSignInAnimation(true);\r\n                    setCurrentPage(type);\r\n                }, 1000);\r\n                return;\r\n            case 'up':\r\n                setSignInAnimation(false);\r\n\r\n                setTimeout(() => {\r\n                    setSignUpAnimation(true);\r\n                    setCurrentPage(type);\r\n                }, 1000);\r\n                return;\r\n            case 'correct':\r\n                props.setOpenSignDialog(false);\r\n                setSignInAnimation(true);\r\n                setSignUpAnimation(true);\r\n\r\n                setTimeout(() => {\r\n                    setCurrentPage('in');\r\n                }, 1000);\r\n                return;\r\n            default:\r\n                return;\r\n        }\r\n    }\r\n\r\n    // This method will update the users & user state and local storage\r\n    const handleUpdateState = (users, user) => {\r\n        localStorage.setItem('users', JSON.stringify(users));\r\n        localStorage.setItem('user', JSON.stringify(user));\r\n\r\n        props.setUsers(users);\r\n        props.setUser(user);\r\n    }\r\n\r\n    return (\r\n        <Dialog\r\n            className={Style.Dialog}\r\n            aria-labelledby='SignTitle'\r\n            disableBackdropClick\r\n            disableEscapeKeyDown\r\n            fullWidth\r\n            maxWidth='xs'\r\n            open={props.openSignDialog}\r\n            TransitionComponent={Fade}\r\n            transitionDuration={1000}\r\n\r\n        >\r\n            <DialogTitle id='SignTitle'>\r\n                {\r\n                    currentPage === 'in'\r\n                        ? <span className={signInAnimation === true ? 'animated fadeInSign' : 'animated fadeOutSign'}>Sign in</span>\r\n                            : <span className={signUpAnimation === true ? 'animated fadeInSign' : 'animated fadeOutSign'}>Sign up</span>\r\n                }\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                {\r\n                    currentPage === 'in'\r\n                        ? <div className={signInAnimation === true ? 'animated fadeInSign' : 'animated fadeOutSign'}><Signin users={props.users} handleClickDialog={handleClickDialog} handleUpdateState={handleUpdateState} /></div>\r\n                            : <div className={signUpAnimation === true ? 'animated fadeInSign' : 'animated fadeOutSign'}><Signup users={props.users} handleClickDialog={handleClickDialog} handleUpdateState={handleUpdateState} /></div>\r\n                }\r\n            </DialogContent>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\n// Fetching state from store\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        openSignDialog: state.app.openSignDialog,\r\n        users: state.app.users\r\n    };\r\n};\r\n\r\n// Sending some data to an action\r\nconst matchDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({\r\n        setOpenSignDialog: appActions.setOpenSignDialog,\r\n        setUsers: appActions.setUsers,\r\n        setUser: appActions.setUser\r\n    }, dispatch);\r\n}\r\n\r\nexport default connect(mapStateToProps, matchDispatchToProps)(SignDialog);","import React, {useState} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\n\r\n// Actions\r\nimport * as appActions from '../../actions/AppAction';\r\n\r\n// Material UI Components\r\nimport { makeStyles, Dialog, Fade, DialogTitle, Grid, Button, Box, Typography, Avatar, FormControl, Input, Hidden, ButtonGroup} from '@material-ui/core';\r\n\r\n// Icons\r\nimport CloseRoundedIcon from '@material-ui/icons/CloseRounded';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\n\r\n// Material UI Custom Component Style\r\nconst useStyles = makeStyles((theme) => ({\r\n    DialogTitle: {\r\n        padding: theme.spacing(2),\r\n    },\r\n    Button : {\r\n        color: theme.palette.text.secondary,\r\n        transition: '0.4s ease-in-out',\r\n        background: theme.palette.action.hover,\r\n        '&:hover': {\r\n            background: theme.palette.action.focus,\r\n            color: theme.palette.text.primary\r\n        }\r\n    },\r\n    ButtonContent: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        lineHeight: 'normal'\r\n    },\r\n    Header: {\r\n        fontWeight: theme.typography.fontWeightBold,\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    Avatar: {\r\n        width: '125px',\r\n        height: '125px',\r\n        fontSize: '120px',\r\n        fontWeight: theme.typography.fontWeightMedium,\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    Input: {\r\n        borderRadius: theme.shape.borderRadius,\r\n        border: `1px solid ${theme.palette.text.hint}`,\r\n        color: theme.palette.text.primary,\r\n        padding: theme.spacing(1, 2),\r\n        transition: '0.4s ease-in-out',\r\n        '&:hover': {\r\n            border: `2px solid ${theme.palette.text.primary}`,\r\n        },\r\n        '&::before': {\r\n            border: [['none'], '!important'],\r\n        },\r\n        '&::after': {\r\n            border: [['none'], '!important'],\r\n        }\r\n    },\r\n    InputActive: {\r\n        border: `2px solid ${theme.palette.primary.main}`,\r\n    },\r\n    InputError: {\r\n        border: `2px solid ${theme.palette.error.main}`,\r\n    },\r\n    InputSuccess: {\r\n        border: `2px solid ${theme.palette.success.main}`,\r\n    },\r\n    ColorAvatarContainer: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        textAlign: 'center',\r\n        margin: theme.spacing(1, 0),\r\n    },\r\n    ColorAvatar: {\r\n        cursor: 'pointer',\r\n        width: '50px',\r\n        height: '50px',\r\n        '& svg':{\r\n            fontSize: theme.typography.h4.fontSize,\r\n        }\r\n    },\r\n    MarginBottom: {\r\n        margin: theme.spacing(2, 0),\r\n    },\r\n    ButtonGroup: {\r\n        boxShadow: 'none',\r\n        '&:hover': {\r\n            boxShadow: 'none',\r\n        }\r\n    },\r\n    Buttons: {\r\n        transition: '0.4s ease-in-out',\r\n        margin: theme.spacing(0, 2),\r\n        border: [['none'], '!important'],\r\n        borderRadius: [[theme.shape.borderRadius], '!important'],\r\n        '&:hover': {\r\n            filter: 'brightness(95%)',\r\n        }\r\n    },\r\n    CancelButton: {\r\n        boxShadow: 'none',\r\n        '&:hover': {\r\n            boxShadow: 'none',\r\n        }\r\n    },\r\n    SaveButton: {\r\n        color: theme.palette.common.white,\r\n        boxShadow: 'none',\r\n        '&:hover': {\r\n            boxShadow: 'none',\r\n        }\r\n    },\r\n    '@media (max-width: 425px)': {\r\n        DialogTitle: {\r\n            padding: theme.spacing(1, 1, 0, 1),\r\n        },\r\n        Header: {\r\n            fontSize: theme.typography.h6.fontSize\r\n        },\r\n        Avatar: {\r\n            width: '100px',\r\n            height: '100px',\r\n            fontSize: theme.typography.h1.fontSize,\r\n            marginBottom: theme.spacing(1),\r\n        },\r\n        MarginBottom: {\r\n            margin: theme.spacing(1, 0),\r\n        },\r\n        Buttons: {\r\n            margin: theme.spacing(0, 1),\r\n        },\r\n    },\r\n}));\r\n\r\nconst AccountSettings = (props) => {\r\n    const Style = useStyles();\r\n\r\n    // Avatar Input State\r\n    const [initialsValue, setInitialsValue] = useState(props.user.initials === undefined ? 'J' : props.user.initials);  \r\n\r\n    // Username Input State\r\n    const [usernameFocused, setUsernameFocused] = useState(false); \r\n    const [usernameValue, setUsernameValue] = useState(props.user.username === undefined ? 'JohnSmith' : props.user.username);  \r\n    const [usernameError, setUsernameError] = useState(null);  \r\n\r\n    // Password Input State\r\n    const [passwordFocused, setPasswordFocused] = useState(false); \r\n    const [passwordValue, setPasswordValue] = useState(props.user.password === undefined ? 'JohnSmith' : props.user.password);  \r\n    const [passwordError, setPasswordError] = useState(null);  \r\n    \r\n    // Color State\r\n    const [currentColor, setCurrentColor] = useState(props.user.color);\r\n    const colors = [\r\n        {\r\n            id: Math.random(),\r\n            title: 'Pink',\r\n            color: '#EC407A'\r\n        },\r\n        {\r\n            id: Math.random(),\r\n            title: 'Purple',\r\n            color: '#AB47BC'\r\n        },\r\n        {\r\n            id: Math.random(),\r\n            title: 'Indigo',\r\n            color: '#5C6BC0'\r\n        },\r\n        {\r\n            id: Math.random(),\r\n            title: 'Blue',\r\n            color: '#42A5F5'\r\n        },\r\n        {\r\n            id: Math.random(),\r\n            title: 'Teal',\r\n            color: '#26A69A'\r\n        },\r\n        {\r\n            id: Math.random(),\r\n            title: 'Amber',\r\n            color: '#FFCA28'\r\n        },\r\n        {\r\n            id: Math.random(),\r\n            title: 'Orange',\r\n            color: '#FFA726'\r\n        },\r\n        {\r\n            id: Math.random(),\r\n            title: 'Deep Orange',\r\n            color: '#FF7043'\r\n        },\r\n    ]\r\n\r\n    // This method will close the Customize component\r\n    const handleClickCloseCustomizeDialog = () => {\r\n        props.setOpenCustomizeDialog(false);\r\n    };\r\n\r\n    // Username Input Methods \r\n    // This method will save whatever the user types in the text field\r\n    const handleUsernameChange = (event) => {\r\n        event.preventDefault();\r\n        setUsernameValue(event.target.value);\r\n    }\r\n\r\n    // This method will validate the username text field and if correct will set the initals\r\n    const handleUsernameValidation = () => {\r\n        const validation = /^[a-zA-Z0-9]+$/\r\n\r\n        setUsernameFocused(false)\r\n    \r\n        if(usernameValue.match(validation)){\r\n            setUsernameError(false);\r\n\r\n            const newUsername = usernameValue.split('');\r\n            const initial = newUsername[0].replace(/^\\w/, letter => letter.toUpperCase());\r\n\r\n            setInitialsValue(initial);\r\n        }else{\r\n            setUsernameError(true);\r\n            return;\r\n        }\r\n    }\r\n\r\n    // Password Input Methods \r\n    // This method will save whatever the user types in the text field\r\n    const handlePasswordChange = (event) => {\r\n        event.preventDefault();\r\n        setPasswordValue(event.target.value);\r\n    }\r\n\r\n    // This method will validate the password text field\r\n    const handlePasswordValidation = () => {\r\n        setPasswordFocused(false)\r\n        \r\n        if(passwordValue.length >= 8){\r\n            setPasswordError(false);\r\n        }else{\r\n            setPasswordError(true);\r\n        }\r\n    }\r\n\r\n    // This method will update the user profile to the customization specifications\r\n    const handleSaveCustomization = () => {\r\n        const updatedUser = {\r\n            ...props.user,\r\n            username: usernameValue,\r\n            password: passwordValue,\r\n            initials: initialsValue,\r\n            likes: {\r\n                movie: [...props.user.likes.movie],\r\n                tv: [...props.user.likes.tv],\r\n            },\r\n            watchlist: {\r\n                movie: [...props.user.watchlist.movie],\r\n                tv: [...props.user.watchlist.tv],\r\n            },\r\n            color: currentColor\r\n        }\r\n\r\n        const updatedUsers = props.users.map(item => {\r\n            let newitem = {};\r\n\r\n            if(item.id === updatedUser.id){\r\n                newitem = updatedUser \r\n            }else{\r\n                return item;\r\n            }\r\n\r\n            return newitem === {} ? item : newitem\r\n        })\r\n\r\n        localStorage.setItem('users', JSON.stringify(updatedUsers));\r\n        localStorage.setItem('user', JSON.stringify(updatedUser));\r\n\r\n        props.setUsers(updatedUsers);\r\n        props.setUser(updatedUser);\r\n\r\n        handleClickCloseCustomizeDialog();\r\n    } \r\n\r\n    return (\r\n        <Dialog\r\n            className={Style.Dialog}\r\n            fullWidth\r\n            maxWidth='sm'\r\n            onClose={handleClickCloseCustomizeDialog}\r\n            open={props.openCustomizeDialog}\r\n            TransitionComponent={Fade}\r\n            transitionDuration={1000}\r\n        >\r\n            <DialogTitle className={Style.DialogTitle}>\r\n                <Grid item container direction='column' alignItems='flex-start'>\r\n                    <Button className={Style.Button} disableRipple onClick={handleClickCloseCustomizeDialog}>\r\n                        <div className={Style.ButtonContent}>\r\n                            <CloseRoundedIcon />\r\n                            <span>Close</span>\r\n                        </div>\r\n                    </Button>\r\n                </Grid>\r\n            </DialogTitle> \r\n            <Grid container direction='column'>\r\n                <Box p={2}>\r\n                    <Grid item>\r\n                        <Typography className={Style.Header} variant='h4' color='textPrimary'>\r\n                            Customize\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item container direction='row' alignItems='center' justify='center'>\r\n                        <Avatar\r\n                            alt={props.user.username}\r\n                            className={Style.Avatar}\r\n                            style={{backgroundColor: currentColor}}\r\n                            variant='rounded'\r\n                        >\r\n                            {initialsValue}\r\n                        </Avatar>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Typography variant='h6'>\r\n                            Change Username\r\n                        </Typography>\r\n                        <Box my={1} />\r\n                        <FormControl style={{width: '100%'}}>\r\n                            <Input\r\n                                aria-label='Change Username'\r\n                                color='primary'\r\n                                className={usernameFocused === true ? `${Style.Input} ${Style.InputActive}` : usernameError === true ? `${Style.Input} ${Style.InputError}` : usernameError === false ? `${Style.Input} ${Style.InputSuccess}` : Style.Input}\r\n                                error={usernameError}\r\n                                fullWidth\r\n                                onChange={(event) => handleUsernameChange(event)}\r\n                                onKeyPress={() => handleUsernameValidation()}\r\n                                onMouseDown={() => setUsernameFocused(true)}\r\n                                onBlur={() => handleUsernameValidation()}\r\n                                placeholder={props.user.username}\r\n                                type='text'\r\n                                variant='outlined'\r\n                                value={usernameValue}\r\n                            />\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Typography variant='h6'>\r\n                            Change Password\r\n                        </Typography>\r\n                        <Box my={1} />\r\n                        <FormControl style={{width: '100%'}}>\r\n                            <Input\r\n                                aria-label='Change Password'\r\n                                color='primary'\r\n                                className={passwordFocused === true ? `${Style.Input} ${Style.InputActive}` : passwordError === true ? `${Style.Input} ${Style.InputError}` : passwordError === false ? `${Style.Input} ${Style.InputSuccess}` : Style.Input}\r\n                                error={passwordError}\r\n                                fullWidth\r\n                                onChange={(event) => handlePasswordChange(event)}\r\n                                onMouseDown={() => setPasswordFocused(true)}\r\n                                onBlur={() => handlePasswordValidation()}\r\n                                type='password'\r\n                                variant='outlined'\r\n                                value={passwordValue}\r\n                            />\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Box className={Style.MarginBottom} />\r\n                    <Grid item>\r\n                        <Typography variant='h6'>\r\n                            Change Color\r\n                        </Typography>\r\n                        <Box my={1} />\r\n                        <Grid item container direction='row' wrap='wrap'>\r\n                            {\r\n                                colors.map(item => {\r\n                                    return(\r\n                                        <Grid className={Style.ColorAvatarContainer} key={item.id} item xs={3}>\r\n                                            <Avatar className={Style.ColorAvatar} style={{backgroundColor: item.color}} onClick={() => setCurrentColor(item.color)}>\r\n                                                <CheckIcon style={{color: (item.color === currentColor) ? 'white' : item.color}} />\r\n                                            </Avatar>\r\n                                            <Hidden smUp>\r\n                                                <Typography variant='caption'>{item.title}</Typography>\r\n                                            </Hidden>\r\n                                            <Hidden xsDown>\r\n                                                <Typography variant='button'>{item.title}</Typography>\r\n                                            </Hidden>\r\n                                        </Grid>\r\n                                    );\r\n                                })\r\n                            }\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Box className={Style.MarginBottom} />\r\n                    <Grid item>\r\n                        <ButtonGroup className={Style.ButtonGroup} disableRipple fullWidth variant='contained'>\r\n                            <Button className={`${Style.Buttons} ${Style.CancelButton}`} onClick={handleClickCloseCustomizeDialog}>Cancel</Button>\r\n                            <Button className={`${Style.Buttons} ${Style.SaveButton}`} style={{backgroundColor: currentColor}} onClick={() => handleSaveCustomization()} disabled={usernameError === true || passwordError === true ? true : false}>Save</Button>\r\n                        </ButtonGroup>\r\n                    </Grid>\r\n                </Box>\r\n            </Grid>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\n// Fetching state from store\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        openCustomizeDialog: state.app.openCustomizeDialog,\r\n        users: state.app.users,\r\n        user: state.app.user,\r\n    };\r\n};\r\n\r\n// Sending some data to an action\r\nconst matchDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({\r\n        setOpenCustomizeDialog: appActions.setOpenCustomizeDialog,\r\n        setUsers: appActions.setUsers,\r\n        setUser: appActions.setUser,\r\n    }, dispatch);\r\n}\r\n\r\nexport default connect(mapStateToProps, matchDispatchToProps)(AccountSettings);","import React, {useState} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\n\r\n// Actions\r\nimport * as appActions from '../../actions/AppAction';\r\n\r\n// Material UI Components\r\nimport { makeStyles, Drawer, Box, Grid, Button, List, ListItem, ListItemText, Divider, Collapse} from '@material-ui/core';\r\n\r\n// Icons\r\nimport CloseRoundedIcon from '@material-ui/icons/CloseRounded';\r\nimport ArrowDropDownRoundedIcon from '@material-ui/icons/ArrowDropDownRounded';\r\nimport HomeOutlinedIcon from '@material-ui/icons/HomeOutlined';\r\nimport SearchOutlinedIcon from '@material-ui/icons/SearchOutlined';\r\nimport TheatersOutlinedIcon from '@material-ui/icons/TheatersOutlined';\r\nimport TvOutlinedIcon from '@material-ui/icons/TvOutlined';\r\nimport FavoriteBorderOutlinedIcon from '@material-ui/icons/FavoriteBorderOutlined';\r\nimport HourglassEmptyOutlinedIcon from '@material-ui/icons/HourglassEmptyOutlined';\r\nimport ColorLensOutlinedIcon from '@material-ui/icons/ColorLensOutlined';\r\n\r\n// Material UI Custom Component Style\r\nconst useStyles = makeStyles((theme) => ({\r\n    Drawer: {\r\n        minWidth: '250px'\r\n    },\r\n    CloseButton : {\r\n        color: theme.palette.text.secondary,\r\n        transition: '0.4s ease-in-out',\r\n        borderRadius: theme.shape.borderRadius,\r\n        background: theme.palette.action.hover,\r\n        '&:hover': {\r\n            background: theme.palette.action.focus,\r\n            color: theme.palette.text.primary\r\n        }\r\n    },\r\n    Button : {\r\n        color: theme.palette.text.secondary,\r\n        transition: '0.4s ease-in-out',\r\n        borderRadius: theme.shape.borderRadius,\r\n        '&:hover': {\r\n            background: theme.palette.action.hover,\r\n            color: theme.palette.text.primary\r\n        }\r\n    },\r\n    ButtonActive : {\r\n        borderRadius: theme.shape.borderRadius,\r\n        background: theme.palette.primary.main,\r\n        color: theme.palette.common.white,\r\n        '&:hover': {\r\n            background: theme.palette.primary.main,\r\n            color: theme.palette.common.white\r\n        }\r\n    },\r\n    ButtonFolderActive : {\r\n        borderRadius: theme.shape.borderRadius,\r\n        background: theme.palette.action.hover,\r\n        color: theme.palette.text.primary,\r\n    },\r\n    Header: {\r\n        margin: theme.spacing(0.5, 0),\r\n        '& span': {\r\n            fontSize: theme.typography.h6.fontSize,\r\n            fontWeight: theme.typography.fontWeightMedium,\r\n            textTransform: 'uppercase',\r\n        }\r\n    },\r\n    MarginRight: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    IconActive : {\r\n        color: theme.palette.text.primary,\r\n        transform: 'rotate(180deg)',\r\n        transition: 'transform 0.4s ease-in-out',\r\n    },\r\n    IconInactive : {\r\n        transform: 'rotate(360deg)',\r\n        transition: 'transform 0.4s ease-in-out',\r\n    },\r\n    ButtonContent: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        lineHeight: 'normal'\r\n    },\r\n    Nested: {\r\n        margin: theme.spacing(1, 0),\r\n        paddingLeft: theme.spacing(4),\r\n        fontWeight: theme.typography.fontWeightMedium,\r\n    },\r\n    Divider: {\r\n        margin: theme.spacing(2, 0),\r\n    },\r\n}));\r\n\r\nconst Menu = (props) => {\r\n    const Style = useStyles();\r\n\r\n    // Menu List Items State\r\n    const [openMovies, setOpenMovies] = useState(true);\r\n    const [openTV, setOpenTV] = useState(false);\r\n\r\n    const movieTypes = [\r\n        {\r\n            id: Math.random(),\r\n            title:'Now Playing',\r\n            type:'now_playing'\r\n        }, \r\n        {\r\n            id: Math.random(),\r\n            title:'Most Popular',\r\n            type:'popular'\r\n        },\r\n        {\r\n            id: Math.random(),\r\n            title:'Top Rated',\r\n            type:'top_rated'\r\n        },\r\n        {\r\n            id: Math.random(),\r\n            title:'Upcoming',\r\n            type:'upcoming'\r\n        },\r\n    ];\r\n\r\n    const tvTypes = [\r\n        {\r\n            id: Math.random(),\r\n            title:'Airing Today',\r\n            type:'airing_today'\r\n        }, \r\n        {\r\n            id: Math.random(),\r\n            title:'Showing Now On TV',\r\n            type:'on_the_air'\r\n        },\r\n        {\r\n            id: Math.random(),\r\n            title:'Most Popular',\r\n            type:'popular'\r\n        },\r\n        {\r\n            id: Math.random(),\r\n            title:'Top Rated',\r\n            type:'top_rated'\r\n        },\r\n    ];\r\n\r\n    // Menu List Items Methods\r\n    // Opens Movie Dropdown \r\n    const handleClickMovies = () => {\r\n        setOpenMovies(!openMovies);\r\n    };\r\n    \r\n    // Opens Tv Dropdown\r\n    const handleClickTV = () => {\r\n        setOpenTV(!openTV);\r\n    };\r\n\r\n    // This method will open the GridPreview component with the data the user chooses\r\n    const handleOpenPage = (category, item) => {\r\n        props.setGridPreviewApiCategory(category);\r\n        props.setGridPreviewApiType(item.type);\r\n        props.setGridPreviewApiTitle(item.title);\r\n        props.handleCloseDrawer();\r\n    }\r\n\r\n    // Search Dialog Methods\r\n    // Opens Search Dialog Component\r\n    const handleClickOpenSearchDialog = (event) => {\r\n        event.preventDefault();\r\n        props.setOpenSearchDialog(true);\r\n    };\r\n\r\n    // Opens Customize Dialog Component\r\n    const handleClickOpenCustomizeDialog = (event) => {\r\n        event.preventDefault();\r\n        props.setOpenCustomizeDialog(true);\r\n    };\r\n\r\n    return (\r\n        <Drawer\r\n            anchor='left'\r\n            elevation={2}\r\n            open={props.openDrawer}\r\n            onClose={props.handleCloseDrawer}\r\n            transitionDuration={750}\r\n        >\r\n            <Box p={2} className={Style.Drawer}>\r\n                <Grid container direction='column' spacing={2}>\r\n                    <Grid item>\r\n                        <Button className={Style.CloseButton} disableRipple onClick={props.handleCloseDrawer}>\r\n                            <div className={Style.ButtonContent}>\r\n                                <CloseRoundedIcon />\r\n                                <span>Close</span>\r\n                            </div>\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <List>\r\n\r\n                            <ListItem className={props.gridPreviewApiCategory === '' ? `${Style.Header} ${Style.ButtonActive}` : `${Style.Header} ${Style.Button}`} button onClick={() => handleOpenPage('', '')}>\r\n                                <HomeOutlinedIcon className={Style.MarginRight} />\r\n                                <ListItemText primary='Home' />\r\n                            </ListItem>\r\n                            <ListItem className={`${Style.Header} ${Style.Button}`} button onClick={(event) => handleClickOpenSearchDialog(event)}>\r\n                                <SearchOutlinedIcon className={Style.MarginRight} />\r\n                                <ListItemText primary='Search' />\r\n                            </ListItem>\r\n\r\n                            <Divider className={Style.Divider} variant='inset' />\r\n\r\n                            <ListItem className={openMovies === true ? `${Style.Header} ${Style.ButtonFolderActive}` : `${Style.Header} ${Style.Button}`} button onClick={handleClickMovies}>\r\n                                <TheatersOutlinedIcon className={Style.MarginRight} />\r\n                                <ListItemText primary='Movies' />\r\n                                <Box style={{flex: 1}} />\r\n                                <ArrowDropDownRoundedIcon className={(openMovies === true) ? Style.IconActive : Style.IconInactive} />\r\n                            </ListItem>\r\n                            <Collapse in={openMovies} timeout={750} unmountOnExit>\r\n                                <List disablePadding>\r\n                                    {\r\n                                        movieTypes.map(item => {\r\n                                            return(\r\n                                                <ListItem key={item.id} button className={props.gridPreviewApiCategory === 'movie' && props.gridPreviewApiType === item.type ? `${Style.Nested} ${Style.ButtonActive}` : `${Style.Nested} ${Style.Button}`} onClick={() => handleOpenPage('movie', item)}>\r\n                                                    <ListItemText primary={item.title} />\r\n                                                </ListItem>\r\n                                            );\r\n                                        })\r\n                                    }\r\n                                </List>\r\n                            </Collapse>\r\n\r\n                            <ListItem className={openTV === true ? `${Style.Header} ${Style.ButtonFolderActive}` : `${Style.Header} ${Style.Button}`} button onClick={handleClickTV}>\r\n                                <TvOutlinedIcon className={Style.MarginRight} />\r\n                                <ListItemText primary='TV' />\r\n                                <Box style={{flex: 1}} />\r\n                                <ArrowDropDownRoundedIcon className={(openTV === true) ? Style.IconActive : Style.IconInactive} />\r\n                            </ListItem>\r\n                            <Collapse in={openTV} timeout={750} unmountOnExit>\r\n                                <List disablePadding>\r\n                                    {\r\n                                        tvTypes.map(item => {\r\n                                            return(\r\n                                                <ListItem key={item.id} button className={props.gridPreviewApiCategory === 'tv' && props.gridPreviewApiType === item.type ? `${Style.Nested} ${Style.ButtonActive}` : `${Style.Nested} ${Style.Button}`} onClick={() => handleOpenPage('tv', item)}>\r\n                                                    <ListItemText primary={item.title} />\r\n                                                </ListItem>\r\n                                            );\r\n                                        })\r\n                                    }\r\n                                </List>\r\n                            </Collapse>\r\n\r\n                            <Divider className={Style.Divider} variant='inset' />\r\n\r\n                            <ListItem className={`${Style.Header} ${Style.Button}`} button onClick={() => {props.setGridPreviewApiCategory('likes'); props.handleCloseDrawer()}} disabled={props.user.access === 'guest' ? true : false}>\r\n                                <FavoriteBorderOutlinedIcon className={Style.MarginRight} />\r\n                                <ListItemText primary='Liked' />\r\n                            </ListItem>\r\n                            <ListItem className={`${Style.Header} ${Style.Button}`} button onClick={() => {props.setGridPreviewApiCategory('watchlist'); props.handleCloseDrawer()}} disabled={props.user.access === 'guest' ? true : false}>\r\n                                <HourglassEmptyOutlinedIcon className={Style.MarginRight} />\r\n                                <ListItemText primary='Watchlist' />\r\n                            </ListItem>\r\n\r\n                            <Divider className={Style.Divider} variant='inset' />\r\n\r\n                            <ListItem className={`${Style.Header} ${Style.Button}`} button onClick={(event) => {handleClickOpenCustomizeDialog(event); props.handleCloseDrawer()}} disabled={props.user.access === 'guest' ? true : false}>\r\n                                <ColorLensOutlinedIcon className={Style.MarginRight} />\r\n                                <ListItemText primary='Customize' />\r\n                            </ListItem>\r\n                        </List>\r\n                    </Grid>\r\n                </Grid>\r\n            </Box>\r\n        </Drawer>\r\n    )\r\n}\r\n\r\n// Fetching state from store\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        gridPreviewApiCategory: state.app.gridPreviewApiCategory,\r\n        gridPreviewApiType: state.app.gridPreviewApiType,\r\n        user: state.app.user,\r\n    };\r\n};\r\n\r\n// Sending some data to an action\r\nconst matchDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({\r\n        setOpenSearchDialog: appActions.setOpenSearchDialog,\r\n        setOpenCustomizeDialog: appActions.setOpenCustomizeDialog,\r\n        setGridPreviewApiCategory: appActions.setGridPreviewApiCategory,\r\n        setGridPreviewApiType: appActions.setGridPreviewApiType,\r\n        setGridPreviewApiTitle: appActions.setGridPreviewApiTitle,\r\n    }, dispatch);\r\n}\r\n\r\nexport default connect(mapStateToProps, matchDispatchToProps)(Menu);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\n\r\n// Actions\r\nimport * as appActions from '../../actions/AppAction';\r\n\r\n// Material UI Components\r\nimport { makeStyles, Button, Box, Grid, Card, CardActionArea, CardMedia, CardContent, Typography, CardActions, IconButton} from '@material-ui/core';\r\n\r\n// Icons\r\nimport StarRoundedIcon from '@material-ui/icons/StarRounded';\r\nimport FavoriteBorderRoundedIcon from '@material-ui/icons/FavoriteBorderRounded';\r\nimport FavoriteRoundedIcon from '@material-ui/icons/FavoriteRounded';\r\nimport AddRoundedIcon from '@material-ui/icons/AddRounded';\r\nimport RemoveRoundedIcon from '@material-ui/icons/RemoveRounded';\r\n\r\n// Material UI Custom Component Style\r\nconst useStyles = makeStyles((theme) => ({\r\n    Container: {\r\n        margin: theme.spacing(2, 0),\r\n        padding: theme.spacing(1, 0),\r\n    },\r\n    Poster: {\r\n        width: '100%',\r\n        borderRadius: `${theme.shape.borderRadius} ${theme.shape.borderRadius} 0 0`,\r\n        transition: '0.4s ease-in-out',\r\n\r\n        '&:hover': {\r\n            filter: 'brightness(50%)',\r\n        }\r\n    },\r\n    Content: {\r\n        backgroundColor: 'transparent',\r\n    },\r\n    Rating: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        lineHeight: 'normal',\r\n        '& svg': {\r\n            color: theme.palette.warning.main,\r\n        }\r\n    },\r\n    LikeButton: {\r\n        borderRadius: theme.shape.borderRadius,\r\n        boxShadow: 'none',\r\n        \r\n        '&:hover': {\r\n            boxShadow: 'none',\r\n            color: theme.palette.error.main,\r\n        }\r\n    },\r\n    LikedButton: {\r\n        color: theme.palette.error.main,\r\n        '&:hover': {\r\n            color: theme.palette.error.main,\r\n        }\r\n    },\r\n    WatchlistButton: {\r\n        boxShadow: 'none',\r\n        borderRadius: theme.shape.borderRadius,\r\n        color: theme.palette.common.white,\r\n        transition: '0.4s ease-in-out',\r\n        '&:hover': {\r\n            boxShadow: 'none',\r\n            background: theme.palette.primary.dark,\r\n        }\r\n    },\r\n    WatchlistRemoveButton: {\r\n        background: theme.palette.error.main,\r\n        '&:hover': {\r\n            background: theme.palette.error.dark,\r\n        }\r\n    },\r\n    ButtonContent: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        lineHeight: 'normal'\r\n    },\r\n    '@media (min-width: 1024px)': {\r\n        Rating: {\r\n            fontSize: theme.typography.h5.fontSize\r\n        },\r\n        Title: {\r\n            fontSize: theme.typography.h5.fontSize\r\n        },\r\n        Year: {\r\n            fontSize: theme.typography.h6.fontSize\r\n        },\r\n    },\r\n}));\r\n\r\nconst RenderDataListItem = (props) => {\r\n    const Style = useStyles();\r\n    const data = props.typeData || [];\r\n    \r\n    // This method will get the date and cut it and return only the year\r\n    const handleGetDate = (date) => {\r\n        if(date === undefined){\r\n            return\r\n        } else {\r\n            const splitDate = date.split('-');\r\n            const newDate = splitDate[0]\r\n            \r\n            return newDate\r\n        }\r\n    }\r\n\r\n    // This method will update the users & user state and local storage\r\n    const handleUpdateState = (users, user) => {\r\n        localStorage.setItem('users', JSON.stringify(users));\r\n        localStorage.setItem('user', JSON.stringify(user));\r\n\r\n        props.setUsers(users);\r\n        props.setUser(user);\r\n    }\r\n\r\n    /* \r\n        This method will check whether array passed contains the item that was clicked on,\r\n        If so it will remove the item, if not it will add the item depending if its likes or watchlist\r\n        and if it is movie or tv\r\n    */\r\n    const addRemoveList = (users, user, item, array, category, type) => {\r\n        let check = false;\r\n\r\n        array.forEach(otherItem => {\r\n            if(otherItem.id === item.id){\r\n                check = true;\r\n                return\r\n            }else{\r\n                return\r\n            }\r\n        })\r\n\r\n        if(check === true){\r\n            const updateLikedArray = array.filter(otherItem => otherItem.id !== item.id);\r\n\r\n            const updatedUser = {\r\n                ...user,\r\n                [type]: {...user[type], [category]: updateLikedArray}\r\n            }\r\n\r\n            const updatedUsers = users.map(item => {\r\n                let newitem = {};\r\n    \r\n                if(item.id === updatedUser.id){\r\n                    newitem = updatedUser \r\n                }else{\r\n                    return item;\r\n                }\r\n    \r\n                return newitem === {} ? item : newitem\r\n\r\n            })\r\n\r\n            handleUpdateState(updatedUsers, updatedUser);\r\n\r\n            return\r\n        }else{\r\n            array.push(item);\r\n    \r\n            const updatedUser = {\r\n                ...user,\r\n                [type]: {...user[type], [category]: array}\r\n            }\r\n    \r\n            const updatedUsers = users.map(item => {\r\n                let newitem = {};\r\n    \r\n                if(item.id === updatedUser.id){\r\n                    newitem = updatedUser \r\n                }else{\r\n                    return item;\r\n                }\r\n    \r\n                return newitem === {} ? item : newitem\r\n\r\n            })\r\n\r\n            handleUpdateState(updatedUsers, updatedUser);\r\n        }\r\n    }\r\n\r\n    // This method will be called whenever a user clicks on the heart of any item \r\n    const handleLikeMovie = (item, category) => {\r\n        const users = [...props.users];\r\n        const user = {...props.user};\r\n        const newLikedArray = [...user.likes[category]];\r\n        \r\n        addRemoveList(users, user, item, newLikedArray, category, 'likes')\r\n    }\r\n\r\n    // This method will be called whenever a user clicks on the watchlist button of any item\r\n    const handleAddToWatchlist = (item, category) => {\r\n        const users = [...props.users];\r\n        const user = {...props.user};\r\n        const newWatchlistArray = [...user.watchlist[category]];\r\n        \r\n        addRemoveList(users, user, item, newWatchlistArray, category, 'watchlist')\r\n    }\r\n\r\n    // This method renders the like button either the like or unlike button\r\n    const renderLike = (item, category) => {\r\n        let check = false;\r\n\r\n        props.user.likes[category].forEach(likeItem => {\r\n            if(likeItem.id === item.id){\r\n                check = true;\r\n                return\r\n            }else{\r\n                return\r\n            }\r\n        })\r\n\r\n        if(check === true){\r\n            return(\r\n                <FavoriteRoundedIcon className={`${Style.LikeButton} ${Style.LikedButton}`} />\r\n            )\r\n        }else{\r\n            return(\r\n                <FavoriteBorderRoundedIcon />                \r\n            )\r\n        }\r\n    }\r\n\r\n    // This method renders the watchlist button either the remove or add watchlist\r\n    const renderWatchlist = (item, category) => {\r\n        let check = false;\r\n\r\n        props.user.watchlist[category].forEach(watchItem => {\r\n            if(watchItem.id === item.id){\r\n                check = true;\r\n                return\r\n            }else{\r\n                return\r\n            }\r\n        })\r\n\r\n        if(check === true){\r\n            return(\r\n                <Button className={`${Style.WatchlistButton} ${Style.WatchlistRemoveButton}`} disableRipple variant='contained' onClick={() => handleAddToWatchlist(item, category)} disabled={props.user.access === 'guest' ? true : false}>\r\n                    <div className={Style.ButtonContent}>\r\n                        <RemoveRoundedIcon />\r\n                        <Box mr={0.75} />\r\n                        <span>Watchlist</span>\r\n                    </div> \r\n                </Button>\r\n            )\r\n        }else{\r\n            return(   \r\n                <Button color='primary' className={Style.WatchlistButton} disableRipple variant='contained' onClick={() => handleAddToWatchlist(item, category)} disabled={props.user.access === 'guest' ? true : false}>\r\n                    <div className={Style.ButtonContent}>\r\n                        <AddRoundedIcon />\r\n                        <Box mr={0.75} />\r\n                        <span>Watchlist</span>\r\n                    </div> \r\n                </Button>   \r\n            )\r\n        }\r\n    }\r\n\r\n    // This method will open the preview page to display further details\r\n    const handleOpenPreview = (item) => {\r\n        props.setPreview(item); \r\n        props.setGridPreviewApiCategory(props.category);\r\n        props.setGridPreviewApiType('preview');\r\n    }\r\n\r\n    return(\r\n        <React.Fragment>\r\n            {\r\n                data === [] || data === undefined\r\n                    ? null\r\n                        :\r\n                        data.map((item, index) => {\r\n                            return(\r\n                                <Grid className={Style.Container} key={item.id} item sm={6}>\r\n                                    <Card elevation={0} className={'animated fadeInSign'} style={{animationDelay: (index % 2 === 0) ? 250 : 750}}>\r\n                                        <CardActionArea>\r\n                                            <CardMedia\r\n                                                alt={(props.category === 'tv') ? item.original_name : (props.category === 'movie') ? item.title : ''}\r\n                                                component='img'\r\n                                                className={Style.Poster}\r\n                                                image={`https://image.tmdb.org/t/p/w500/${item.poster_path}`}\r\n                                                onMouseDown={() => handleOpenPreview(item)}\r\n                                            />\r\n                                        </CardActionArea>\r\n                                        <CardContent className={Style.Content}>\r\n                                            <Typography className={Style.Rating} variant='h6'>\r\n                                                <StarRoundedIcon />\r\n                                                <span>\r\n                                                    {item.vote_average}\r\n                                                </span>\r\n                                            </Typography>\r\n                                            <Typography className={Style.Title} gutterBottom variant='h6' style={{fontWeight: '700'}}>\r\n                                                {(props.category === 'tv') ? item.original_name : (props.category === 'movie') ? item.title : ''}\r\n                                            </Typography>\r\n                                            <Typography className={Style.Year} color='textSecondary' variant='button'>\r\n                                                {(props.category === 'tv') ? `(${handleGetDate(item.first_air_date)})` : (props.category === 'movie') ? `(${handleGetDate(item.release_date)})` : ''}\r\n                                            </Typography>\r\n                                        </CardContent>\r\n                                        <CardActions className={Style.Content} disableSpacing>\r\n                                            <IconButton aria-label='Like' className={Style.LikeButton} disableRipple onClick={() => handleLikeMovie(item, props.category)} disabled={props.user.access === 'guest' ? true : false}>\r\n                                                {\r\n                                                    renderLike(item, props.category)\r\n                                                }\r\n                                            </IconButton>\r\n                                            <Box mx={0.25} />\r\n                                            {\r\n                                                renderWatchlist(item, props.category)\r\n                                            }\r\n                                        </CardActions>\r\n                                    </Card>\r\n                                </Grid>\r\n                            );\r\n                        })\r\n            }\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\n// Fetching state from store\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        // Internal State (APP)\r\n        users: state.app.users,\r\n        user: state.app.user,\r\n    };\r\n  };\r\n  \r\n  // Sending some data to an action\r\n  const matchDispatchToProps = (dispatch) => {\r\n      return bindActionCreators({\r\n        setGridPreviewApiCategory: appActions.setGridPreviewApiCategory,\r\n        setGridPreviewApiType: appActions.setGridPreviewApiType,\r\n        setPreview: appActions.setPreview, \r\n        setUsers: appActions.setUsers, \r\n        setUser: appActions.setUser \r\n      }, dispatch);\r\n  }\r\n  \r\n  export default connect(mapStateToProps, matchDispatchToProps)(RenderDataListItem);","import React, {useState, useEffect} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\n\r\n// Actions\r\nimport * as appActions from '../../actions/AppAction';\r\n\r\n// Components\r\nimport RenderDataListItem from '../RenderDataListItem/RenderDataListItem'\r\n\r\n// Material UI Components\r\nimport { makeStyles, Dialog, Slide, DialogTitle, Button, Container, Box, Grid, Typography, Input, FormControl, InputAdornment, Hidden, TextField, MenuItem} from '@material-ui/core';\r\nimport Pagination from 'material-ui-flat-pagination';\r\n\r\n// Icons\r\nimport CloseRoundedIcon from '@material-ui/icons/CloseRounded';\r\nimport SearchOutlinedIcon from '@material-ui/icons/SearchOutlined';\r\n\r\n// Material UI Custom Component Style\r\nconst useStyles = makeStyles((theme) => ({\r\n    DialogTitle: {\r\n        padding: theme.spacing(2),\r\n    },\r\n    Button : {\r\n        color: theme.palette.text.secondary,\r\n        transition: '0.4s ease-in-out',\r\n        borderRadius: theme.shape.borderRadius,\r\n        background: theme.palette.action.hover,\r\n        '&:hover': {\r\n            background: theme.palette.action.focus,\r\n            color: theme.palette.text.primary\r\n        }\r\n    },\r\n    Container: {\r\n        margin: theme.spacing(2, 0),\r\n        padding: theme.spacing(1, 0),\r\n    },\r\n    Search: {\r\n        borderRadius: theme.shape.borderRadius,\r\n        border: `1px solid ${theme.palette.text.hint}`,\r\n        color: theme.palette.text.hint,\r\n        padding: theme.spacing(1),\r\n        transition: '0.4s ease-in-out',\r\n        '&:hover': {\r\n            border: `2px solid ${theme.palette.text.primary}`,\r\n            color: theme.palette.text.primary\r\n        },\r\n        '&::before': {\r\n            border: [['none'], '!important'],\r\n        },\r\n        '&::after': {\r\n            border: [['none'], '!important'],\r\n        }\r\n    },\r\n    SearchActive: {\r\n        border: `2px solid ${theme.palette.primary.main}`,\r\n        color: theme.palette.text.primary\r\n    },\r\n    Hidden: {\r\n        opacity: 0,\r\n        transition: 'opacity 0.4s ease-in-out',\r\n    },\r\n    Visible: {\r\n        opacity: 1,\r\n        transition: 'opacity 0.4s ease-in-out',\r\n    },\r\n    ButtonContent: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        lineHeight: 'normal'\r\n    },\r\n    Margin: {\r\n        margin: theme.spacing(2, 0)\r\n    },\r\n}));\r\n\r\nexport const ShowSelectContent = ({justify, handleShowChange, showValue}) => {\r\n    return(\r\n        <Grid item sm={6} container direction='row' justify={justify} alignItems='center' spacing={1}>\r\n            <Grid item>\r\n                <Typography variant='button'>\r\n                    Show:\r\n                </Typography>\r\n            </Grid>\r\n            <Grid item>\r\n                <TextField\r\n                    aria-label='Show Items Select'\r\n                    color='primary'\r\n                    fullWidth\r\n                    onChange={(event) => handleShowChange(event)}\r\n                    select\r\n                    style={{paddingRight: 0}}\r\n                    value={showValue}\r\n                    >\r\n                        <MenuItem value={'movie'}>\r\n                            Only Movies\r\n                        </MenuItem>\r\n                        <MenuItem value={'tv'}>\r\n                            Only TV\r\n                        </MenuItem>\r\n                </TextField>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nconst Search = (props) => {\r\n    const Style = useStyles();\r\n\r\n    // Search Bar State\r\n    const [searchFocused, setSearchFocused] = useState(false); \r\n    const [searchEntered, setSearchEntered] = useState(false); \r\n    const [searchValue, setSearchValue] = useState(''); \r\n    \r\n    // Show Select State\r\n    const [showValue, setShowValue] = useState('movie'); \r\n    const [showChanged, setShowChanged] = useState(false); \r\n    \r\n    // Search Data State\r\n    const [searchMovieData, setSearchMovieData] = useState({}); \r\n    const [searchTVData, setSearchTVData] = useState({}); \r\n    const [searchResultsNumber, setSearchResultsNumber] = useState('0'); \r\n    const [searchPageNumber, setSearchPageNumber] = useState(0); \r\n\r\n    // Data Page State\r\n    const [currentPage, setCurrentPage] = useState(1); \r\n    const [currentOffset, setCurrentOffset] = useState(0); \r\n\r\n    // This method will close the Search component\r\n    const handleClickCloseSearchDialog = () => {\r\n        props.setOpenSearchDialog(false);\r\n    };\r\n    \r\n    // Search Bar Methods\r\n    // This method will save whatever the user types in the text field\r\n    const handleSearchChange = (event) => {\r\n        event.preventDefault();\r\n        setCurrentPage(1);\r\n        setCurrentOffset(0);\r\n        setSearchValue(event.target.value);\r\n    }\r\n\r\n    // This method will set the state of searchEntered to true whenever the user presses the key 'Enter'\r\n    const handleClickSearch = (event) => {\r\n        if(event.key === 'Enter'){\r\n            setSearchEntered(true);\r\n        }\r\n    }\r\n\r\n    // Show Select Methods\r\n    // This method will save whatever the user chooses from the select\r\n    const handleShowChange = (event) => {\r\n        event.preventDefault();\r\n        setShowValue(event.target.value);\r\n        setShowChanged(true);\r\n    }\r\n\r\n    // Data Page Methods\r\n    const handleClickChangePage = (event, offset, next) => {\r\n        const key = 'c287015949cec13fb17a26e50b4f054a';\r\n\r\n        event.preventDefault();\r\n\r\n        setCurrentOffset(offset);\r\n        setCurrentPage(next);\r\n\r\n        fetch(`https://api.themoviedb.org/3/search/${showValue}?query=${searchValue}&api_key=${key}&language=en-US&&page=${next}&include_adult=false`)\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                if(showValue === 'movie'){\r\n                    setSearchMovieData(json);\r\n                }else{\r\n                    setSearchTVData(json);\r\n                }\r\n                return;\r\n            })\r\n            .catch(error => console.log(error));  \r\n    }\r\n\r\n    // This method will fetch the api\r\n    useEffect(() => {\r\n        const key = 'c287015949cec13fb17a26e50b4f054a';\r\n\r\n        if(searchValue === ''){\r\n            setSearchEntered(false);\r\n            setSearchMovieData({});\r\n            setSearchTVData({});\r\n            setSearchResultsNumber('0');\r\n            setSearchPageNumber(0);\r\n        }\r\n        else if(searchEntered === true || showChanged === true){\r\n            fetch(`https://api.themoviedb.org/3/search/${showValue}?query=${searchValue}&api_key=${key}&language=en-US&&page=${currentPage}&include_adult=false`)\r\n                .then(response => response.json())\r\n                .then(json => {\r\n                    if(showValue === 'movie'){\r\n                        setSearchMovieData(json);\r\n                    }else{\r\n                        setSearchTVData(json);\r\n                    }\r\n                    setSearchResultsNumber(String(json.total_results));\r\n                    setSearchPageNumber(String(json.total_pages));\r\n                    setShowChanged(false);\r\n                    return;\r\n                })\r\n                .catch(error => console.log(error));  \r\n        } else {\r\n            return\r\n        }\r\n    }, [searchEntered, showChanged, searchValue, showValue, currentPage])\r\n\r\n    return (\r\n        <Dialog\r\n            className={Style.Dialog}\r\n            fullWidth\r\n            fullScreen\r\n            maxWidth='md'\r\n            onClose={handleClickCloseSearchDialog}\r\n            open={props.openSearchDialog}\r\n            TransitionComponent={Slide}\r\n            transitionDuration={1000}\r\n\r\n        >\r\n            <DialogTitle className={Style.DialogTitle}>\r\n                <Button className={Style.Button} disableRipple onClick={handleClickCloseSearchDialog}>\r\n                    <div className={Style.ButtonContent}>\r\n                        <CloseRoundedIcon />\r\n                        <span>Close</span>\r\n                    </div>\r\n                </Button>\r\n            </DialogTitle>\r\n            <Container maxWidth='sm' disableGutters>\r\n                <Box p={2}>\r\n                    <Grid container direction='column'>\r\n                        <Grid item>\r\n                            <Typography variant='h6'>\r\n                                Find a Movie or Series\r\n                            </Typography>\r\n                            <Box my={1} />\r\n                            <FormControl style={{width: '100%'}}>\r\n                                <Input\r\n                                    aria-label='Search Bar'\r\n                                    color='primary'\r\n                                    className={searchFocused === true ? `${Style.Search} ${Style.SearchActive}` : Style.Search}\r\n                                    fullWidth\r\n                                    onChange={(event) => handleSearchChange(event)}\r\n                                    onKeyPress={(event) => handleClickSearch(event)}\r\n                                    onMouseDown={() => setSearchFocused(true)}\r\n                                    onBlur={() => setSearchFocused(false)}\r\n                                    placeholder='Press enter to view data'\r\n                                    startAdornment={\r\n                                        <InputAdornment position='start'>\r\n                                            <SearchOutlinedIcon />\r\n                                        </InputAdornment>\r\n                                    }\r\n                                    type='text'\r\n                                    variant='outlined'\r\n                                    value={searchValue}\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Box my={2} />\r\n                        <Grid item container direction='row' justify='space-between' alignItems='center'>\r\n                            <Grid item sm={6}>\r\n                                <Typography className={searchEntered === false ? Style.Hidden : Style.Visible} variant='body2'>\r\n                                    {searchResultsNumber} matching results for {`'${searchValue}'`}\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Hidden smUp>\r\n                                <ShowSelectContent justify='flex-start' handleShowChange={handleShowChange} showValue={showValue} />\r\n                            </Hidden>\r\n                            <Hidden xsDown>\r\n                                <ShowSelectContent justify='flex-end' handleShowChange={handleShowChange} showValue={showValue} />\r\n                            </Hidden>\r\n                        </Grid>\r\n                        <Box my={2} />\r\n                        {\r\n                            (searchValue === '' || searchEntered === false || searchMovieData === {} || searchTVData === {})\r\n                                ? null\r\n                                    :\r\n                                        <Grid item container alignItems='flex-start' justify='flex-start' wrap='wrap' spacing={2}>\r\n                                            <RenderDataListItem \r\n                                                typeData={showValue === 'movie' ? searchMovieData.results : searchTVData.results } \r\n                                                category={showValue}\r\n                                            />\r\n                                        </Grid>\r\n                        }\r\n                        <Grid item container justify='flex-end'>\r\n                            <Pagination\r\n                                currentPageColor='primary'\r\n                                otherPageColor='default'\r\n                                className={searchEntered === false ? `${Style.Margin} ${Style.Hidden}` : `${Style.Margin} ${Style.Visible}`}\r\n                                disableRipple\r\n                                limit={5}\r\n                                offset={currentOffset}\r\n                                total={searchPageNumber || 10}\r\n                                onClick={(event, offset, page) => handleClickChangePage(event, offset, page)}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Box>\r\n            </Container>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\n// Fetching state from store\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        openSearchDialog: state.app.openSearchDialog,\r\n    };\r\n};\r\n\r\n// Sending some data to an action\r\nconst matchDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({\r\n        setOpenSearchDialog: appActions.setOpenSearchDialog,\r\n    }, dispatch);\r\n}\r\n\r\nexport default connect(mapStateToProps, matchDispatchToProps)(Search);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\n\r\n// Actions\r\nimport * as appActions from '../../actions/AppAction';\r\n\r\n// Material UI Components\r\nimport { makeStyles, Popover, Grow, Hidden, List, ListItem, ListItemText} from '@material-ui/core';\r\n\r\n// Material UI Custom Component Style\r\nconst useStyles = makeStyles((theme) => ({\r\n    Header: {\r\n        '& span': {\r\n            fontSize: theme.typography.h6.fontSize,\r\n            fontWeight: theme.typography.fontWeightBold,\r\n            color: theme.palette.text.primary,\r\n        }\r\n    },\r\n    Signout : {\r\n        color: theme.palette.error.main, \r\n        '&:hover': {\r\n            color: theme.palette.error.main, \r\n        }\r\n    },\r\n}));\r\n\r\nconst ListItems = ({props, Signout}) => {\r\n    // Opens Customize Dialog Component\r\n    const handleClickOpenCustomizeDialog = (event) => {\r\n        event.preventDefault();\r\n        props.setOpenCustomizeDialog(true);\r\n        props.handleClosePopover()\r\n    };\r\n\r\n    // Signs out the user\r\n    const handleClickSignOut = (event) => {\r\n        event.preventDefault();\r\n\r\n        localStorage.removeItem('user');\r\n        \r\n        props.setUser({});\r\n        props.setOpenSignDialog(true);\r\n        props.handleClosePopover()\r\n    };\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <ListItem button onClick={() => {props.setGridPreviewApiCategory('likes'); props.handleClosePopover()}} disabled={props.user.access === 'guest' ? true : false}>\r\n                <ListItemText\r\n                    primary='Your Likes'\r\n                />\r\n            </ListItem>\r\n            <ListItem button onClick={() => {props.setGridPreviewApiCategory('watchlist'); props.handleClosePopover()}} disabled={props.user.access === 'guest' ? true : false}>\r\n                <ListItemText\r\n                    primary='Your Watchlist'\r\n                />\r\n            </ListItem>\r\n            <ListItem button onClick={(event) => handleClickOpenCustomizeDialog(event)} disabled={props.user.access === 'guest' ? true : false}>\r\n                <ListItemText\r\n                    primary='Customize'\r\n                />\r\n            </ListItem>\r\n            <ListItem className={Signout} button onClick={(event) => handleClickSignOut(event)}>\r\n                <ListItemText\r\n                    primary='Sign Out'\r\n                />\r\n            </ListItem>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nconst AccountMenu = (props) =>  {\r\n    const Style = useStyles();\r\n\r\n    return (\r\n        <Popover\r\n            id={props.popperID}\r\n            anchorEl={props.anchorEl}\r\n            anchorOrigin={{\r\n                vertical: 'bottom',\r\n                horizontal: 'right',\r\n            }}\r\n            transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n            }}\r\n            elevation={2}\r\n            open={props.openPopper}\r\n            onClose={props.handleClosePopover}\r\n            TransitionComponent={Grow}\r\n            transitionDuration={750}\r\n        >\r\n            <React.Fragment>\r\n                <Hidden smUp>\r\n                    <List disablePadding>\r\n                        <ListItem divider>\r\n                            <ListItemText\r\n                                className={Style.Header}\r\n                                primary={props.user.username}\r\n                            />\r\n                        </ListItem>\r\n                        {\r\n                            <ListItems props={props} Signout={Style.Signout} />\r\n                        } \r\n                    </List>\r\n                </Hidden>\r\n                <Hidden xsDown>\r\n                    <List disablePadding>\r\n                        {\r\n                            <ListItems props={props} Signout={Style.Signout} />\r\n                        } \r\n                    </List>\r\n                </Hidden>\r\n            </React.Fragment>\r\n        </Popover>\r\n    )\r\n}\r\n\r\n// Fetching state from store\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        users: state.app.users\r\n    };\r\n};\r\n\r\n// Sending some data to an action\r\nconst matchDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({\r\n        setOpenSignDialog: appActions.setOpenSignDialog,\r\n        setOpenCustomizeDialog: appActions.setOpenCustomizeDialog,\r\n        setGridPreviewApiCategory: appActions.setGridPreviewApiCategory,\r\n        setUser: appActions.setUser,\r\n    }, dispatch);\r\n}\r\n\r\nexport default connect(mapStateToProps, matchDispatchToProps)(AccountMenu);","import React, {useState} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\n\r\n// Actions\r\nimport * as appActions from '../../actions/AppAction';\r\n\r\n// Components\r\nimport Menu from '../Menu/Menu';\r\nimport Search from '../Search/Search';\r\nimport AccountMenu from '../AccountMenu/AccountMenu';\r\n\r\n// Material UI Components\r\nimport { makeStyles, Paper, Toolbar, Hidden, IconButton, Box, Button} from '@material-ui/core';\r\n\r\n// Icons\r\nimport MenuRoundedIcon from '@material-ui/icons/MenuRounded';\r\nimport SearchRoundedIcon from '@material-ui/icons/SearchRounded';\r\nimport FaceRoundedIcon from '@material-ui/icons/FaceRounded';\r\nimport ArrowDropDownRoundedIcon from '@material-ui/icons/ArrowDropDownRounded';\r\n\r\n// Material UI Custom Component Style\r\nconst useStyles = makeStyles((theme) => ({\r\n    Paper: {\r\n        background: 'transparent',\r\n    },\r\n    Button : {\r\n        color: theme.palette.text.secondary,\r\n        transition: '0.4s ease-in-out',\r\n        background: theme.palette.action.hover,\r\n        '&:hover': {\r\n            background: theme.palette.action.focus,\r\n            color: theme.palette.text.primary\r\n        }\r\n    },\r\n    ButtonActive : {\r\n        background: theme.palette.action.focus,\r\n        color: theme.palette.text.primary,\r\n    },\r\n    IconActive : {\r\n        color: theme.palette.text.primary,\r\n        transform: 'rotate(180deg)',\r\n        transition: 'transform 0.4s ease-in-out',\r\n    },\r\n    IconInactive : {\r\n        transform: 'rotate(360deg)',\r\n        transition: 'transform 0.4s ease-in-out',\r\n    },\r\n    ButtonContent: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        lineHeight: 'normal'\r\n    },\r\n    '@media (max-width: 425px)': {\r\n        Button : {\r\n            background: 'transparent',\r\n        },\r\n        ButtonActive : {\r\n            background: 'transparent',\r\n        },\r\n    },\r\n}));\r\n\r\nconst Header = ( {user, setOpenSearchDialog} ) => {\r\n    const Style = useStyles();\r\n\r\n    // Menu Drawer State\r\n    const [openDrawer, setOpenDrawer] = React.useState(false);\r\n\r\n    // Account Menu Popover State\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const [openPopper, setOpenPopper] = useState(false);\r\n\r\n    const popperID = openPopper ? 'Account Menu' : undefined;\r\n\r\n    // Menu Drawer Methods\r\n    // Opens Menu Drawer Component \r\n    const handleClickOpenMenuDrawer = (event) => {\r\n        event.preventDefault();\r\n        setOpenDrawer(true);\r\n    };\r\n\r\n    // Closes Menu Drawer Component\r\n    const handleCloseMenuDrawer = () => {\r\n        setOpenDrawer(false);\r\n    };\r\n\r\n    // Search Dialog Methods\r\n    // Opens Search Dialog Component\r\n    const handleClickOpenSearchDialog = (event) => {\r\n        event.preventDefault();\r\n        setOpenSearchDialog(true);\r\n    };\r\n\r\n    // Account Menu Popover Methods\r\n    // Opens Account Menu Popover Component\r\n    const handleClickOpenAccountMenuPopover = (event) => {\r\n        event.preventDefault();\r\n        setAnchorEl(event.currentTarget);\r\n        setOpenPopper(true);\r\n    };\r\n    \r\n    // Closes Account Menu Popover Component\r\n    const handleCloseAccountMenuPopover = () => {\r\n        setAnchorEl(null);\r\n        setOpenPopper(false);\r\n    };\r\n    \r\n    return (\r\n        <React.Fragment>\r\n            <Paper className={Style.Paper} elevation={0}>\r\n                <Toolbar disableGutters>\r\n                    <Hidden smUp>\r\n                        <IconButton aria-label='Menu' className={(openDrawer === true) ? Style.ButtonActive : Style.Button} disableRipple edge='start' onClick={(event) => handleClickOpenMenuDrawer(event)}>\r\n                            <MenuRoundedIcon />\r\n                        </IconButton>\r\n                        <Box style={{flex: 1}} />\r\n                        <IconButton aria-label='Search' className={Style.Button} disableRipple edge='start' onClick={(event) => handleClickOpenSearchDialog(event)}>\r\n                            <SearchRoundedIcon />\r\n                        </IconButton>\r\n                        <IconButton aria-label='Account Menu' className={(openPopper === true) ? Style.ButtonActive : Style.Button} disableRipple edge='end' onClick={(event) => handleClickOpenAccountMenuPopover(event)}>\r\n                            <FaceRoundedIcon />\r\n                            <ArrowDropDownRoundedIcon className={(openPopper === true) ? Style.IconActive : Style.IconInactive} />\r\n                        </IconButton>\r\n                    </Hidden>\r\n                    <Hidden xsDown>\r\n                        <Button className={(openDrawer === true) ? Style.ButtonActive : Style.Button} disableRipple onClick={(event) => handleClickOpenMenuDrawer(event)}>\r\n                            <div className={Style.ButtonContent}>\r\n                                <MenuRoundedIcon />\r\n                                <Box mr={0.75} />\r\n                                <span>Menu</span>\r\n                            </div>\r\n                        </Button>\r\n                        <Box style={{flex: 1}} />\r\n                        <Button className={Style.Button} disableRipple onClick={(event) => handleClickOpenSearchDialog(event)}>\r\n                            <div className={Style.ButtonContent}>\r\n                                <SearchRoundedIcon />\r\n                                <Box mr={0.75} />\r\n                                <span>Search</span>\r\n                            </div>\r\n                        </Button>\r\n                        <Box mx={0.75} />\r\n                        <Button aria-describedby={popperID} className={(openPopper === true) ? Style.ButtonActive : Style.Button} disableRipple onClick={(event) => handleClickOpenAccountMenuPopover(event)}>\r\n                            <div className={Style.ButtonContent}>\r\n                                <FaceRoundedIcon />\r\n                                <Box ml={0.75} mr={0.25}>\r\n                                    {user.username}\r\n                                </Box>\r\n                                <ArrowDropDownRoundedIcon className={(openPopper === true) ? Style.IconActive : Style.IconInactive} />\r\n                            </div>\r\n                        </Button>\r\n                    </Hidden>\r\n                </Toolbar>            \r\n            </Paper>\r\n            <Menu openDrawer={openDrawer} handleCloseDrawer={handleCloseMenuDrawer} />\r\n            <Search />\r\n            <AccountMenu anchorEl={anchorEl} openPopper={openPopper} popperID={popperID} user={user} handleClosePopover={handleCloseAccountMenuPopover} />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\n// Fetching state from store\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        user: state.app.user,\r\n    };\r\n};\r\n\r\n// Sending some data to an action\r\nconst matchDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({\r\n        setOpenSearchDialog: appActions.setOpenSearchDialog,\r\n    }, dispatch);\r\n}\r\n\r\nexport default connect(mapStateToProps, matchDispatchToProps)(Header);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\n\r\n// Actions\r\nimport * as appActions from '../../actions/AppAction';\r\n\r\n// Material UI Components\r\nimport { makeStyles, Grid, Typography, Box, Button} from '@material-ui/core';\r\n\r\n// Icons\r\nimport ArrowRightAltIcon from '@material-ui/icons/ArrowRightAlt';\r\n\r\n// Material UI Custom Component Style\r\nconst useStyles = makeStyles((theme) => ({\r\n    '@media (min-width: 1024px)': {\r\n        TrendingItem: {\r\n            cursor: 'pointer',\r\n            width: '342px'\r\n        },\r\n    },\r\n    Header: {\r\n        fontWeight: theme.typography.fontWeightBold\r\n    },\r\n    TrendingContainer: {\r\n        overflowX: 'auto',\r\n        overflowY: 'hidden'\r\n    },\r\n    TrendingItem: {\r\n        cursor: 'pointer',\r\n        width: '342px'\r\n    },\r\n    Poster: {\r\n        borderRadius: theme.shape.borderRadius,\r\n        transition: '0.4s ease-in-out',\r\n\r\n        '&:hover': {\r\n            filter: 'brightness(50%)',\r\n        }\r\n    },\r\n}));\r\n\r\nconst RenderHomeApiData = ({Style, props, header, data, dataName, category, handleOpenPage}) => {\r\n    const newData = (dataName === 'Trending') ? data.results : data;\r\n\r\n    // This method will open the preview page to display further details\r\n    const handleOpenPreview = (item, media) => {\r\n        props.setPreview(item); \r\n        props.setGridPreviewApiCategory(media);\r\n        props.setGridPreviewApiType('preview');\r\n    }\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <Grid item container direction='row' alignItems='center' justify='flex-start'>\r\n                <Typography className={Style.Header} variant='h4' color='textPrimary'>\r\n                    {header}\r\n                </Typography>\r\n                {\r\n                    (dataName === 'Trending')\r\n                        ? null\r\n                            :\r\n                            <React.Fragment>\r\n                                <Box mx={1} />\r\n                                <Button disableRipple endIcon={<ArrowRightAltIcon />} onClick={() => handleOpenPage(category, 'popular', 'Most Popular')}>\r\n                                    View more\r\n                                </Button>\r\n                            </React.Fragment>\r\n                }\r\n            </Grid>\r\n            <Grid className={Style.TrendingContainer} item container direction='row' wrap='nowrap' justify='flex-start'>\r\n                {\r\n                    (newData === {} || newData === undefined)\r\n                        ? null\r\n                            :\r\n                            newData.map((item, index) => {\r\n                                const media = dataName === 'Trending' ? item.media_type : category;\r\n\r\n                                return(\r\n                                    <Box className={`${Style.TrendingItem} animated fadeInSign`} style={{animationDelay: (index % 2 === 0) ? 250 : 750}} key={item.id} my={2} mr={2}>\r\n                                        <img \r\n                                            alt={(media === 'tv') ? item.original_name : (media === 'movie') ? item.title : ''}\r\n                                            className={Style.Poster}\r\n                                            src={`https://image.tmdb.org/t/p/w342/${item.poster_path}`}\r\n                                            onMouseDown={() => handleOpenPreview(item, media)}\r\n                                        />\r\n                                    </Box>\r\n                                );\r\n                            })\r\n                } \r\n            </Grid>\r\n            <Box mb={4} />\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nconst Home = (props) => {\r\n    const Style = useStyles();\r\n\r\n    // This method will open the GridPreview component with the data the user chooses\r\n    const handleOpenPage = (category, type, title) => {\r\n        props.setGridPreviewApiCategory(category);\r\n        props.setGridPreviewApiType(type);\r\n        props.setGridPreviewApiTitle(title);\r\n    }\r\n\r\n    return (\r\n        <Grid container direction='column'>\r\n            <RenderHomeApiData Style={Style} props={props} header={'Trending'} data={props.trending} dataName={'Trending'} category={''} handleOpenPage={handleOpenPage} />\r\n            <RenderHomeApiData Style={Style} props={props} header={'Popular Movies'} data={props.moviePopular} dataName={'Popular'} category={'movie'} handleOpenPage={handleOpenPage} />\r\n            <RenderHomeApiData Style={Style} props={props} header={'Popular TV'} data={props.tvPopular} dataName={'Popular'} category={'tv'} handleOpenPage={handleOpenPage} />\r\n        </Grid>\r\n    )\r\n}\r\n\r\n// Fetching state from store\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        trending: state.api.trending,\r\n        moviePopular: state.api.movies.popular,\r\n        tvPopular: state.api.tv.popular,\r\n    };\r\n};\r\n\r\n// Sending some data to an action\r\nconst matchDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({\r\n        setGridPreviewApiCategory: appActions.setGridPreviewApiCategory,\r\n        setGridPreviewApiType: appActions.setGridPreviewApiType,\r\n        setGridPreviewApiTitle: appActions.setGridPreviewApiTitle,\r\n        setPreview: appActions.setPreview,\r\n    }, dispatch);\r\n}\r\n\r\nexport default connect(mapStateToProps, matchDispatchToProps)(Home);","import React, {useState} from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\n// Components\r\nimport RenderDataListItem from '../RenderDataListItem/RenderDataListItem'\r\nimport {ShowSelectContent} from '../Search/Search';\r\n\r\n// Material UI Components\r\nimport { makeStyles, Grid, Typography, Hidden} from '@material-ui/core';\r\n\r\n// Material UI Custom Component Style\r\nconst useStyles = makeStyles((theme) => ({\r\n    '@media (max-width: 425px)': {\r\n        Header: {\r\n            fontSize: theme.typography.h5.fontSize\r\n        },\r\n    },\r\n    Header: {\r\n        textTransform: 'capitalize',\r\n        fontWeight: theme.typography.fontWeightBold\r\n    },\r\n}));\r\n\r\nconst UserData = (props) => {\r\n    const Style = useStyles();\r\n\r\n    // Show Select State\r\n    const [showValue, setShowValue] = useState('movie');\r\n\r\n    // Show Select Methods\r\n    // This method will save whatever the user chooses from the select\r\n    const handleShowChange = (event) => {\r\n        event.preventDefault();\r\n        setShowValue(event.target.value);\r\n    }\r\n\r\n    return (\r\n        <Grid container direction='column'>\r\n            <Grid item container direction='row' alignItems='center' justify='flex-start'>\r\n                <Grid item sm={6}>\r\n                    <Typography className={Style.Header} variant='h4' color='textPrimary'>\r\n                        {\r\n                            `Your ${props.gridPreviewApiCategory}`\r\n                        }\r\n                    </Typography>\r\n                </Grid>\r\n                <Hidden smUp>\r\n                    <ShowSelectContent justify='flex-start' handleShowChange={handleShowChange} showValue={showValue} />\r\n                </Hidden>\r\n                <Hidden xsDown>\r\n                    <ShowSelectContent justify='flex-end' handleShowChange={handleShowChange} showValue={showValue} />\r\n                </Hidden>\r\n            </Grid>\r\n            <Grid item container alignItems='flex-start' justify='flex-start' wrap='wrap' spacing={2}>\r\n                <RenderDataListItem \r\n                    typeData={(props.gridPreviewApiCategory === 'likes') ? props.user.likes[showValue] : (props.gridPreviewApiCategory === 'watchlist') ? props.user.watchlist[showValue] : null} \r\n                    category={showValue} \r\n                />\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\n// Fetching state from store\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        // Internal State (APP)\r\n        user: state.app.user,\r\n        gridPreviewApiCategory: state.app.gridPreviewApiCategory,\r\n    };\r\n  };\r\n\r\n  export default connect(mapStateToProps)(UserData);","import React, {useState, useEffect} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\n\r\n// Api Actions\r\nimport * as apiAction from '../../actions/apiActions/Api';\r\nimport * as movieActions from '../../actions/apiActions/Movies';\r\nimport * as tvActions from '../../actions/apiActions/TV';\r\n\r\n// Fetch Method\r\nimport fetchApi from '../../utils/fetchApi';\r\n\r\n// Components\r\nimport RenderDataListItem from '../RenderDataListItem/RenderDataListItem'\r\n\r\n// Material UI Components\r\nimport { makeStyles, Grid, TextField, Button, Typography, MenuItem, Hidden, Box } from '@material-ui/core';\r\nimport Pagination from 'material-ui-flat-pagination';\r\n\r\n// Icons\r\nimport CloseRoundedIcon from '@material-ui/icons/CloseRounded';\r\n\r\n// Material UI Custom Component Style\r\nconst useStyles = makeStyles((theme) => ({\r\n    Header: {\r\n        fontWeight: theme.typography.fontWeightBold\r\n    },\r\n    Margin: {\r\n        margin: theme.spacing(2, 0)\r\n    },\r\n    Button : {\r\n        borderRadius: theme.shape.borderRadius,\r\n        color: theme.palette.text.hint,\r\n        transition: '0.4s ease-in-out',\r\n        '&:hover': {\r\n            background: theme.palette.action.hover,\r\n            color: theme.palette.text.primary\r\n        }\r\n    },\r\n    SortButton: {\r\n        margin: theme.spacing(0.25),\r\n        boxShadow: 'none',\r\n        borderRadius: '25px',\r\n        color: theme.palette.common.white,\r\n        \r\n        '&:hover': {\r\n            color: theme.palette.common.white,\r\n            background: theme.palette.primary.main,\r\n            boxShadow: 'none',\r\n        }\r\n    },\r\n    '@media (max-width: 425px)': {\r\n        Header: {\r\n            fontSize: theme.typography.h5.fontSize\r\n        },\r\n        Results: {\r\n            fontSize: theme.typography.body2.fontSize\r\n        },\r\n    },\r\n}));\r\n\r\nconst RenderSortSection = ({Style, props, sortValue, sortGroup, justify, handleSortChange, setSortGroup, setSortValue, handleUpdateSort, handleRemoveSort}) => {\r\n    return(\r\n        <React.Fragment>\r\n            <Grid item sm={4} container direction='row' justify='flex-start' alignItems='center' spacing={1}>\r\n                <Grid item>\r\n                    <Typography variant='button'>\r\n                        Sort by:\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                    <TextField\r\n                        aria-label='Show Items Select'\r\n                        color='primary'\r\n                        fullWidth\r\n                        onChange={handleSortChange}\r\n                        select\r\n                        style={{paddingRight: 0}}\r\n                        value={sortValue}\r\n                        >\r\n                            <MenuItem value={'all'} onMouseDown={() => {setSortGroup([]); setSortValue('all')}}>\r\n                                All\r\n                            </MenuItem>\r\n                            {\r\n                                (props.gridPreviewApiCategory === '' || props.gridPreviewApiType === '')\r\n                                    ? null\r\n                                        :  \r\n                                        props.gridPreviewApiCategory === 'movie'\r\n                                            ?  \r\n                                            props.movieGenres.map(item => {\r\n                                                return(\r\n                                                    <MenuItem key={item.id} value={item.name} onMouseDown={() => handleUpdateSort(item)} disabled={sortGroup.includes(item) === true ? true : false}>\r\n                                                        {item.name}\r\n                                                    </MenuItem>\r\n                                                );\r\n                                            })\r\n                                                :\r\n                                                props.gridPreviewApiCategory === 'tv'\r\n                                                    ?\r\n                                                    props.tvGenres.map(item => {\r\n                                                        return(\r\n                                                            <MenuItem key={item.id} value={item.name} onMouseDown={() => handleUpdateSort(item)} disabled={sortGroup.includes(item) === true ? true : false}>\r\n                                                                {item.name}\r\n                                                            </MenuItem>\r\n                                                        );\r\n                                                    })\r\n                                                        : null\r\n                            }\r\n                    </TextField>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid item sm={8} container direction='row' justify={justify} alignItems='center'>\r\n                <Box my={1}>\r\n                    {\r\n                        sortGroup.map(item => {\r\n                            return(\r\n                                <Button key={item.id} className={`${Style.Button} ${Style.SortButton}`} color='primary' disableRipple endIcon={<CloseRoundedIcon />} variant='contained' onMouseDown={() => handleRemoveSort(item)}>\r\n                                    {item.name}\r\n                                </Button>\r\n                            );\r\n\r\n                        })\r\n                    }\r\n                </Box>\r\n            </Grid>\r\n        </React.Fragment>\r\n    );\r\n} \r\n\r\nconst handleShowData = (sortGroup, data, type) => {\r\n    if(sortGroup.length >= 1){\r\n        const newApiDataSorted = []; \r\n\r\n        sortGroup.forEach(genre => {\r\n            data.forEach(item => {\r\n                item.genre_ids.forEach(itemGenre => {\r\n                    if(newApiDataSorted.includes(item) === true){\r\n                        return\r\n                    } else if(genre.id === itemGenre){\r\n                        newApiDataSorted.push(item);\r\n                        return;\r\n                    } else{\r\n                        return;\r\n                    }\r\n                }) \r\n            });\r\n        })\r\n\r\n        return(\r\n            <RenderDataListItem \r\n                typeData={newApiDataSorted} \r\n                category={type} \r\n            />\r\n        );\r\n    }else{\r\n        return(\r\n            <RenderDataListItem \r\n                typeData={data} \r\n                category={type} \r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nconst RenderDataElements = ({props, sortGroup}) => {\r\n    if(props.gridPreviewApiCategory === 'movie'){\r\n        switch(props.gridPreviewApiType){\r\n            case 'now_playing':\r\n                return handleShowData(sortGroup, props.nowPlaying, 'movie');\r\n            case 'popular':\r\n                return handleShowData(sortGroup, props.moviePopular, 'movie');\r\n\r\n            case 'top_rated':\r\n                return handleShowData(sortGroup, props.movieTopRated, 'movie');\r\n\r\n            case 'upcoming':\r\n                return handleShowData(sortGroup, props.upcoming, 'movie');\r\n            default:\r\n                return;\r\n        }\r\n    }else if(props.gridPreviewApiCategory === 'tv'){\r\n        switch(props.gridPreviewApiType){\r\n            case 'airing_today':\r\n                return handleShowData(sortGroup, props.airingToday, 'tv');\r\n            case 'on_the_air':\r\n                return handleShowData(sortGroup, props.onTv, 'tv');\r\n            case 'popular':\r\n                return handleShowData(sortGroup, props.tvPopular, 'tv');\r\n            case 'top_rated':\r\n                return handleShowData(sortGroup, props.tvTopRated, 'tv');\r\n            default:\r\n                return;\r\n        }\r\n    }else{\r\n        return;\r\n    }\r\n}\r\n\r\nconst GridPreview = (props) => {\r\n    const Style = useStyles();\r\n\r\n    // Sort Select State\r\n    const [sortValue, setSortValue] = useState('all'); \r\n    const [sortGroup, setSortGroup] = useState([]); \r\n    \r\n    // Data Page State\r\n    const [currentPage, setCurrentPage] = useState(1); \r\n    const [currentOffset, setCurrentOffset] = useState(0); \r\n\r\n    // Sort Select Methods\r\n    const handleSortChange = (event) => {\r\n        event.preventDefault();\r\n        setSortValue(event.target.value);\r\n    }\r\n\r\n    const handleUpdateSort = (item) => {\r\n        const newSortGroup = [...sortGroup];\r\n\r\n        if(newSortGroup.includes(item) === true){\r\n            return\r\n        }else{\r\n            newSortGroup.push(item);\r\n\r\n            setSortValue(item.name);\r\n            setSortGroup(newSortGroup);\r\n        }\r\n    }\r\n\r\n    const handleRemoveSort = (removeItem) => {\r\n        const newSortGroup = [...sortGroup];\r\n\r\n        const updatedSortGroup = newSortGroup.filter(item => {return item.id !== removeItem.id});\r\n\r\n        setCurrentPage(1);\r\n        setCurrentOffset(0);\r\n        setSortGroup(updatedSortGroup);\r\n        setSortValue(updatedSortGroup.length === 0 ? 'all' : updatedSortGroup[updatedSortGroup.length - 1].name);\r\n    }\r\n\r\n    // Data Page Methods\r\n    const handleClickChangePage = (event, offset, next) => {\r\n        event.preventDefault();\r\n        window.scrollTo(0, 0)\r\n\r\n        setCurrentOffset(offset);\r\n        setCurrentPage(next);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const fetchMovieApiData = (type, key) => {\r\n            const types = [\r\n                {\r\n                    action: props.fetchApiMovieNowPlaying,\r\n                    type: 'now_playing',\r\n                }, \r\n                {\r\n                    action: props.fetchApiMoviePopular,\r\n                    type: 'popular',\r\n                },\r\n                {\r\n                    action: props.fetchApiMovieTopRated,\r\n                    type: 'top_rated',\r\n                }, \r\n                {\r\n                    action: props.fetchApiMovieUpcoming,\r\n                    type: 'upcoming',\r\n                },\r\n            ];\r\n        \r\n            types.forEach((item) => {\r\n                if(item.type === type){\r\n                    fetchApi(`https://api.themoviedb.org/3/movie/${item.type}?api_key=${key}&language=en-US&page=${currentPage}`, item.action);\r\n                }else{\r\n                    return;\r\n                }\r\n            })\r\n        }\r\n        \r\n        const fetchTvApiData = (type, key) => {\r\n            const types = [\r\n                {\r\n                    action: props.fetchApiTVAiringToday,\r\n                    type: 'airing_today',\r\n                }, \r\n                {\r\n                    action: props.fetchApiTVOnTv,\r\n                    type: 'on_the_air',\r\n                },\r\n                {\r\n                    action: props.fetchApiTVPopular,\r\n                    type: 'popular',\r\n                },\r\n                {\r\n                    action: props.fetchApiTVTopRated,\r\n                    type: 'top_rated',\r\n                }, \r\n            ];\r\n    \r\n            types.forEach((item) => {\r\n                if(item.type === type){\r\n                    fetchApi(`https://api.themoviedb.org/3/tv/${item.type}?api_key=${key}&language=en-US&page=${currentPage}`, item.action);\r\n                }else{\r\n                    return;\r\n                }\r\n            })\r\n        }\r\n\r\n        const key = 'c287015949cec13fb17a26e50b4f054a';\r\n        \r\n        if(props.gridPreviewApiCategory === 'movie'){\r\n            fetchMovieApiData(props.gridPreviewApiType, key);\r\n        }else if(props.gridPreviewApiCategory === 'tv'){\r\n            fetchTvApiData(props.gridPreviewApiType, key);\r\n        }\r\n    }, [\r\n        currentPage, sortGroup, props.gridPreviewApiCategory, props.gridPreviewApiType, props.fetchApiMovieGenres, props.fetchApiMovieNowPlaying, props.fetchApiMoviePopular, props.fetchApiMovieTopRated, props.fetchApiMovieUpcoming,\r\n        props.fetchApiTVAiringToday, props.fetchApiTVGenres, props.fetchApiTVOnTv, props.fetchApiTVPopular, props.fetchApiTVTopRated, props.movieGenres, props.tvGenres\r\n    ])\r\n\r\n    return (\r\n        <Grid container direction='column'>\r\n            <Grid item container direction='row' justify='space-between' alignItems='center'>\r\n                <Grid item>\r\n                    <Typography className={Style.Header} variant='h4' color='textPrimary'>\r\n                        {`${props.gridPreviewApiTitle} (${props.gridPreviewApiCategory})`}\r\n                    </Typography>\r\n                </Grid>\r\n                <Typography className={Style.Results} variant='body1' color='textSecondary'>\r\n                    {\r\n                        (props.gridPreviewApiCategory === 'movie')\r\n                            ? `${props.movieTotalResults} ${props.gridPreviewApiCategory}s found`\r\n                                : (props.gridPreviewApiCategory === 'tv')\r\n                                    ? `${props.tvTotalResults} ${props.gridPreviewApiCategory} shows found`\r\n                                        : ''\r\n                    }\r\n                </Typography>\r\n            </Grid>\r\n            <Grid className={Style.Margin} item container direction='row' justify='space-between'>\r\n                <Hidden smUp>\r\n                    <RenderSortSection Style={Style} props={props} sortValue={sortValue} sortGroup={sortGroup} justify={'flex-start'} handleSortChange={handleSortChange} setSortGroup={setSortGroup} setSortValue={setSortValue} handleUpdateSort={handleUpdateSort} handleRemoveSort={handleRemoveSort} />\r\n                </Hidden>\r\n                <Hidden xsDown>\r\n                    <RenderSortSection Style={Style} props={props} sortValue={sortValue} sortGroup={sortGroup} justify={'flex-end'} handleSortChange={handleSortChange} setSortGroup={setSortGroup} setSortValue={setSortValue} handleUpdateSort={handleUpdateSort} handleRemoveSort={handleRemoveSort} />\r\n                </Hidden>\r\n            </Grid>\r\n            {\r\n                (props.gridPreviewApiCategory === '' || props.gridPreviewApiType === '')\r\n                    ? null\r\n                        :  \r\n                        <Grid item container alignItems='flex-start' justify='flex-start' wrap='wrap' spacing={2}>\r\n                            <RenderDataElements \r\n                                props={props} \r\n                                sortGroup={sortGroup} \r\n                            />\r\n                        </Grid>\r\n            }\r\n            <Grid item container justify='flex-end'>\r\n                <Pagination\r\n                    currentPageColor='primary'\r\n                    otherPageColor='default'\r\n                    className={`${Style.Margin} animated fadeInHeader`}\r\n                    disableRipple\r\n                    limit={5}\r\n                    offset={currentOffset}\r\n                    total={props.gridPreviewApiCategory === 'movie' ? props.movieTotalPages : props.gridPreviewApiCategory === 'tv' ? props.tvTotalPages : 10}\r\n                    onClick={(event, offset, page) => handleClickChangePage(event, offset, page)}\r\n                />\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\n// Fetching state from store\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        // Internal State (APP)\r\n        openSignDialog: state.app.openSignDialog,\r\n        openSearchDialog: state.app.openSearchDialog,\r\n        gridPreviewApiCategory: state.app.gridPreviewApiCategory,\r\n        gridPreviewApiType: state.app.gridPreviewApiType,\r\n        gridPreviewApiTitle: state.app.gridPreviewApiTitle,\r\n        // API Movies\r\n        nowPlaying: state.api.movies.nowPlaying,\r\n        moviePopular: state.api.movies.popular,\r\n        movieTopRated: state.api.movies.topRated,\r\n        upcoming: state.api.movies.upcoming,\r\n        movieTotalPages: state.api.movies.totalPages,\r\n        movieTotalResults: state.api.movies.totalResults,\r\n        movieGenres: state.api.movies.genres,\r\n        // API TV\r\n        airingToday: state.api.tv.airingToday,\r\n        onTv: state.api.tv.onTv,\r\n        tvPopular: state.api.tv.popular,\r\n        tvTopRated: state.api.tv.topRated,\r\n        tvTotalPages: state.api.tv.totalPages,\r\n        tvTotalResults: state.api.tv.totalResults,\r\n        tvGenres: state.api.tv.genres,\r\n    };\r\n  };\r\n  \r\n  // Sending some data to an action\r\n  const matchDispatchToProps = (dispatch) => {\r\n      return bindActionCreators({\r\n        // API Actions\r\n        fetchApiError: apiAction.fetchApiError,\r\n        // Movie Actions\r\n        fetchApiMovieNowPlaying: movieActions.fetchApiMovieNowPlaying,\r\n        fetchApiMoviePopular: movieActions.fetchApiMoviePopular,\r\n        fetchApiMovieTopRated: movieActions.fetchApiMovieTopRated,\r\n        fetchApiMovieUpcoming: movieActions.fetchApiMovieUpcoming,\r\n        // TV Actions\r\n        fetchApiTVAiringToday: tvActions.fetchApiTVAiringToday,\r\n        fetchApiTVOnTv: tvActions.fetchApiTVOnTv,\r\n        fetchApiTVPopular: tvActions.fetchApiTVPopular,\r\n        fetchApiTVTopRated: tvActions.fetchApiTVTopRated,\r\n      }, dispatch);\r\n  }\r\n  \r\n  export default connect(mapStateToProps, matchDispatchToProps)(GridPreview);","import React, {useState, useEffect} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\n\r\n// Actions\r\nimport * as appActions from '../../actions/AppAction';\r\n\r\n// Material UI Components\r\nimport { makeStyles, Fade, Grid, Typography, Box, IconButton, Button } from '@material-ui/core';\r\n\r\n// // Icons\r\nimport StarRoundedIcon from '@material-ui/icons/StarRounded';\r\nimport FavoriteBorderRoundedIcon from '@material-ui/icons/FavoriteBorderRounded';\r\nimport FavoriteRoundedIcon from '@material-ui/icons/FavoriteRounded';\r\nimport AddRoundedIcon from '@material-ui/icons/AddRounded';\r\nimport RemoveRoundedIcon from '@material-ui/icons/RemoveRounded';\r\n\r\n// Material UI Custom Component Style\r\nconst useStyles = makeStyles((theme) => ({\r\n    Poster: {\r\n        width: '100%',\r\n        borderRadius: theme.shape.borderRadius,\r\n    },\r\n    Margin: {\r\n        margin: theme.spacing(1, 0)\r\n    },\r\n    Rating: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        marginLeft: theme.spacing(0.25, 0),\r\n        lineHeight: 'normal',\r\n        '& svg': {\r\n            fontSize: theme.typography.h4.fontSize,\r\n            color: theme.palette.warning.main,\r\n        }\r\n    },\r\n    LikeButton: {\r\n        borderRadius: theme.shape.borderRadius,\r\n        boxShadow: 'none',\r\n        \r\n        '& svg': {\r\n            fontSize: theme.typography.h4.fontSize,\r\n        },\r\n\r\n        '&:hover': {\r\n            boxShadow: 'none',\r\n            color: theme.palette.error.main,\r\n        }\r\n    },\r\n    LikedButton: {\r\n        color: theme.palette.error.main,\r\n        '&:hover': {\r\n            color: theme.palette.error.main,\r\n        }\r\n    },\r\n    WatchlistButton: {\r\n        boxShadow: 'none',\r\n        borderRadius: theme.shape.borderRadius,\r\n        color: theme.palette.common.white,\r\n        fontSize: theme.typography.h6.fontSize,\r\n        transition: '0.4s ease-in-out',\r\n        '&:hover': {\r\n            boxShadow: 'none',\r\n            background: theme.palette.primary.dark,\r\n        }\r\n    },\r\n    WatchlistRemoveButton: {\r\n        background: theme.palette.error.main,\r\n        '&:hover': {\r\n            background: theme.palette.error.dark,\r\n        }\r\n    },\r\n    ButtonContent: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        lineHeight: 'normal'\r\n    },\r\n    TrendingContainer: {\r\n        overflowX: 'auto',\r\n        overflowY: 'hidden'\r\n    },\r\n    TrendingItem: {\r\n        cursor: 'pointer',\r\n        width: '342px'\r\n    },\r\n    SimilarPoster: {\r\n        borderRadius: theme.shape.borderRadius,\r\n        transition: '0.4s ease-in-out',\r\n\r\n        '&:hover': {\r\n            filter: 'brightness(50%)',\r\n        }\r\n    },\r\n    '@media (max-width: 425px)': {\r\n        Rating: {\r\n            margin: theme.spacing(1, 0)\r\n        },\r\n    },\r\n    '@media (min-width: 1024px)': {\r\n        Margin: {\r\n            margin: theme.spacing(2, 0)\r\n        },\r\n    },\r\n}));\r\n\r\nconst Preview = (props) => {\r\n    const Style = useStyles();\r\n\r\n    // Preview State\r\n    const [animation, setAnimation] = useState(true);\r\n    const [hasFetched, setHasFetched] = useState(false);\r\n    const [fetchedData, setFetchedData] = useState([]);\r\n\r\n    const item = props.preview;\r\n\r\n    // This method will update the users & user state and local storage\r\n    const handleUpdateState = (users, user) => {\r\n        localStorage.setItem('users', JSON.stringify(users));\r\n        localStorage.setItem('user', JSON.stringify(user));\r\n\r\n        props.setUsers(users);\r\n        props.setUser(user);\r\n    }\r\n\r\n    /* \r\n        This method will check whether array passed contains the item that was clicked on,\r\n        If so it will remove the item, if not it will add the item depending if its likes or watchlist\r\n        and if it is movie or tv\r\n    */\r\n    const addRemoveList = (users, user, item, array, category, type) => {\r\n        let check = false;\r\n\r\n        array.forEach(otherItem => {\r\n            if(otherItem.id === item.id){\r\n                check = true;\r\n                return\r\n            }else{\r\n                return\r\n            }\r\n        })\r\n\r\n        if(check === true){\r\n            const updateLikedArray = array.filter(otherItem => otherItem.id !== item.id);\r\n\r\n            const updatedUser = {\r\n                ...user,\r\n                [type]: {...user[type], [category]: updateLikedArray}\r\n            }\r\n\r\n            const updatedUsers = users.map(item => {\r\n                let newitem = {};\r\n    \r\n                if(item.id === updatedUser.id){\r\n                    newitem = updatedUser \r\n                }else{\r\n                    return item;\r\n                }\r\n    \r\n                return newitem === {} ? item : newitem\r\n\r\n            })\r\n\r\n            handleUpdateState(updatedUsers, updatedUser);\r\n\r\n            return\r\n        }else{\r\n            array.push(item);\r\n    \r\n            const updatedUser = {\r\n                ...user,\r\n                [type]: {...user[type], [category]: array}\r\n            }\r\n    \r\n            const updatedUsers = users.map(item => {\r\n                let newitem = {};\r\n    \r\n                if(item.id === updatedUser.id){\r\n                    newitem = updatedUser \r\n                }else{\r\n                    return item;\r\n                }\r\n    \r\n                return newitem === {} ? item : newitem\r\n\r\n            })\r\n\r\n            handleUpdateState(updatedUsers, updatedUser);\r\n        }\r\n    }\r\n\r\n    // This method will be called whenever a user clicks on the heart of any item \r\n    const handleLikeMovie = (item, category) => {\r\n        const users = [...props.users];\r\n        const user = {...props.user};\r\n        const newLikedArray = [...user.likes[category]];\r\n        \r\n        addRemoveList(users, user, item, newLikedArray, category, 'likes')\r\n    }\r\n\r\n    // This method will be called whenever a user clicks on the watchlist button of any item\r\n    const handleAddToWatchlist = (item, category) => {\r\n        const users = [...props.users];\r\n        const user = {...props.user};\r\n        const newWatchlistArray = [...user.watchlist[category]];\r\n        \r\n        addRemoveList(users, user, item, newWatchlistArray, category, 'watchlist')\r\n    }\r\n\r\n    // This method renders the like button either the like or unlike button\r\n    const renderLike = (item, category) => {\r\n        let check = false;\r\n\r\n        props.user.likes[category].forEach(likeItem => {\r\n            if(likeItem.id === item.id){\r\n                check = true;\r\n                return\r\n            }else{\r\n                return\r\n            }\r\n        })\r\n\r\n        if(check === true){\r\n            return(\r\n                <FavoriteRoundedIcon className={`${Style.LikeButton} ${Style.LikedButton}`} />\r\n            )\r\n        }else{\r\n            return(\r\n                <FavoriteBorderRoundedIcon />                \r\n            )\r\n        }\r\n    }\r\n\r\n    // This method renders the watchlist button either the remove or add watchlist\r\n    const renderWatchlist = (item, category) => {\r\n        let check = false;\r\n\r\n        props.user.watchlist[category].forEach(watchItem => {\r\n            if(watchItem.id === item.id){\r\n                check = true;\r\n                return\r\n            }else{\r\n                return\r\n            }\r\n        })\r\n\r\n        if(check === true){\r\n            return(\r\n                <Button className={`${Style.WatchlistButton} ${Style.WatchlistRemoveButton}`} disableRipple variant='contained' onClick={() => handleAddToWatchlist(item, category)} disabled={props.user.access === 'guest' ? true : false}>\r\n                    <div className={Style.ButtonContent}>\r\n                        <RemoveRoundedIcon />\r\n                        <Box mr={0.75} />\r\n                        <span>Watchlist</span>\r\n                    </div> \r\n                </Button>\r\n            )\r\n        }else{\r\n            return(   \r\n                <Button color='primary' className={Style.WatchlistButton} disableRipple variant='contained' onClick={() => handleAddToWatchlist(item, category)} disabled={props.user.access === 'guest' ? true : false}>\r\n                    <div className={Style.ButtonContent}>\r\n                        <AddRoundedIcon />\r\n                        <Box mr={0.75} />\r\n                        <span>Watchlist</span>\r\n                    </div> \r\n                </Button>   \r\n            )\r\n        }\r\n    }\r\n\r\n    // This method will open the preview page to display further details \r\n    const handleOpenPreview = (item, media) => {\r\n        \r\n        setAnimation(false);\r\n        \r\n        setTimeout(() => {\r\n            window.scrollTo(0, 0);\r\n            setAnimation(true);\r\n            props.setPreview(item); \r\n            props.setGridPreviewApiCategory(media);\r\n            props.setGridPreviewApiType('preview');\r\n        }, 1000);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const key = 'c287015949cec13fb17a26e50b4f054a';\r\n\r\n        if(hasFetched === false){\r\n            fetch(`https://api.themoviedb.org/3/${props.gridPreviewApiCategory}/${item.id}/similar?&api_key=${key}&language=en-US&include_adult=false`)\r\n                .then(response => response.json())\r\n                .then(json => {\r\n                    setHasFetched(true);\r\n                    setFetchedData(json.results);\r\n                    return;\r\n                })\r\n                .catch(error => console.log(error));  \r\n        } else {\r\n            return\r\n        }\r\n    }, [hasFetched, item, props.gridPreviewApiCategory])\r\n\r\n    return (\r\n        <Fade in={animation} timeout={1000} >\r\n            <Grid container direction='column'>\r\n                <Grid item container direction='row' alignItems='center' justify='space-between'>\r\n                    <Typography className={Style.Title} variant='h2' style={{fontWeight: '700'}}>\r\n                        {(props.gridPreviewApiCategory === 'tv') ? item.original_name : (props.gridPreviewApiCategory === 'movie') ? item.title : ''}\r\n                    </Typography>\r\n                    <Typography className={Style.Rating} variant='h4'>\r\n                        <StarRoundedIcon />\r\n                        <span>\r\n                            {item.vote_average}\r\n                        </span>\r\n                    </Typography>\r\n                </Grid>\r\n                <Box className={Style.Margin} />\r\n                <Grid item>\r\n                    <img \r\n                        alt={(props.gridPreviewApiCategory === 'tv') ? item.original_name : (props.gridPreviewApiCategory === 'movie') ? item.title : ''}\r\n                        className={Style.Poster}\r\n                        src={`https://image.tmdb.org/t/p/w780/${item.backdrop_path}`}\r\n                    />\r\n                    <Box className={Style.Margin} />\r\n                    <Typography variant='h4'>\r\n                        Overview\r\n                    </Typography>\r\n                    <Box my={0.25} />\r\n                    <Typography variant='body1' paragraph>\r\n                        {item.overview}\r\n                    </Typography>\r\n                    <Grid item container direction='row' alignItems='center' justify='flex-start'>\r\n                        <IconButton aria-label='Like' className={Style.LikeButton} disableRipple onClick={() => handleLikeMovie(item, props.gridPreviewApiCategory)} disabled={props.user.access === 'guest' ? true : false}>\r\n                            {\r\n                                renderLike(item, props.gridPreviewApiCategory)\r\n                            }\r\n                        </IconButton>\r\n                        <Box mx={0.25} />\r\n                        {\r\n                            renderWatchlist(item, props.gridPreviewApiCategory)\r\n                        }\r\n                    </Grid>\r\n                </Grid>\r\n                <Box className={Style.Margin} />\r\n                <Typography variant='h5'>\r\n                    {`Similar ${(props.gridPreviewApiCategory === 'tv') ? 'TV Shows' : (props.gridPreviewApiCategory === 'movie') ? 'Movies' : ''}`} \r\n                </Typography>\r\n                <Box my={0.25} />\r\n                <Grid className={Style.TrendingContainer} item container direction='row' wrap='nowrap' justify='flex-start'>\r\n                    {\r\n                        (fetchedData === {} || fetchedData === undefined)\r\n                            ? null\r\n                                :\r\n                                fetchedData.map((item, index) => {\r\n                                    return(\r\n                                        <Box className={`${Style.TrendingItem} animated fadeInSign`} style={{animationDelay: (index % 2 === 0) ? 250 : 750}} key={item.id} my={2} mr={2}>\r\n                                            <img \r\n                                                alt={(props.gridPreviewApiCategory === 'tv') ? item.original_name : (props.gridPreviewApiCategory === 'movie') ? item.title : ''}\r\n                                                className={Style.SimilarPoster}\r\n                                                src={`https://image.tmdb.org/t/p/w342/${item.poster_path}`}\r\n                                                onMouseDown={() => handleOpenPreview(item, props.gridPreviewApiCategory)}\r\n                                            />\r\n                                        </Box>\r\n                                    );\r\n                                })\r\n                    } \r\n                </Grid>\r\n            </Grid>\r\n        </Fade>\r\n    )\r\n}\r\n\r\n// Fetching state from store\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        // Internal State (APP)\r\n        gridPreviewApiCategory: state.app.gridPreviewApiCategory,\r\n        preview: state.app.preview,\r\n        users: state.app.users,\r\n        user: state.app.user,\r\n    };\r\n  };\r\n  \r\n  // Sending some data to an action\r\n  const matchDispatchToProps = (dispatch) => {\r\n      return bindActionCreators({\r\n        setGridPreviewApiCategory: appActions.setGridPreviewApiCategory,\r\n        setGridPreviewApiType: appActions.setGridPreviewApiType,\r\n        setPreview: appActions.setPreview, \r\n        setUsers: appActions.setUsers, \r\n        setUser: appActions.setUser \r\n      }, dispatch);\r\n  }\r\n  \r\n  export default connect(mapStateToProps, matchDispatchToProps)(Preview);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\n// Actions\nimport * as appActions from '../actions/AppAction';\nimport * as apiAction from '../actions/apiActions/Api';\nimport * as movieActions from '../actions/apiActions/Movies';\nimport * as tvActions from '../actions/apiActions/TV';\nimport fetchApi from '../utils/fetchApi';\n\n// Components\nimport SignDialog from '../components/SignDialog/SignDialog';\nimport AccountSettings from '../components/AccountSettings/AccountSettings';\nimport Header from '../components/Header/Header';\nimport Home from '../components/Home/Home';\nimport UserData from '../components/UserData/UserData';\nimport GridPreview from '../components/GridPreview/GridPreview';\nimport Preview from '../components/Preview/Preview';\n\n// Material UI Components\nimport { CssBaseline, createMuiTheme, ThemeProvider, Container, Box } from '@material-ui/core';\n\nclass App extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      // Material UI Custom Theme\n      theme: createMuiTheme({\n        palette: {\n          common: {\n            black: '#212121',\n            white: '#FAFAFA',\n          },\n          primary: {\n            main: this.props.user.color || '#455A64',\n          },\n          secondary: {\n            main: '#455A64'\n          },\n          error: {\n            main: '#EF5350',\n          },\n          success: {\n            main: '#66BB6A',\n          },\n          contrastThreshold: 4,\n          text: {\n            primary: '#212121',\n            secondary: '#616161',\n          },\n          action: {\n            hover: 'rgba(0, 0, 0, 0.08)',\n            focus: 'rgba(0, 0, 0, 0.14)',\n          }\n        },\n        typography: {\n          fontFamily: \"'Work Sans', 'Roboto', 'Helvetica', 'Arial', 'sans-serif'\",\n        },\n      })\n    }\n  }\n\n  componentDidMount = () => {\n    const key = 'c287015949cec13fb17a26e50b4f054a';\n\n    const getUser = JSON.parse(localStorage.getItem('user') || '{}');\n\n    if((Object.keys(getUser).length === 0) !== true){\n      this.props.setOpenSignDialog(false);\n    }\n\n    this.fetchTrendingApiData(key);\n    this.fetchTrendingApiPopular(key);\n    this.fetchTrendingApiGenres(key);\n  }\n\n  fetchTrendingApiData = (key) => {\n      fetchApi(`https://api.themoviedb.org/3/trending/all/week?&api_key=${key}`, this.props.fetchApiTrending);\n  }\n\n  fetchTrendingApiPopular = (key) => {\n    const types = [\n      {\n        action: this.props.fetchApiMoviePopular,\n        type: 'movie',\n      },\n      {\n        action: this.props.fetchApiTVPopular,\n        type: 'tv',\n      },\n    ]\n\n    types.forEach(item => {\n      fetchApi(`https://api.themoviedb.org/3/${item.type}/popular?api_key=${key}&language=en-US`, item.action);\n    });\n  }\n\n  fetchTrendingApiGenres = (key) => {\n    const types = [\n      {\n        action: this.props.fetchApiMovieGenres,\n        type: 'movie',\n      },\n      {\n        action: this.props.fetchApiTVGenres,\n        type: 'tv',\n      },\n    ]\n\n    types.forEach(item => {\n      fetchApi(`https://api.themoviedb.org/3/genre/${item.type}/list?api_key=${key}&language=en-US`, item.action);\n    });\n  }\n\n  render(){\n    return(\n      <React.Fragment>\n        <CssBaseline />\n          <ThemeProvider theme={this.state.theme}>\n            <Container className={'animated fadeInHeader'} maxWidth='md'>\n              <Header />\n              <Box py={2}>\n                {\n                  (this.props.gridPreviewApiCategory === 'likes' || this.props.gridPreviewApiCategory === 'watchlist')\n                    ?\n                    <UserData />\n                      :\n                      (this.props.gridPreviewApiType === 'preview')\n                        ? <Preview />\n                          :\n                          (this.props.gridPreviewApiCategory === '' || this.props.gridPreviewApiType === '')\n                            ?\n                            <Home />\n                              :\n                              <GridPreview />\n                }\n              </Box>\n              <SignDialog />\n              <AccountSettings />\n            </Container>\n          </ThemeProvider>\n      </React.Fragment>\n    );\n  }\n};\n\n// Fetching state from store\nconst mapStateToProps = (state) => {\n  return{\n    // Internal State (APP)\n    openSignDialog: state.app.openSignDialog,\n    openSearchDialog: state.app.openSearchDialog,\n    gridPreviewApiCategory: state.app.gridPreviewApiCategory,\n    gridPreviewApiType: state.app.gridPreviewApiType,\n    gridPreviewApiTitle: state.app.gridPreviewApiTitle,\n    user: state.app.user,\n  };\n};\n\n// Sending some data to an action\nconst matchDispatchToProps = (dispatch) => {\n    return bindActionCreators({\n      setOpenSignDialog: appActions.setOpenSignDialog,\n      // API Actions\n      fetchApiTrending: apiAction.fetchApiTrending,\n      // API Movies\n      fetchApiMoviePopular: movieActions.fetchApiMoviePopular,\n      fetchApiMovieGenres: movieActions.fetchApiMovieGenres,\n      // API TV\n      fetchApiTVPopular: tvActions.fetchApiTVPopular,\n      fetchApiTVGenres: tvActions.fetchApiTVGenres,\n    }, dispatch);\n}\n\nexport default connect(mapStateToProps, matchDispatchToProps)(App);","// React library\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\n// Redux Store\nimport store from './store/store';\n\n// Components\nimport App from './container/App';\n\n// Style sheet\nimport './index.css';\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));"],"sourceRoot":""}